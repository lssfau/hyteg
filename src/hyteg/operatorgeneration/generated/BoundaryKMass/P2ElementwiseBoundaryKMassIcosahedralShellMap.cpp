/*
* Copyright (c) 2017-2024 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG Operator Generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/

// Unfortunately, the inverse diagonal kernel wrapper triggers a GCC bug (maybe
// (related to) https://gcc.gnu.org/bugzilla/show_bug.cgi?id=107087) causing a
// warning in an internal standard library header (bits/stl_algobase.h). As a
// workaround, we disable the warning and include this header indirectly through
// a public header.
#include <waLBerlaDefinitions.h>
#ifdef WALBERLA_CXX_COMPILER_IS_GNU
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wnonnull"
#endif
#include <cmath>
#ifdef WALBERLA_CXX_COMPILER_IS_GNU
#pragma GCC diagnostic pop
#endif

#include "P2ElementwiseBoundaryKMassIcosahedralShellMap.hpp"

#define FUNC_PREFIX

namespace hyteg {

namespace operatorgeneration {

P2ElementwiseBoundaryKMassIcosahedralShellMap::P2ElementwiseBoundaryKMassIcosahedralShellMap(
    const std::shared_ptr< PrimitiveStorage >& storage,
    size_t                                     minLevel,
    size_t                                     maxLevel,
    const P2Function< walberla::float64 >&     _k,
    BoundaryCondition                          boundaryCondition,
    BoundaryUID                                P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid )
: Operator( storage, minLevel, maxLevel )
, k( _k )
, boundaryCondition_( boundaryCondition )
, P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_( P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid )
{}

void P2ElementwiseBoundaryKMassIcosahedralShellMap::apply( const P2Function< walberla::float64 >& src,
                                                           const P2Function< walberla::float64 >& dst,
                                                           uint_t                                 level,
                                                           DoFType                                flag,
                                                           UpdateType                             updateType ) const
{
   this->startTiming( "apply" );

   // Make sure that halos are up-to-date
   this->timingTree_->start( "pre-communication" );
   if ( this->storage_->hasGlobalCells() )
   {
      // Note that the order of communication is important, since the face -> cell communication may overwrite
      // parts of the halos that carry the macro-vertex and macro-edge unknowns.
      src.communicate< Face, Cell >( level );
      src.communicate< Edge, Cell >( level );
      src.communicate< Vertex, Cell >( level );
      k.communicate< Face, Cell >( level );
      k.communicate< Edge, Cell >( level );
      k.communicate< Vertex, Cell >( level );
   }
   else
   {
      WALBERLA_ABORT( "Not implemented." );
   }
   this->timingTree_->stop( "pre-communication" );

   if ( updateType == Replace )
   {
      // We need to zero the destination array (including halos).
      // However, we must not zero out anything that is not flagged with the specified BCs.
      // Therefore, we first zero out everything that flagged, and then, later,
      // the halos of the highest dim primitives.
      dst.interpolate( walberla::numeric_cast< walberla::float64 >( 0 ), level, flag );
   }

   if ( storage_->hasGlobalCells() )
   {
      for ( auto& it : storage_->getCells() )
      {
         Cell& cell = *it.second;

         // get hold of the actual numerical data in the functions
         walberla::float64* _data_srcVertex = cell.getData( src.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_srcEdge   = cell.getData( src.getEdgeDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_dstVertex = cell.getData( dst.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_dstEdge   = cell.getData( dst.getEdgeDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_kVertex   = cell.getData( k.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_kEdge     = cell.getData( k.getEdgeDoFFunction().getCellDataID() )->getPointer( level );

         // Zero out dst halos only
         //
         // This is also necessary when using update type == Add.
         // During additive comm we then skip zeroing the data on the lower-dim primitives.
         for ( const auto& idx : vertexdof::macrocell::Iterator( level ) )
         {
            if ( !vertexdof::macrocell::isOnCellFace( idx, level ).empty() )
            {
               auto arrayIdx             = vertexdof::macrocell::index( level, idx.x(), idx.y(), idx.z() );
               _data_dstVertex[arrayIdx] = walberla::float64( 0 );
            }
         }
         edgedof::macrocell::setBoundaryToZero( level, cell, dst.getEdgeDoFFunction().getCellDataID() );

         const auto micro_edges_per_macro_edge                = (int64_t) levelinfo::num_microedges_per_edge( level );
         const auto num_microfaces_per_face                   = (int64_t) levelinfo::num_microfaces_per_face( level );
         const auto micro_edges_per_macro_edge_float          = (walberla::float64) levelinfo::num_microedges_per_edge( level );
         const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) cell.getCoordinates()[0][0];
         const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) cell.getCoordinates()[0][1];
         const walberla::float64 macro_vertex_coord_id_0comp2 = (walberla::float64) cell.getCoordinates()[0][2];
         const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) cell.getCoordinates()[1][0];
         const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) cell.getCoordinates()[1][1];
         const walberla::float64 macro_vertex_coord_id_1comp2 = (walberla::float64) cell.getCoordinates()[1][2];
         const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) cell.getCoordinates()[2][0];
         const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) cell.getCoordinates()[2][1];
         const walberla::float64 macro_vertex_coord_id_2comp2 = (walberla::float64) cell.getCoordinates()[2][2];
         const walberla::float64 macro_vertex_coord_id_3comp0 = (walberla::float64) cell.getCoordinates()[3][0];
         const walberla::float64 macro_vertex_coord_id_3comp1 = (walberla::float64) cell.getCoordinates()[3][1];
         const walberla::float64 macro_vertex_coord_id_3comp2 = (walberla::float64) cell.getCoordinates()[3][2];
         WALBERLA_CHECK_NOT_NULLPTR(
             std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() ),
             "This operator requires the IcosahedralShellMap to be registered as GeometryMap on every macro-cell." )
         real_t radRefVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRefVertex();
         real_t radRayVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRayVertex();
         real_t refVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[0];
         real_t rayVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[0];
         real_t thrVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[0];
         real_t forVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[0];
         real_t refVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[1];
         real_t rayVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[1];
         real_t thrVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[1];
         real_t forVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[1];
         real_t refVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[2];
         real_t rayVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[2];
         real_t thrVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[2];
         real_t forVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[2];

         this->timingTree_->start( "kernel" );

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_0_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_kEdge,
                _data_kVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_1_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_kEdge,
                _data_kVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_2_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_kEdge,
                _data_kVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[3] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_3_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_kEdge,
                _data_kVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         this->timingTree_->stop( "kernel" );
      }

      // Push result to lower-dimensional primitives
      //
      this->timingTree_->start( "post-communication" );
      // Note: We could avoid communication here by implementing the apply() also for the respective
      //       lower dimensional primitives!
      dst.getVertexDoFFunction().communicateAdditively< Cell, Face >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getVertexDoFFunction().communicateAdditively< Cell, Edge >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getVertexDoFFunction().communicateAdditively< Cell, Vertex >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getEdgeDoFFunction().communicateAdditively< Cell, Face >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getEdgeDoFFunction().communicateAdditively< Cell, Edge >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      this->timingTree_->stop( "post-communication" );
   }
   else
   {
      WALBERLA_ABORT( "Not implemented." );
   }

   this->stopTiming( "apply" );
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::toMatrix( const std::shared_ptr< SparseMatrixProxy >& mat,
                                                              const P2Function< idx_t >&                  src,
                                                              const P2Function< idx_t >&                  dst,
                                                              uint_t                                      level,
                                                              DoFType                                     flag ) const
{
   this->startTiming( "toMatrix" );

   // We currently ignore the flag provided!
   if ( flag != All )
   {
      WALBERLA_LOG_WARNING_ON_ROOT( "Input flag ignored in toMatrix; using flag = All" );
   }

   if ( storage_->hasGlobalCells() )
   {
      this->timingTree_->start( "pre-communication" );
      k.communicate< Face, Cell >( level );
      k.communicate< Edge, Cell >( level );
      k.communicate< Vertex, Cell >( level );
      this->timingTree_->stop( "pre-communication" );

      for ( auto& it : storage_->getCells() )
      {
         Cell& cell = *it.second;

         // get hold of the actual numerical data
         idx_t*             _data_srcVertex = cell.getData( src.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         idx_t*             _data_srcEdge   = cell.getData( src.getEdgeDoFFunction().getCellDataID() )->getPointer( level );
         idx_t*             _data_dstVertex = cell.getData( dst.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         idx_t*             _data_dstEdge   = cell.getData( dst.getEdgeDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_kVertex   = cell.getData( k.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_kEdge     = cell.getData( k.getEdgeDoFFunction().getCellDataID() )->getPointer( level );

         const auto micro_edges_per_macro_edge                = (int64_t) levelinfo::num_microedges_per_edge( level );
         const auto num_microfaces_per_face                   = (int64_t) levelinfo::num_microfaces_per_face( level );
         const auto micro_edges_per_macro_edge_float          = (walberla::float64) levelinfo::num_microedges_per_edge( level );
         const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) cell.getCoordinates()[0][0];
         const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) cell.getCoordinates()[0][1];
         const walberla::float64 macro_vertex_coord_id_0comp2 = (walberla::float64) cell.getCoordinates()[0][2];
         const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) cell.getCoordinates()[1][0];
         const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) cell.getCoordinates()[1][1];
         const walberla::float64 macro_vertex_coord_id_1comp2 = (walberla::float64) cell.getCoordinates()[1][2];
         const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) cell.getCoordinates()[2][0];
         const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) cell.getCoordinates()[2][1];
         const walberla::float64 macro_vertex_coord_id_2comp2 = (walberla::float64) cell.getCoordinates()[2][2];
         const walberla::float64 macro_vertex_coord_id_3comp0 = (walberla::float64) cell.getCoordinates()[3][0];
         const walberla::float64 macro_vertex_coord_id_3comp1 = (walberla::float64) cell.getCoordinates()[3][1];
         const walberla::float64 macro_vertex_coord_id_3comp2 = (walberla::float64) cell.getCoordinates()[3][2];
         WALBERLA_CHECK_NOT_NULLPTR(
             std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() ),
             "This operator requires the IcosahedralShellMap to be registered as GeometryMap on every macro-cell." )
         real_t radRefVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRefVertex();
         real_t radRayVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRayVertex();
         real_t refVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[0];
         real_t rayVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[0];
         real_t thrVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[0];
         real_t forVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[0];
         real_t refVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[1];
         real_t rayVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[1];
         real_t thrVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[1];
         real_t forVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[1];
         real_t refVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[2];
         real_t rayVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[2];
         real_t thrVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[2];
         real_t forVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[2];

         this->timingTree_->start( "kernel" );

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_0_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_kEdge,
                _data_kVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_1_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_kEdge,
                _data_kVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_2_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_kEdge,
                _data_kVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[3] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_3_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_kEdge,
                _data_kVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         this->timingTree_->stop( "kernel" );
      }
   }
   else
   {
      this->timingTree_->start( "pre-communication" );
      communication::syncFunctionBetweenPrimitives( k, level, communication::syncDirection_t::LOW2HIGH );
      this->timingTree_->stop( "pre-communication" );

      WALBERLA_ABORT( "Not implemented." );
   }
   this->stopTiming( "toMatrix" );
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::computeInverseDiagonalOperatorValues()
{
   this->startTiming( "computeInverseDiagonalOperatorValues" );

   if ( invDiag_ == nullptr )
   {
      invDiag_ =
          std::make_shared< P2Function< walberla::float64 > >( "inverse diagonal entries", storage_, minLevel_, maxLevel_ );
   }

   for ( uint_t level = minLevel_; level <= maxLevel_; level++ )
   {
      invDiag_->setToZero( level );

      if ( storage_->hasGlobalCells() )
      {
         this->timingTree_->start( "pre-communication" );
         k.communicate< Face, Cell >( level );
         k.communicate< Edge, Cell >( level );
         k.communicate< Vertex, Cell >( level );
         this->timingTree_->stop( "pre-communication" );

         for ( auto& it : storage_->getCells() )
         {
            Cell& cell = *it.second;

            // get hold of the actual numerical data
            walberla::float64* _data_invDiag_Vertex =
                cell.getData( ( *invDiag_ ).getVertexDoFFunction().getCellDataID() )->getPointer( level );
            walberla::float64* _data_invDiag_Edge =
                cell.getData( ( *invDiag_ ).getEdgeDoFFunction().getCellDataID() )->getPointer( level );
            walberla::float64* _data_kVertex = cell.getData( k.getVertexDoFFunction().getCellDataID() )->getPointer( level );
            walberla::float64* _data_kEdge   = cell.getData( k.getEdgeDoFFunction().getCellDataID() )->getPointer( level );

            const auto micro_edges_per_macro_edge       = (int64_t) levelinfo::num_microedges_per_edge( level );
            const auto num_microfaces_per_face          = (int64_t) levelinfo::num_microfaces_per_face( level );
            const auto micro_edges_per_macro_edge_float = (walberla::float64) levelinfo::num_microedges_per_edge( level );
            const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) cell.getCoordinates()[0][0];
            const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) cell.getCoordinates()[0][1];
            const walberla::float64 macro_vertex_coord_id_0comp2 = (walberla::float64) cell.getCoordinates()[0][2];
            const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) cell.getCoordinates()[1][0];
            const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) cell.getCoordinates()[1][1];
            const walberla::float64 macro_vertex_coord_id_1comp2 = (walberla::float64) cell.getCoordinates()[1][2];
            const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) cell.getCoordinates()[2][0];
            const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) cell.getCoordinates()[2][1];
            const walberla::float64 macro_vertex_coord_id_2comp2 = (walberla::float64) cell.getCoordinates()[2][2];
            const walberla::float64 macro_vertex_coord_id_3comp0 = (walberla::float64) cell.getCoordinates()[3][0];
            const walberla::float64 macro_vertex_coord_id_3comp1 = (walberla::float64) cell.getCoordinates()[3][1];
            const walberla::float64 macro_vertex_coord_id_3comp2 = (walberla::float64) cell.getCoordinates()[3][2];
            WALBERLA_CHECK_NOT_NULLPTR(
                std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() ),
                "This operator requires the IcosahedralShellMap to be registered as GeometryMap on every macro-cell." )
            real_t radRefVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRefVertex();
            real_t radRayVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRayVertex();
            real_t refVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[0];
            real_t rayVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[0];
            real_t thrVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[0];
            real_t forVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[0];
            real_t refVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[1];
            real_t rayVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[1];
            real_t thrVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[1];
            real_t forVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[1];
            real_t refVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[2];
            real_t rayVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[2];
            real_t thrVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[2];
            real_t forVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[2];

            this->timingTree_->start( "kernel" );

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_0_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   _data_kEdge,
                   _data_kVertex,
                   forVertex_0,
                   forVertex_1,
                   forVertex_2,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float,
                   radRayVertex,
                   radRefVertex,
                   rayVertex_0,
                   rayVertex_1,
                   rayVertex_2,
                   refVertex_0,
                   refVertex_1,
                   refVertex_2,
                   thrVertex_0,
                   thrVertex_1,
                   thrVertex_2 );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_1_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   _data_kEdge,
                   _data_kVertex,
                   forVertex_0,
                   forVertex_1,
                   forVertex_2,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float,
                   radRayVertex,
                   radRefVertex,
                   rayVertex_0,
                   rayVertex_1,
                   rayVertex_2,
                   refVertex_0,
                   refVertex_1,
                   refVertex_2,
                   thrVertex_0,
                   thrVertex_1,
                   thrVertex_2 );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_2_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   _data_kEdge,
                   _data_kVertex,
                   forVertex_0,
                   forVertex_1,
                   forVertex_2,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float,
                   radRayVertex,
                   radRefVertex,
                   rayVertex_0,
                   rayVertex_1,
                   rayVertex_2,
                   refVertex_0,
                   refVertex_1,
                   refVertex_2,
                   thrVertex_0,
                   thrVertex_1,
                   thrVertex_2 );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[3] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryKMassIcosahedralShellMap_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_3_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   _data_kEdge,
                   _data_kVertex,
                   forVertex_0,
                   forVertex_1,
                   forVertex_2,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float,
                   radRayVertex,
                   radRefVertex,
                   rayVertex_0,
                   rayVertex_1,
                   rayVertex_2,
                   refVertex_0,
                   refVertex_1,
                   refVertex_2,
                   thrVertex_0,
                   thrVertex_1,
                   thrVertex_2 );
            }

            this->timingTree_->stop( "kernel" );
         }

         // Push result to lower-dimensional primitives
         //
         this->timingTree_->start( "post-communication" );
         // Note: We could avoid communication here by implementing the apply() also for the respective
         //       lower dimensional primitives!
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Face >( level );
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Edge >( level );
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Vertex >( level );
         ( *invDiag_ ).getEdgeDoFFunction().communicateAdditively< Cell, Face >( level );
         ( *invDiag_ ).getEdgeDoFFunction().communicateAdditively< Cell, Edge >( level );
         this->timingTree_->stop( "post-communication" );
         ( *invDiag_ ).invertElementwise( level );
      }
      else
      {
         this->timingTree_->start( "pre-communication" );
         communication::syncFunctionBetweenPrimitives( k, level, communication::syncDirection_t::LOW2HIGH );
         this->timingTree_->stop( "pre-communication" );

         WALBERLA_ABORT( "Not implemented." );
         ( *invDiag_ ).invertElementwise( level );
      }
   }

   this->stopTiming( "computeInverseDiagonalOperatorValues" );
}
std::shared_ptr< P2Function< walberla::float64 > > P2ElementwiseBoundaryKMassIcosahedralShellMap::getInverseDiagonalValues() const
{
   return invDiag_;
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::apply_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_0_macro_3D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_kEdge,
    walberla::float64* RESTRICT _data_kVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           forVertex_0,
    walberla::float64           forVertex_1,
    walberla::float64           forVertex_2,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float,
    walberla::float64           radRayVertex,
    walberla::float64           radRefVertex,
    walberla::float64           rayVertex_0,
    walberla::float64           rayVertex_1,
    walberla::float64           rayVertex_2,
    walberla::float64           refVertex_0,
    walberla::float64           refVertex_1,
    walberla::float64           refVertex_2,
    walberla::float64           thrVertex_0,
    walberla::float64           thrVertex_1,
    walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_103 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 *
                                ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                                  ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                            tmp_kernel_op_167 *
                                ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                                  ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                            tmp_kernel_op_199 *
                                ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                                  ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                            tmp_kernel_op_231 *
                                ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                                  ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                                 ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 *
                                ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                  ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_242 + src_dof_2 * tmp_kernel_op_243 + src_dof_3 * tmp_kernel_op_244 +
                      src_dof_4 * tmp_kernel_op_239 + src_dof_5 * tmp_kernel_op_240 + src_dof_6 * tmp_kernel_op_241 +
                      src_dof_7 * tmp_kernel_op_245 + src_dof_8 * tmp_kernel_op_246 + src_dof_9 * tmp_kernel_op_247;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_242 +
                      src_dof_1 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_201 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_201 - 0.050643253661728158 ) ) ) +
                      src_dof_2 * tmp_kernel_op_265 + src_dof_3 * tmp_kernel_op_266 + src_dof_4 * tmp_kernel_op_262 +
                      src_dof_5 * tmp_kernel_op_263 + src_dof_6 * tmp_kernel_op_264 + src_dof_7 * tmp_kernel_op_267 +
                      src_dof_8 * tmp_kernel_op_268 + src_dof_9 * tmp_kernel_op_269;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_243 + src_dof_1 * tmp_kernel_op_265 +
                      src_dof_2 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_202 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_202 - 0.050643253661728158 ) ) ) +
                      src_dof_3 * tmp_kernel_op_280 + src_dof_4 * tmp_kernel_op_277 + src_dof_5 * tmp_kernel_op_278 +
                      src_dof_6 * tmp_kernel_op_279 + src_dof_7 * tmp_kernel_op_281 + src_dof_8 * tmp_kernel_op_282 +
                      src_dof_9 * tmp_kernel_op_283;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_244 + src_dof_1 * tmp_kernel_op_266 + src_dof_2 * tmp_kernel_op_280 +
                      src_dof_3 * ( tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) ) +
                      src_dof_4 * tmp_kernel_op_292 + src_dof_5 * tmp_kernel_op_293 + src_dof_6 * tmp_kernel_op_294 +
                      src_dof_7 * tmp_kernel_op_295 + src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_239 + src_dof_1 * tmp_kernel_op_262 + src_dof_2 * tmp_kernel_op_277 +
                      src_dof_3 * tmp_kernel_op_292 +
                      src_dof_4 * ( tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                                    tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                                    tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                                    tmp_kernel_op_300 * tmp_kernel_op_74 ) +
                      src_dof_5 * tmp_kernel_op_305 + src_dof_6 * tmp_kernel_op_313 + src_dof_7 * tmp_kernel_op_321 +
                      src_dof_8 * tmp_kernel_op_329 + src_dof_9 * tmp_kernel_op_337;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_240 + src_dof_1 * tmp_kernel_op_263 + src_dof_2 * tmp_kernel_op_278 +
                      src_dof_3 * tmp_kernel_op_293 + src_dof_4 * tmp_kernel_op_305 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                                    tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                                    tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                                    tmp_kernel_op_300 * tmp_kernel_op_73 ) +
                      src_dof_6 * tmp_kernel_op_338 + src_dof_7 * tmp_kernel_op_339 + src_dof_8 * tmp_kernel_op_340 +
                      src_dof_9 * tmp_kernel_op_341;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_241 + src_dof_1 * tmp_kernel_op_264 + src_dof_2 * tmp_kernel_op_279 +
                      src_dof_3 * tmp_kernel_op_294 + src_dof_4 * tmp_kernel_op_313 + src_dof_5 * tmp_kernel_op_338 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                                    tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                                    tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                                    tmp_kernel_op_308 * tmp_kernel_op_73 ) +
                      src_dof_7 * tmp_kernel_op_342 + src_dof_8 * tmp_kernel_op_343 + src_dof_9 * tmp_kernel_op_344;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_245 + src_dof_1 * tmp_kernel_op_267 + src_dof_2 * tmp_kernel_op_281 +
                      src_dof_3 * tmp_kernel_op_295 + src_dof_4 * tmp_kernel_op_321 + src_dof_5 * tmp_kernel_op_339 +
                      src_dof_6 * tmp_kernel_op_342 +
                      src_dof_7 *
                          ( tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                           ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_346 + src_dof_9 * tmp_kernel_op_347;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_246 + src_dof_1 * tmp_kernel_op_268 + src_dof_2 * tmp_kernel_op_282 +
                      src_dof_3 * tmp_kernel_op_296 + src_dof_4 * tmp_kernel_op_329 + src_dof_5 * tmp_kernel_op_340 +
                      src_dof_6 * tmp_kernel_op_343 + src_dof_7 * tmp_kernel_op_346 +
                      src_dof_8 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) ) ) +
                      src_dof_9 * tmp_kernel_op_348;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_247 + src_dof_1 * tmp_kernel_op_269 + src_dof_2 * tmp_kernel_op_283 +
                      src_dof_3 * tmp_kernel_op_297 + src_dof_4 * tmp_kernel_op_337 + src_dof_5 * tmp_kernel_op_341 +
                      src_dof_6 * tmp_kernel_op_344 + src_dof_7 * tmp_kernel_op_347 + src_dof_8 * tmp_kernel_op_348 +
                      src_dof_9 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_UP */
         const walberla::float64 tmp_coords_jac_0_BLUE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_6_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_3_0_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) +
             tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_3_1_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) +
             tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_3_2_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) +
             tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
         const walberla::float64 jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
         const walberla::float64 jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
         const walberla::float64 jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
         const walberla::float64 jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
         const walberla::float64 jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_48 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_54 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_54 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_48 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_81 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_87 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_87 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_81 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_113 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_119 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_119 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_113 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_145 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_151 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_151 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_145 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_177 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_183 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_183 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_177 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_209 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_215 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_215 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_209 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_103 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 *
                                ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                                  ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                            tmp_kernel_op_167 *
                                ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                                  ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                            tmp_kernel_op_199 *
                                ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                                  ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                            tmp_kernel_op_231 *
                                ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                                  ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                                 ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 *
                                ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                  ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_242 + src_dof_2 * tmp_kernel_op_243 + src_dof_3 * tmp_kernel_op_244 +
                      src_dof_4 * tmp_kernel_op_239 + src_dof_5 * tmp_kernel_op_240 + src_dof_6 * tmp_kernel_op_241 +
                      src_dof_7 * tmp_kernel_op_245 + src_dof_8 * tmp_kernel_op_246 + src_dof_9 * tmp_kernel_op_247;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_242 +
                      src_dof_1 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_201 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_201 - 0.050643253661728158 ) ) ) +
                      src_dof_2 * tmp_kernel_op_265 + src_dof_3 * tmp_kernel_op_266 + src_dof_4 * tmp_kernel_op_262 +
                      src_dof_5 * tmp_kernel_op_263 + src_dof_6 * tmp_kernel_op_264 + src_dof_7 * tmp_kernel_op_267 +
                      src_dof_8 * tmp_kernel_op_268 + src_dof_9 * tmp_kernel_op_269;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_243 + src_dof_1 * tmp_kernel_op_265 +
                      src_dof_2 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_202 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_202 - 0.050643253661728158 ) ) ) +
                      src_dof_3 * tmp_kernel_op_280 + src_dof_4 * tmp_kernel_op_277 + src_dof_5 * tmp_kernel_op_278 +
                      src_dof_6 * tmp_kernel_op_279 + src_dof_7 * tmp_kernel_op_281 + src_dof_8 * tmp_kernel_op_282 +
                      src_dof_9 * tmp_kernel_op_283;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_244 + src_dof_1 * tmp_kernel_op_266 + src_dof_2 * tmp_kernel_op_280 +
                      src_dof_3 * ( tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) ) +
                      src_dof_4 * tmp_kernel_op_292 + src_dof_5 * tmp_kernel_op_293 + src_dof_6 * tmp_kernel_op_294 +
                      src_dof_7 * tmp_kernel_op_295 + src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_239 + src_dof_1 * tmp_kernel_op_262 + src_dof_2 * tmp_kernel_op_277 +
                      src_dof_3 * tmp_kernel_op_292 +
                      src_dof_4 * ( tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                                    tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                                    tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                                    tmp_kernel_op_300 * tmp_kernel_op_74 ) +
                      src_dof_5 * tmp_kernel_op_305 + src_dof_6 * tmp_kernel_op_313 + src_dof_7 * tmp_kernel_op_321 +
                      src_dof_8 * tmp_kernel_op_329 + src_dof_9 * tmp_kernel_op_337;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_240 + src_dof_1 * tmp_kernel_op_263 + src_dof_2 * tmp_kernel_op_278 +
                      src_dof_3 * tmp_kernel_op_293 + src_dof_4 * tmp_kernel_op_305 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                                    tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                                    tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                                    tmp_kernel_op_300 * tmp_kernel_op_73 ) +
                      src_dof_6 * tmp_kernel_op_338 + src_dof_7 * tmp_kernel_op_339 + src_dof_8 * tmp_kernel_op_340 +
                      src_dof_9 * tmp_kernel_op_341;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_241 + src_dof_1 * tmp_kernel_op_264 + src_dof_2 * tmp_kernel_op_279 +
                      src_dof_3 * tmp_kernel_op_294 + src_dof_4 * tmp_kernel_op_313 + src_dof_5 * tmp_kernel_op_338 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                                    tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                                    tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                                    tmp_kernel_op_308 * tmp_kernel_op_73 ) +
                      src_dof_7 * tmp_kernel_op_342 + src_dof_8 * tmp_kernel_op_343 + src_dof_9 * tmp_kernel_op_344;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_245 + src_dof_1 * tmp_kernel_op_267 + src_dof_2 * tmp_kernel_op_281 +
                      src_dof_3 * tmp_kernel_op_295 + src_dof_4 * tmp_kernel_op_321 + src_dof_5 * tmp_kernel_op_339 +
                      src_dof_6 * tmp_kernel_op_342 +
                      src_dof_7 *
                          ( tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                           ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_346 + src_dof_9 * tmp_kernel_op_347;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_246 + src_dof_1 * tmp_kernel_op_268 + src_dof_2 * tmp_kernel_op_282 +
                      src_dof_3 * tmp_kernel_op_296 + src_dof_4 * tmp_kernel_op_329 + src_dof_5 * tmp_kernel_op_340 +
                      src_dof_6 * tmp_kernel_op_343 + src_dof_7 * tmp_kernel_op_346 +
                      src_dof_8 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) ) ) +
                      src_dof_9 * tmp_kernel_op_348;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_247 + src_dof_1 * tmp_kernel_op_269 + src_dof_2 * tmp_kernel_op_283 +
                      src_dof_3 * tmp_kernel_op_297 + src_dof_4 * tmp_kernel_op_337 + src_dof_5 * tmp_kernel_op_341 +
                      src_dof_6 * tmp_kernel_op_344 + src_dof_7 * tmp_kernel_op_347 + src_dof_8 * tmp_kernel_op_348 +
                      src_dof_9 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_2 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::apply_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_1_macro_3D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_kEdge,
    walberla::float64* RESTRICT _data_kVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           forVertex_0,
    walberla::float64           forVertex_1,
    walberla::float64           forVertex_2,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float,
    walberla::float64           radRayVertex,
    walberla::float64           radRefVertex,
    walberla::float64           rayVertex_0,
    walberla::float64           rayVertex_1,
    walberla::float64           rayVertex_2,
    walberla::float64           refVertex_0,
    walberla::float64           refVertex_1,
    walberla::float64           refVertex_2,
    walberla::float64           thrVertex_0,
    walberla::float64           thrVertex_1,
    walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_103 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 *
                                ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                                  ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                            tmp_kernel_op_167 *
                                ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                                  ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                            tmp_kernel_op_199 *
                                ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                                  ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                            tmp_kernel_op_231 *
                                ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                                  ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                                 ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 *
                                ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                  ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_242 + src_dof_2 * tmp_kernel_op_243 + src_dof_3 * tmp_kernel_op_244 +
                      src_dof_4 * tmp_kernel_op_239 + src_dof_5 * tmp_kernel_op_240 + src_dof_6 * tmp_kernel_op_241 +
                      src_dof_7 * tmp_kernel_op_245 + src_dof_8 * tmp_kernel_op_246 + src_dof_9 * tmp_kernel_op_247;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_242 +
                      src_dof_1 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_201 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_201 - 0.050643253661728158 ) ) ) +
                      src_dof_2 * tmp_kernel_op_265 + src_dof_3 * tmp_kernel_op_266 + src_dof_4 * tmp_kernel_op_262 +
                      src_dof_5 * tmp_kernel_op_263 + src_dof_6 * tmp_kernel_op_264 + src_dof_7 * tmp_kernel_op_267 +
                      src_dof_8 * tmp_kernel_op_268 + src_dof_9 * tmp_kernel_op_269;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_243 + src_dof_1 * tmp_kernel_op_265 +
                      src_dof_2 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_202 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_202 - 0.050643253661728158 ) ) ) +
                      src_dof_3 * tmp_kernel_op_280 + src_dof_4 * tmp_kernel_op_277 + src_dof_5 * tmp_kernel_op_278 +
                      src_dof_6 * tmp_kernel_op_279 + src_dof_7 * tmp_kernel_op_281 + src_dof_8 * tmp_kernel_op_282 +
                      src_dof_9 * tmp_kernel_op_283;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_244 + src_dof_1 * tmp_kernel_op_266 + src_dof_2 * tmp_kernel_op_280 +
                      src_dof_3 * ( tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) ) +
                      src_dof_4 * tmp_kernel_op_292 + src_dof_5 * tmp_kernel_op_293 + src_dof_6 * tmp_kernel_op_294 +
                      src_dof_7 * tmp_kernel_op_295 + src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_239 + src_dof_1 * tmp_kernel_op_262 + src_dof_2 * tmp_kernel_op_277 +
                      src_dof_3 * tmp_kernel_op_292 +
                      src_dof_4 * ( tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                                    tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                                    tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                                    tmp_kernel_op_300 * tmp_kernel_op_74 ) +
                      src_dof_5 * tmp_kernel_op_305 + src_dof_6 * tmp_kernel_op_313 + src_dof_7 * tmp_kernel_op_321 +
                      src_dof_8 * tmp_kernel_op_329 + src_dof_9 * tmp_kernel_op_337;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_240 + src_dof_1 * tmp_kernel_op_263 + src_dof_2 * tmp_kernel_op_278 +
                      src_dof_3 * tmp_kernel_op_293 + src_dof_4 * tmp_kernel_op_305 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                                    tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                                    tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                                    tmp_kernel_op_300 * tmp_kernel_op_73 ) +
                      src_dof_6 * tmp_kernel_op_338 + src_dof_7 * tmp_kernel_op_339 + src_dof_8 * tmp_kernel_op_340 +
                      src_dof_9 * tmp_kernel_op_341;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_241 + src_dof_1 * tmp_kernel_op_264 + src_dof_2 * tmp_kernel_op_279 +
                      src_dof_3 * tmp_kernel_op_294 + src_dof_4 * tmp_kernel_op_313 + src_dof_5 * tmp_kernel_op_338 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                                    tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                                    tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                                    tmp_kernel_op_308 * tmp_kernel_op_73 ) +
                      src_dof_7 * tmp_kernel_op_342 + src_dof_8 * tmp_kernel_op_343 + src_dof_9 * tmp_kernel_op_344;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_245 + src_dof_1 * tmp_kernel_op_267 + src_dof_2 * tmp_kernel_op_281 +
                      src_dof_3 * tmp_kernel_op_295 + src_dof_4 * tmp_kernel_op_321 + src_dof_5 * tmp_kernel_op_339 +
                      src_dof_6 * tmp_kernel_op_342 +
                      src_dof_7 *
                          ( tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                           ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_346 + src_dof_9 * tmp_kernel_op_347;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_246 + src_dof_1 * tmp_kernel_op_268 + src_dof_2 * tmp_kernel_op_282 +
                      src_dof_3 * tmp_kernel_op_296 + src_dof_4 * tmp_kernel_op_329 + src_dof_5 * tmp_kernel_op_340 +
                      src_dof_6 * tmp_kernel_op_343 + src_dof_7 * tmp_kernel_op_346 +
                      src_dof_8 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) ) ) +
                      src_dof_9 * tmp_kernel_op_348;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_247 + src_dof_1 * tmp_kernel_op_269 + src_dof_2 * tmp_kernel_op_283 +
                      src_dof_3 * tmp_kernel_op_297 + src_dof_4 * tmp_kernel_op_337 + src_dof_5 * tmp_kernel_op_341 +
                      src_dof_6 * tmp_kernel_op_344 + src_dof_7 * tmp_kernel_op_347 + src_dof_8 * tmp_kernel_op_348 +
                      src_dof_9 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_UP */
         const walberla::float64 tmp_coords_jac_0_GREEN_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_6_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
         const walberla::float64 p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
         const walberla::float64 p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
         const walberla::float64 p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_2_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_2_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_2_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_3_0_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
         const walberla::float64 jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
         const walberla::float64 jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
         const walberla::float64 jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
         const walberla::float64 jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
         const walberla::float64 jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_48 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_54 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_54 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_48 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_81 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_87 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_87 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_81 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_113 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_119 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_119 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_113 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_145 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_151 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_151 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_145 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_177 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_183 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_183 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_177 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_209 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_215 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_215 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_209 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_103 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 *
                                ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                                  ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                            tmp_kernel_op_167 *
                                ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                                  ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                            tmp_kernel_op_199 *
                                ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                                  ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                            tmp_kernel_op_231 *
                                ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                                  ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                                 ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 *
                                ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                  ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_242 + src_dof_2 * tmp_kernel_op_243 + src_dof_3 * tmp_kernel_op_244 +
                      src_dof_4 * tmp_kernel_op_239 + src_dof_5 * tmp_kernel_op_240 + src_dof_6 * tmp_kernel_op_241 +
                      src_dof_7 * tmp_kernel_op_245 + src_dof_8 * tmp_kernel_op_246 + src_dof_9 * tmp_kernel_op_247;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_242 +
                      src_dof_1 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_201 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_201 - 0.050643253661728158 ) ) ) +
                      src_dof_2 * tmp_kernel_op_265 + src_dof_3 * tmp_kernel_op_266 + src_dof_4 * tmp_kernel_op_262 +
                      src_dof_5 * tmp_kernel_op_263 + src_dof_6 * tmp_kernel_op_264 + src_dof_7 * tmp_kernel_op_267 +
                      src_dof_8 * tmp_kernel_op_268 + src_dof_9 * tmp_kernel_op_269;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_243 + src_dof_1 * tmp_kernel_op_265 +
                      src_dof_2 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_202 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_202 - 0.050643253661728158 ) ) ) +
                      src_dof_3 * tmp_kernel_op_280 + src_dof_4 * tmp_kernel_op_277 + src_dof_5 * tmp_kernel_op_278 +
                      src_dof_6 * tmp_kernel_op_279 + src_dof_7 * tmp_kernel_op_281 + src_dof_8 * tmp_kernel_op_282 +
                      src_dof_9 * tmp_kernel_op_283;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_244 + src_dof_1 * tmp_kernel_op_266 + src_dof_2 * tmp_kernel_op_280 +
                      src_dof_3 * ( tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) ) +
                      src_dof_4 * tmp_kernel_op_292 + src_dof_5 * tmp_kernel_op_293 + src_dof_6 * tmp_kernel_op_294 +
                      src_dof_7 * tmp_kernel_op_295 + src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_239 + src_dof_1 * tmp_kernel_op_262 + src_dof_2 * tmp_kernel_op_277 +
                      src_dof_3 * tmp_kernel_op_292 +
                      src_dof_4 * ( tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                                    tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                                    tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                                    tmp_kernel_op_300 * tmp_kernel_op_74 ) +
                      src_dof_5 * tmp_kernel_op_305 + src_dof_6 * tmp_kernel_op_313 + src_dof_7 * tmp_kernel_op_321 +
                      src_dof_8 * tmp_kernel_op_329 + src_dof_9 * tmp_kernel_op_337;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_240 + src_dof_1 * tmp_kernel_op_263 + src_dof_2 * tmp_kernel_op_278 +
                      src_dof_3 * tmp_kernel_op_293 + src_dof_4 * tmp_kernel_op_305 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                                    tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                                    tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                                    tmp_kernel_op_300 * tmp_kernel_op_73 ) +
                      src_dof_6 * tmp_kernel_op_338 + src_dof_7 * tmp_kernel_op_339 + src_dof_8 * tmp_kernel_op_340 +
                      src_dof_9 * tmp_kernel_op_341;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_241 + src_dof_1 * tmp_kernel_op_264 + src_dof_2 * tmp_kernel_op_279 +
                      src_dof_3 * tmp_kernel_op_294 + src_dof_4 * tmp_kernel_op_313 + src_dof_5 * tmp_kernel_op_338 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                                    tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                                    tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                                    tmp_kernel_op_308 * tmp_kernel_op_73 ) +
                      src_dof_7 * tmp_kernel_op_342 + src_dof_8 * tmp_kernel_op_343 + src_dof_9 * tmp_kernel_op_344;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_245 + src_dof_1 * tmp_kernel_op_267 + src_dof_2 * tmp_kernel_op_281 +
                      src_dof_3 * tmp_kernel_op_295 + src_dof_4 * tmp_kernel_op_321 + src_dof_5 * tmp_kernel_op_339 +
                      src_dof_6 * tmp_kernel_op_342 +
                      src_dof_7 *
                          ( tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                           ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_346 + src_dof_9 * tmp_kernel_op_347;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_246 + src_dof_1 * tmp_kernel_op_268 + src_dof_2 * tmp_kernel_op_282 +
                      src_dof_3 * tmp_kernel_op_296 + src_dof_4 * tmp_kernel_op_329 + src_dof_5 * tmp_kernel_op_340 +
                      src_dof_6 * tmp_kernel_op_343 + src_dof_7 * tmp_kernel_op_346 +
                      src_dof_8 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) ) ) +
                      src_dof_9 * tmp_kernel_op_348;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_247 + src_dof_1 * tmp_kernel_op_269 + src_dof_2 * tmp_kernel_op_283 +
                      src_dof_3 * tmp_kernel_op_297 + src_dof_4 * tmp_kernel_op_337 + src_dof_5 * tmp_kernel_op_341 +
                      src_dof_6 * tmp_kernel_op_344 + src_dof_7 * tmp_kernel_op_347 + src_dof_8 * tmp_kernel_op_348 +
                      src_dof_9 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::apply_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_2_macro_3D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_kEdge,
    walberla::float64* RESTRICT _data_kVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           forVertex_0,
    walberla::float64           forVertex_1,
    walberla::float64           forVertex_2,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float,
    walberla::float64           radRayVertex,
    walberla::float64           radRefVertex,
    walberla::float64           rayVertex_0,
    walberla::float64           rayVertex_1,
    walberla::float64           rayVertex_2,
    walberla::float64           refVertex_0,
    walberla::float64           refVertex_1,
    walberla::float64           refVertex_2,
    walberla::float64           thrVertex_0,
    walberla::float64           thrVertex_1,
    walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_103 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 *
                                ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                                  ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                            tmp_kernel_op_167 *
                                ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                                  ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                            tmp_kernel_op_199 *
                                ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                                  ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                            tmp_kernel_op_231 *
                                ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                                  ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                                 ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 *
                                ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                  ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_242 + src_dof_2 * tmp_kernel_op_243 + src_dof_3 * tmp_kernel_op_244 +
                      src_dof_4 * tmp_kernel_op_239 + src_dof_5 * tmp_kernel_op_240 + src_dof_6 * tmp_kernel_op_241 +
                      src_dof_7 * tmp_kernel_op_245 + src_dof_8 * tmp_kernel_op_246 + src_dof_9 * tmp_kernel_op_247;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_242 +
                      src_dof_1 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_201 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_201 - 0.050643253661728158 ) ) ) +
                      src_dof_2 * tmp_kernel_op_265 + src_dof_3 * tmp_kernel_op_266 + src_dof_4 * tmp_kernel_op_262 +
                      src_dof_5 * tmp_kernel_op_263 + src_dof_6 * tmp_kernel_op_264 + src_dof_7 * tmp_kernel_op_267 +
                      src_dof_8 * tmp_kernel_op_268 + src_dof_9 * tmp_kernel_op_269;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_243 + src_dof_1 * tmp_kernel_op_265 +
                      src_dof_2 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_202 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_202 - 0.050643253661728158 ) ) ) +
                      src_dof_3 * tmp_kernel_op_280 + src_dof_4 * tmp_kernel_op_277 + src_dof_5 * tmp_kernel_op_278 +
                      src_dof_6 * tmp_kernel_op_279 + src_dof_7 * tmp_kernel_op_281 + src_dof_8 * tmp_kernel_op_282 +
                      src_dof_9 * tmp_kernel_op_283;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_244 + src_dof_1 * tmp_kernel_op_266 + src_dof_2 * tmp_kernel_op_280 +
                      src_dof_3 * ( tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) ) +
                      src_dof_4 * tmp_kernel_op_292 + src_dof_5 * tmp_kernel_op_293 + src_dof_6 * tmp_kernel_op_294 +
                      src_dof_7 * tmp_kernel_op_295 + src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_239 + src_dof_1 * tmp_kernel_op_262 + src_dof_2 * tmp_kernel_op_277 +
                      src_dof_3 * tmp_kernel_op_292 +
                      src_dof_4 * ( tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                                    tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                                    tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                                    tmp_kernel_op_300 * tmp_kernel_op_74 ) +
                      src_dof_5 * tmp_kernel_op_305 + src_dof_6 * tmp_kernel_op_313 + src_dof_7 * tmp_kernel_op_321 +
                      src_dof_8 * tmp_kernel_op_329 + src_dof_9 * tmp_kernel_op_337;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_240 + src_dof_1 * tmp_kernel_op_263 + src_dof_2 * tmp_kernel_op_278 +
                      src_dof_3 * tmp_kernel_op_293 + src_dof_4 * tmp_kernel_op_305 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                                    tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                                    tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                                    tmp_kernel_op_300 * tmp_kernel_op_73 ) +
                      src_dof_6 * tmp_kernel_op_338 + src_dof_7 * tmp_kernel_op_339 + src_dof_8 * tmp_kernel_op_340 +
                      src_dof_9 * tmp_kernel_op_341;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_241 + src_dof_1 * tmp_kernel_op_264 + src_dof_2 * tmp_kernel_op_279 +
                      src_dof_3 * tmp_kernel_op_294 + src_dof_4 * tmp_kernel_op_313 + src_dof_5 * tmp_kernel_op_338 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                                    tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                                    tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                                    tmp_kernel_op_308 * tmp_kernel_op_73 ) +
                      src_dof_7 * tmp_kernel_op_342 + src_dof_8 * tmp_kernel_op_343 + src_dof_9 * tmp_kernel_op_344;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_245 + src_dof_1 * tmp_kernel_op_267 + src_dof_2 * tmp_kernel_op_281 +
                      src_dof_3 * tmp_kernel_op_295 + src_dof_4 * tmp_kernel_op_321 + src_dof_5 * tmp_kernel_op_339 +
                      src_dof_6 * tmp_kernel_op_342 +
                      src_dof_7 *
                          ( tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                           ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_346 + src_dof_9 * tmp_kernel_op_347;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_246 + src_dof_1 * tmp_kernel_op_268 + src_dof_2 * tmp_kernel_op_282 +
                      src_dof_3 * tmp_kernel_op_296 + src_dof_4 * tmp_kernel_op_329 + src_dof_5 * tmp_kernel_op_340 +
                      src_dof_6 * tmp_kernel_op_343 + src_dof_7 * tmp_kernel_op_346 +
                      src_dof_8 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) ) ) +
                      src_dof_9 * tmp_kernel_op_348;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_247 + src_dof_1 * tmp_kernel_op_269 + src_dof_2 * tmp_kernel_op_283 +
                      src_dof_3 * tmp_kernel_op_297 + src_dof_4 * tmp_kernel_op_337 + src_dof_5 * tmp_kernel_op_341 +
                      src_dof_6 * tmp_kernel_op_344 + src_dof_7 * tmp_kernel_op_347 + src_dof_8 * tmp_kernel_op_348 +
                      src_dof_9 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_DOWN */
         const walberla::float64 tmp_coords_jac_0_BLUE_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_6_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_8_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 tmp_coords_jac_9_BLUE_DOWN   = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_0_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) +
             tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_1_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) +
             tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_2_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) +
             tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
         const walberla::float64 jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
         const walberla::float64 jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
         const walberla::float64 jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
         const walberla::float64 jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
         const walberla::float64 jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 src_dof_0 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_0 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_48 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_49 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_54 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_55 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_54 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_55 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_48 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_49 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_81 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_82 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_87 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_88 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_87 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_88 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_81 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_82 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_113 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_114 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_115 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_119 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_120 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_121 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_119 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_120 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_121 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_113 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_114 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_115 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_145 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_146 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_147 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_151 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_152 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_153 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_151 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_152 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_153 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_145 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_146 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_147 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_177 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_178 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_179 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_183 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_184 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_185 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_183 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_184 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_185 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_177 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_178 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_179 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_209 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_210 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_211 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_215 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_216 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_217 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_215 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_216 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_217 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_209 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_210 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_211 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_103 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 *
                                ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                                  ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                            tmp_kernel_op_167 *
                                ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                                  ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                            tmp_kernel_op_199 *
                                ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                                  ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                            tmp_kernel_op_231 *
                                ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                                  ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                                 ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 *
                                ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                  ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_242 + src_dof_2 * tmp_kernel_op_243 + src_dof_3 * tmp_kernel_op_244 +
                      src_dof_4 * tmp_kernel_op_239 + src_dof_5 * tmp_kernel_op_240 + src_dof_6 * tmp_kernel_op_241 +
                      src_dof_7 * tmp_kernel_op_245 + src_dof_8 * tmp_kernel_op_246 + src_dof_9 * tmp_kernel_op_247;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_242 +
                      src_dof_1 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_201 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_201 - 0.050643253661728158 ) ) ) +
                      src_dof_2 * tmp_kernel_op_265 + src_dof_3 * tmp_kernel_op_266 + src_dof_4 * tmp_kernel_op_262 +
                      src_dof_5 * tmp_kernel_op_263 + src_dof_6 * tmp_kernel_op_264 + src_dof_7 * tmp_kernel_op_267 +
                      src_dof_8 * tmp_kernel_op_268 + src_dof_9 * tmp_kernel_op_269;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_243 + src_dof_1 * tmp_kernel_op_265 +
                      src_dof_2 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_202 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_202 - 0.050643253661728158 ) ) ) +
                      src_dof_3 * tmp_kernel_op_280 + src_dof_4 * tmp_kernel_op_277 + src_dof_5 * tmp_kernel_op_278 +
                      src_dof_6 * tmp_kernel_op_279 + src_dof_7 * tmp_kernel_op_281 + src_dof_8 * tmp_kernel_op_282 +
                      src_dof_9 * tmp_kernel_op_283;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_244 + src_dof_1 * tmp_kernel_op_266 + src_dof_2 * tmp_kernel_op_280 +
                      src_dof_3 * ( tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) ) +
                      src_dof_4 * tmp_kernel_op_292 + src_dof_5 * tmp_kernel_op_293 + src_dof_6 * tmp_kernel_op_294 +
                      src_dof_7 * tmp_kernel_op_295 + src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_239 + src_dof_1 * tmp_kernel_op_262 + src_dof_2 * tmp_kernel_op_277 +
                      src_dof_3 * tmp_kernel_op_292 +
                      src_dof_4 * ( tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                                    tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                                    tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                                    tmp_kernel_op_300 * tmp_kernel_op_74 ) +
                      src_dof_5 * tmp_kernel_op_305 + src_dof_6 * tmp_kernel_op_313 + src_dof_7 * tmp_kernel_op_321 +
                      src_dof_8 * tmp_kernel_op_329 + src_dof_9 * tmp_kernel_op_337;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_240 + src_dof_1 * tmp_kernel_op_263 + src_dof_2 * tmp_kernel_op_278 +
                      src_dof_3 * tmp_kernel_op_293 + src_dof_4 * tmp_kernel_op_305 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                                    tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                                    tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                                    tmp_kernel_op_300 * tmp_kernel_op_73 ) +
                      src_dof_6 * tmp_kernel_op_338 + src_dof_7 * tmp_kernel_op_339 + src_dof_8 * tmp_kernel_op_340 +
                      src_dof_9 * tmp_kernel_op_341;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_241 + src_dof_1 * tmp_kernel_op_264 + src_dof_2 * tmp_kernel_op_279 +
                      src_dof_3 * tmp_kernel_op_294 + src_dof_4 * tmp_kernel_op_313 + src_dof_5 * tmp_kernel_op_338 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                                    tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                                    tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                                    tmp_kernel_op_308 * tmp_kernel_op_73 ) +
                      src_dof_7 * tmp_kernel_op_342 + src_dof_8 * tmp_kernel_op_343 + src_dof_9 * tmp_kernel_op_344;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_245 + src_dof_1 * tmp_kernel_op_267 + src_dof_2 * tmp_kernel_op_281 +
                      src_dof_3 * tmp_kernel_op_295 + src_dof_4 * tmp_kernel_op_321 + src_dof_5 * tmp_kernel_op_339 +
                      src_dof_6 * tmp_kernel_op_342 +
                      src_dof_7 *
                          ( tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                           ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_346 + src_dof_9 * tmp_kernel_op_347;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_246 + src_dof_1 * tmp_kernel_op_268 + src_dof_2 * tmp_kernel_op_282 +
                      src_dof_3 * tmp_kernel_op_296 + src_dof_4 * tmp_kernel_op_329 + src_dof_5 * tmp_kernel_op_340 +
                      src_dof_6 * tmp_kernel_op_343 + src_dof_7 * tmp_kernel_op_346 +
                      src_dof_8 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) ) ) +
                      src_dof_9 * tmp_kernel_op_348;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_247 + src_dof_1 * tmp_kernel_op_269 + src_dof_2 * tmp_kernel_op_283 +
                      src_dof_3 * tmp_kernel_op_297 + src_dof_4 * tmp_kernel_op_337 + src_dof_5 * tmp_kernel_op_341 +
                      src_dof_6 * tmp_kernel_op_344 + src_dof_7 * tmp_kernel_op_347 + src_dof_8 * tmp_kernel_op_348 +
                      src_dof_9 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) ) );
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::apply_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_3_macro_3D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_kEdge,
    walberla::float64* RESTRICT _data_kVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           forVertex_0,
    walberla::float64           forVertex_1,
    walberla::float64           forVertex_2,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float,
    walberla::float64           radRayVertex,
    walberla::float64           radRefVertex,
    walberla::float64           rayVertex_0,
    walberla::float64           rayVertex_1,
    walberla::float64           rayVertex_2,
    walberla::float64           refVertex_0,
    walberla::float64           refVertex_1,
    walberla::float64           refVertex_2,
    walberla::float64           thrVertex_0,
    walberla::float64           thrVertex_1,
    walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_0_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 jac_affine_0_0_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_103 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 *
                                ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                                  ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                            tmp_kernel_op_167 *
                                ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                                  ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                            tmp_kernel_op_199 *
                                ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                                  ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                            tmp_kernel_op_231 *
                                ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                                  ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                                 ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 *
                                ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                  ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_242 + src_dof_2 * tmp_kernel_op_243 + src_dof_3 * tmp_kernel_op_244 +
                      src_dof_4 * tmp_kernel_op_239 + src_dof_5 * tmp_kernel_op_240 + src_dof_6 * tmp_kernel_op_241 +
                      src_dof_7 * tmp_kernel_op_245 + src_dof_8 * tmp_kernel_op_246 + src_dof_9 * tmp_kernel_op_247;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_242 +
                      src_dof_1 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_201 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_201 - 0.050643253661728158 ) ) ) +
                      src_dof_2 * tmp_kernel_op_265 + src_dof_3 * tmp_kernel_op_266 + src_dof_4 * tmp_kernel_op_262 +
                      src_dof_5 * tmp_kernel_op_263 + src_dof_6 * tmp_kernel_op_264 + src_dof_7 * tmp_kernel_op_267 +
                      src_dof_8 * tmp_kernel_op_268 + src_dof_9 * tmp_kernel_op_269;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_243 + src_dof_1 * tmp_kernel_op_265 +
                      src_dof_2 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_202 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_202 - 0.050643253661728158 ) ) ) +
                      src_dof_3 * tmp_kernel_op_280 + src_dof_4 * tmp_kernel_op_277 + src_dof_5 * tmp_kernel_op_278 +
                      src_dof_6 * tmp_kernel_op_279 + src_dof_7 * tmp_kernel_op_281 + src_dof_8 * tmp_kernel_op_282 +
                      src_dof_9 * tmp_kernel_op_283;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_244 + src_dof_1 * tmp_kernel_op_266 + src_dof_2 * tmp_kernel_op_280 +
                      src_dof_3 * ( tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) ) +
                      src_dof_4 * tmp_kernel_op_292 + src_dof_5 * tmp_kernel_op_293 + src_dof_6 * tmp_kernel_op_294 +
                      src_dof_7 * tmp_kernel_op_295 + src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_239 + src_dof_1 * tmp_kernel_op_262 + src_dof_2 * tmp_kernel_op_277 +
                      src_dof_3 * tmp_kernel_op_292 +
                      src_dof_4 * ( tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                                    tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                                    tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                                    tmp_kernel_op_300 * tmp_kernel_op_74 ) +
                      src_dof_5 * tmp_kernel_op_305 + src_dof_6 * tmp_kernel_op_313 + src_dof_7 * tmp_kernel_op_321 +
                      src_dof_8 * tmp_kernel_op_329 + src_dof_9 * tmp_kernel_op_337;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_240 + src_dof_1 * tmp_kernel_op_263 + src_dof_2 * tmp_kernel_op_278 +
                      src_dof_3 * tmp_kernel_op_293 + src_dof_4 * tmp_kernel_op_305 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                                    tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                                    tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                                    tmp_kernel_op_300 * tmp_kernel_op_73 ) +
                      src_dof_6 * tmp_kernel_op_338 + src_dof_7 * tmp_kernel_op_339 + src_dof_8 * tmp_kernel_op_340 +
                      src_dof_9 * tmp_kernel_op_341;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_241 + src_dof_1 * tmp_kernel_op_264 + src_dof_2 * tmp_kernel_op_279 +
                      src_dof_3 * tmp_kernel_op_294 + src_dof_4 * tmp_kernel_op_313 + src_dof_5 * tmp_kernel_op_338 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                                    tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                                    tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                                    tmp_kernel_op_308 * tmp_kernel_op_73 ) +
                      src_dof_7 * tmp_kernel_op_342 + src_dof_8 * tmp_kernel_op_343 + src_dof_9 * tmp_kernel_op_344;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_245 + src_dof_1 * tmp_kernel_op_267 + src_dof_2 * tmp_kernel_op_281 +
                      src_dof_3 * tmp_kernel_op_295 + src_dof_4 * tmp_kernel_op_321 + src_dof_5 * tmp_kernel_op_339 +
                      src_dof_6 * tmp_kernel_op_342 +
                      src_dof_7 *
                          ( tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                           ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_346 + src_dof_9 * tmp_kernel_op_347;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_246 + src_dof_1 * tmp_kernel_op_268 + src_dof_2 * tmp_kernel_op_282 +
                      src_dof_3 * tmp_kernel_op_296 + src_dof_4 * tmp_kernel_op_329 + src_dof_5 * tmp_kernel_op_340 +
                      src_dof_6 * tmp_kernel_op_343 + src_dof_7 * tmp_kernel_op_346 +
                      src_dof_8 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) ) ) +
                      src_dof_9 * tmp_kernel_op_348;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_247 + src_dof_1 * tmp_kernel_op_269 + src_dof_2 * tmp_kernel_op_283 +
                      src_dof_3 * tmp_kernel_op_297 + src_dof_4 * tmp_kernel_op_337 + src_dof_5 * tmp_kernel_op_341 +
                      src_dof_6 * tmp_kernel_op_344 + src_dof_7 * tmp_kernel_op_347 + src_dof_8 * tmp_kernel_op_348 +
                      src_dof_9 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_DOWN */
         const walberla::float64 tmp_coords_jac_0_GREEN_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_3_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_4_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_5_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_6_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_7_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_8_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_9_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_0_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 + tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_1_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 + tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 jac_affine_0_0_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
         const walberla::float64 jac_affine_0_1_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
         const walberla::float64 jac_affine_1_0_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
         const walberla::float64 jac_affine_1_1_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
         const walberla::float64 jac_affine_2_0_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
         const walberla::float64 jac_affine_2_1_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 src_dof_0 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_0 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_12 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_13 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_18 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_19 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_18 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_19 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_12 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_13 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_48 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_49 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_50 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_54 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_55 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_56 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_54 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_55 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_56 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_48 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_49 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_50 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_81 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_82 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_83 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_87 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_88 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_89 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_87 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_88 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_89 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_81 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_82 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_83 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_113 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_114 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_119 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_120 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_119 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_120 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_113 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_114 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_145 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_146 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_151 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_152 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_151 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_152 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_145 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_146 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_177 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_178 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_183 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_184 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_183 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_184 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_177 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_178 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_209 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_210 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_215 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_216 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_215 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_216 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_209 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_210 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_103 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 *
                                ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                                  ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                            tmp_kernel_op_167 *
                                ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                                  ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                                    0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                            tmp_kernel_op_199 *
                                ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                                  ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                                    0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                            tmp_kernel_op_231 *
                                ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                                  ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                                    0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                                 ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 +
                                                   tmp_kernel_op_7 - 0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 *
                                ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                  ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                    0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_242 + src_dof_2 * tmp_kernel_op_243 + src_dof_3 * tmp_kernel_op_244 +
                      src_dof_4 * tmp_kernel_op_239 + src_dof_5 * tmp_kernel_op_240 + src_dof_6 * tmp_kernel_op_241 +
                      src_dof_7 * tmp_kernel_op_245 + src_dof_8 * tmp_kernel_op_246 + src_dof_9 * tmp_kernel_op_247;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_242 +
                      src_dof_1 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_201 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_201 - 0.050643253661728158 ) ) ) +
                      src_dof_2 * tmp_kernel_op_265 + src_dof_3 * tmp_kernel_op_266 + src_dof_4 * tmp_kernel_op_262 +
                      src_dof_5 * tmp_kernel_op_263 + src_dof_6 * tmp_kernel_op_264 + src_dof_7 * tmp_kernel_op_267 +
                      src_dof_8 * tmp_kernel_op_268 + src_dof_9 * tmp_kernel_op_269;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_243 + src_dof_1 * tmp_kernel_op_265 +
                      src_dof_2 *
                          ( tmp_kernel_op_248 *
                                ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                            tmp_kernel_op_249 *
                                ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                            tmp_kernel_op_250 *
                                ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                            tmp_kernel_op_251 *
                                ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_252 *
                                ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                            tmp_kernel_op_253 *
                                ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                            tmp_kernel_op_254 * ( ( tmp_kernel_op_202 - 0.050643253661728158 ) *
                                                  ( tmp_kernel_op_202 - 0.050643253661728158 ) ) ) +
                      src_dof_3 * tmp_kernel_op_280 + src_dof_4 * tmp_kernel_op_277 + src_dof_5 * tmp_kernel_op_278 +
                      src_dof_6 * tmp_kernel_op_279 + src_dof_7 * tmp_kernel_op_281 + src_dof_8 * tmp_kernel_op_282 +
                      src_dof_9 * tmp_kernel_op_283;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_244 + src_dof_1 * tmp_kernel_op_266 + src_dof_2 * tmp_kernel_op_280 +
                      src_dof_3 * ( tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                    tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) ) +
                      src_dof_4 * tmp_kernel_op_292 + src_dof_5 * tmp_kernel_op_293 + src_dof_6 * tmp_kernel_op_294 +
                      src_dof_7 * tmp_kernel_op_295 + src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_239 + src_dof_1 * tmp_kernel_op_262 + src_dof_2 * tmp_kernel_op_277 +
                      src_dof_3 * tmp_kernel_op_292 +
                      src_dof_4 * ( tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                                    tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                                    tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                                    tmp_kernel_op_300 * tmp_kernel_op_74 ) +
                      src_dof_5 * tmp_kernel_op_305 + src_dof_6 * tmp_kernel_op_313 + src_dof_7 * tmp_kernel_op_321 +
                      src_dof_8 * tmp_kernel_op_329 + src_dof_9 * tmp_kernel_op_337;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_240 + src_dof_1 * tmp_kernel_op_263 + src_dof_2 * tmp_kernel_op_278 +
                      src_dof_3 * tmp_kernel_op_293 + src_dof_4 * tmp_kernel_op_305 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                                    tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                                    tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                                    tmp_kernel_op_300 * tmp_kernel_op_73 ) +
                      src_dof_6 * tmp_kernel_op_338 + src_dof_7 * tmp_kernel_op_339 + src_dof_8 * tmp_kernel_op_340 +
                      src_dof_9 * tmp_kernel_op_341;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_241 + src_dof_1 * tmp_kernel_op_264 + src_dof_2 * tmp_kernel_op_279 +
                      src_dof_3 * tmp_kernel_op_294 + src_dof_4 * tmp_kernel_op_313 + src_dof_5 * tmp_kernel_op_338 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                                    tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                                    tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                                    tmp_kernel_op_308 * tmp_kernel_op_73 ) +
                      src_dof_7 * tmp_kernel_op_342 + src_dof_8 * tmp_kernel_op_343 + src_dof_9 * tmp_kernel_op_344;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_245 + src_dof_1 * tmp_kernel_op_267 + src_dof_2 * tmp_kernel_op_281 +
                      src_dof_3 * tmp_kernel_op_295 + src_dof_4 * tmp_kernel_op_321 + src_dof_5 * tmp_kernel_op_339 +
                      src_dof_6 * tmp_kernel_op_342 +
                      src_dof_7 *
                          ( tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                           ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                            tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                           ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_346 + src_dof_9 * tmp_kernel_op_347;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_246 + src_dof_1 * tmp_kernel_op_268 + src_dof_2 * tmp_kernel_op_282 +
                      src_dof_3 * tmp_kernel_op_296 + src_dof_4 * tmp_kernel_op_329 + src_dof_5 * tmp_kernel_op_340 +
                      src_dof_6 * tmp_kernel_op_343 + src_dof_7 * tmp_kernel_op_346 +
                      src_dof_8 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) ) ) +
                      src_dof_9 * tmp_kernel_op_348;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_247 + src_dof_1 * tmp_kernel_op_269 + src_dof_2 * tmp_kernel_op_283 +
                      src_dof_3 * tmp_kernel_op_297 + src_dof_4 * tmp_kernel_op_337 + src_dof_5 * tmp_kernel_op_341 +
                      src_dof_6 * tmp_kernel_op_344 + src_dof_7 * tmp_kernel_op_347 + src_dof_8 * tmp_kernel_op_348 +
                      src_dof_9 *
                          ( tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                                  ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                            tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                                  ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                            tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                                  ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                            tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                                  ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.33333333333333331 ) ) +
                            tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) ) );
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::toMatrix_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_0_macro_3D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    walberla::float64* RESTRICT          _data_kEdge,
    walberla::float64* RESTRICT          _data_kVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    forVertex_0,
    walberla::float64                    forVertex_1,
    walberla::float64                    forVertex_2,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_0comp2,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_1comp2,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    walberla::float64                    macro_vertex_coord_id_2comp2,
    walberla::float64                    macro_vertex_coord_id_3comp0,
    walberla::float64                    macro_vertex_coord_id_3comp1,
    walberla::float64                    macro_vertex_coord_id_3comp2,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float,
    walberla::float64                    radRayVertex,
    walberla::float64                    radRefVertex,
    walberla::float64                    rayVertex_0,
    walberla::float64                    rayVertex_1,
    walberla::float64                    rayVertex_2,
    walberla::float64                    refVertex_0,
    walberla::float64                    refVertex_1,
    walberla::float64                    refVertex_2,
    walberla::float64                    thrVertex_0,
    walberla::float64                    thrVertex_1,
    walberla::float64                    thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_103 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 *
                          ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                            ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                      tmp_kernel_op_167 *
                          ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                            ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                      tmp_kernel_op_199 *
                          ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                            ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                      tmp_kernel_op_231 *
                          ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                            ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_239;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_240;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_241;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_242;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_243;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_244;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_245;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_246;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_247;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_239;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_201 - 0.050643253661728158 ) * ( tmp_kernel_op_201 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_262;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_263;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_264;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_265;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_266;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_267;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_268;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_269;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_240;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_262;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_202 - 0.050643253661728158 ) * ( tmp_kernel_op_202 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_277;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_278;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_279;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_280;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_281;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_282;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_283;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_241;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_263;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_277;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_292;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_293;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_294;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_295;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_296;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_297;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_242;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_264;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_278;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_292;
                  const walberla::float64 elMat_4_4 =
                      tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                      tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                      tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                      tmp_kernel_op_300 * tmp_kernel_op_74;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_305;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_313;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_321;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_329;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_337;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_243;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_265;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_279;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_293;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_305;
                  const walberla::float64 elMat_5_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                      tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                      tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                      tmp_kernel_op_300 * tmp_kernel_op_73;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_338;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_339;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_340;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_341;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_244;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_266;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_280;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_294;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_313;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_338;
                  const walberla::float64 elMat_6_6 =
                      tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                      tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                      tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                      tmp_kernel_op_308 * tmp_kernel_op_73;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_342;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_343;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_344;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_245;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_267;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_281;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_295;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_321;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_339;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_342;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                     ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_346;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_347;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_246;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_268;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_282;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_296;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_329;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_340;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_343;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_346;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_247;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_269;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_283;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_297;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_337;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_341;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_344;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_347;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
      {
         /* CellType.BLUE_UP */
         const walberla::float64 tmp_coords_jac_0_BLUE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_6_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_3_0_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) +
             tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_3_1_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) +
             tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_3_2_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) +
             tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
         const walberla::float64 jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
         const walberla::float64 jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
         const walberla::float64 jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
         const walberla::float64 jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
         const walberla::float64 jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_48 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_54 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_54 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_48 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_81 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_87 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_87 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_81 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_113 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_119 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_119 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_113 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_145 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_151 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_151 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_145 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_177 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_183 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_183 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_177 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_209 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_215 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_215 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_209 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_103 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 *
                          ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                            ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                      tmp_kernel_op_167 *
                          ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                            ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                      tmp_kernel_op_199 *
                          ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                            ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                      tmp_kernel_op_231 *
                          ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                            ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_239;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_240;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_241;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_242;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_243;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_244;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_245;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_246;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_247;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_239;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_201 - 0.050643253661728158 ) * ( tmp_kernel_op_201 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_262;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_263;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_264;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_265;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_266;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_267;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_268;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_269;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_240;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_262;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_202 - 0.050643253661728158 ) * ( tmp_kernel_op_202 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_277;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_278;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_279;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_280;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_281;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_282;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_283;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_241;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_263;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_277;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_292;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_293;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_294;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_295;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_296;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_297;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_242;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_264;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_278;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_292;
                  const walberla::float64 elMat_4_4 =
                      tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                      tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                      tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                      tmp_kernel_op_300 * tmp_kernel_op_74;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_305;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_313;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_321;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_329;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_337;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_243;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_265;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_279;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_293;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_305;
                  const walberla::float64 elMat_5_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                      tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                      tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                      tmp_kernel_op_300 * tmp_kernel_op_73;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_338;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_339;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_340;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_341;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_244;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_266;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_280;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_294;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_313;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_338;
                  const walberla::float64 elMat_6_6 =
                      tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                      tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                      tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                      tmp_kernel_op_308 * tmp_kernel_op_73;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_342;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_343;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_344;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_245;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_267;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_281;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_295;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_321;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_339;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_342;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                     ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_346;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_347;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_246;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_268;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_282;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_296;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_329;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_340;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_343;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_346;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_247;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_269;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_283;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_297;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_337;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_341;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_344;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_347;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::toMatrix_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_1_macro_3D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    walberla::float64* RESTRICT          _data_kEdge,
    walberla::float64* RESTRICT          _data_kVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    forVertex_0,
    walberla::float64                    forVertex_1,
    walberla::float64                    forVertex_2,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_0comp2,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_1comp2,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    walberla::float64                    macro_vertex_coord_id_2comp2,
    walberla::float64                    macro_vertex_coord_id_3comp0,
    walberla::float64                    macro_vertex_coord_id_3comp1,
    walberla::float64                    macro_vertex_coord_id_3comp2,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float,
    walberla::float64                    radRayVertex,
    walberla::float64                    radRefVertex,
    walberla::float64                    rayVertex_0,
    walberla::float64                    rayVertex_1,
    walberla::float64                    rayVertex_2,
    walberla::float64                    refVertex_0,
    walberla::float64                    refVertex_1,
    walberla::float64                    refVertex_2,
    walberla::float64                    thrVertex_0,
    walberla::float64                    thrVertex_1,
    walberla::float64                    thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_103 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 *
                          ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                            ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                      tmp_kernel_op_167 *
                          ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                            ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                      tmp_kernel_op_199 *
                          ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                            ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                      tmp_kernel_op_231 *
                          ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                            ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_239;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_240;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_241;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_242;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_243;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_244;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_245;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_246;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_247;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_239;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_201 - 0.050643253661728158 ) * ( tmp_kernel_op_201 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_262;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_263;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_264;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_265;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_266;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_267;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_268;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_269;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_240;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_262;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_202 - 0.050643253661728158 ) * ( tmp_kernel_op_202 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_277;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_278;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_279;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_280;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_281;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_282;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_283;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_241;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_263;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_277;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_292;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_293;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_294;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_295;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_296;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_297;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_242;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_264;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_278;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_292;
                  const walberla::float64 elMat_4_4 =
                      tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                      tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                      tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                      tmp_kernel_op_300 * tmp_kernel_op_74;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_305;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_313;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_321;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_329;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_337;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_243;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_265;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_279;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_293;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_305;
                  const walberla::float64 elMat_5_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                      tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                      tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                      tmp_kernel_op_300 * tmp_kernel_op_73;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_338;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_339;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_340;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_341;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_244;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_266;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_280;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_294;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_313;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_338;
                  const walberla::float64 elMat_6_6 =
                      tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                      tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                      tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                      tmp_kernel_op_308 * tmp_kernel_op_73;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_342;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_343;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_344;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_245;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_267;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_281;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_295;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_321;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_339;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_342;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                     ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_346;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_347;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_246;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_268;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_282;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_296;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_329;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_340;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_343;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_346;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_247;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_269;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_283;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_297;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_337;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_341;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_344;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_347;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
      {
         /* CellType.GREEN_UP */
         const walberla::float64 tmp_coords_jac_0_GREEN_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_6_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
         const walberla::float64 p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
         const walberla::float64 p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
         const walberla::float64 p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_2_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_2_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_2_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_3_0_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
         const walberla::float64 jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
         const walberla::float64 jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
         const walberla::float64 jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
         const walberla::float64 jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
         const walberla::float64 jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_48 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_54 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_54 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_48 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_81 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_87 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_87 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_81 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_113 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_119 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_119 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_113 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_145 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_151 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_151 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_145 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_177 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_183 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_183 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_177 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_209 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_215 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_215 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_209 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_103 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 *
                          ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                            ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                      tmp_kernel_op_167 *
                          ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                            ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                      tmp_kernel_op_199 *
                          ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                            ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                      tmp_kernel_op_231 *
                          ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                            ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_239;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_240;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_241;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_242;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_243;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_244;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_245;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_246;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_247;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_239;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_201 - 0.050643253661728158 ) * ( tmp_kernel_op_201 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_262;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_263;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_264;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_265;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_266;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_267;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_268;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_269;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_240;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_262;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_202 - 0.050643253661728158 ) * ( tmp_kernel_op_202 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_277;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_278;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_279;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_280;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_281;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_282;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_283;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_241;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_263;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_277;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_292;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_293;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_294;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_295;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_296;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_297;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_242;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_264;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_278;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_292;
                  const walberla::float64 elMat_4_4 =
                      tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                      tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                      tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                      tmp_kernel_op_300 * tmp_kernel_op_74;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_305;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_313;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_321;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_329;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_337;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_243;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_265;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_279;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_293;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_305;
                  const walberla::float64 elMat_5_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                      tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                      tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                      tmp_kernel_op_300 * tmp_kernel_op_73;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_338;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_339;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_340;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_341;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_244;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_266;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_280;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_294;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_313;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_338;
                  const walberla::float64 elMat_6_6 =
                      tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                      tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                      tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                      tmp_kernel_op_308 * tmp_kernel_op_73;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_342;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_343;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_344;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_245;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_267;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_281;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_295;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_321;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_339;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_342;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                     ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_346;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_347;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_246;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_268;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_282;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_296;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_329;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_340;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_343;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_346;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_247;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_269;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_283;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_297;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_337;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_341;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_344;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_347;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::toMatrix_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_2_macro_3D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    walberla::float64* RESTRICT          _data_kEdge,
    walberla::float64* RESTRICT          _data_kVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    forVertex_0,
    walberla::float64                    forVertex_1,
    walberla::float64                    forVertex_2,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_0comp2,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_1comp2,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    walberla::float64                    macro_vertex_coord_id_2comp2,
    walberla::float64                    macro_vertex_coord_id_3comp0,
    walberla::float64                    macro_vertex_coord_id_3comp1,
    walberla::float64                    macro_vertex_coord_id_3comp2,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float,
    walberla::float64                    radRayVertex,
    walberla::float64                    radRefVertex,
    walberla::float64                    rayVertex_0,
    walberla::float64                    rayVertex_1,
    walberla::float64                    rayVertex_2,
    walberla::float64                    refVertex_0,
    walberla::float64                    refVertex_1,
    walberla::float64                    refVertex_2,
    walberla::float64                    thrVertex_0,
    walberla::float64                    thrVertex_1,
    walberla::float64                    thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_103 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 *
                          ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                            ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                      tmp_kernel_op_167 *
                          ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                            ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                      tmp_kernel_op_199 *
                          ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                            ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                      tmp_kernel_op_231 *
                          ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                            ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_239;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_240;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_241;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_242;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_243;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_244;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_245;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_246;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_247;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_239;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_201 - 0.050643253661728158 ) * ( tmp_kernel_op_201 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_262;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_263;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_264;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_265;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_266;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_267;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_268;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_269;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_240;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_262;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_202 - 0.050643253661728158 ) * ( tmp_kernel_op_202 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_277;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_278;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_279;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_280;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_281;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_282;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_283;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_241;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_263;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_277;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_292;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_293;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_294;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_295;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_296;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_297;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_242;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_264;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_278;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_292;
                  const walberla::float64 elMat_4_4 =
                      tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                      tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                      tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                      tmp_kernel_op_300 * tmp_kernel_op_74;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_305;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_313;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_321;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_329;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_337;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_243;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_265;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_279;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_293;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_305;
                  const walberla::float64 elMat_5_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                      tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                      tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                      tmp_kernel_op_300 * tmp_kernel_op_73;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_338;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_339;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_340;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_341;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_244;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_266;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_280;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_294;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_313;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_338;
                  const walberla::float64 elMat_6_6 =
                      tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                      tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                      tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                      tmp_kernel_op_308 * tmp_kernel_op_73;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_342;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_343;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_344;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_245;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_267;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_281;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_295;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_321;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_339;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_342;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                     ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_346;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_347;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_246;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_268;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_282;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_296;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_329;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_340;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_343;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_346;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_247;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_269;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_283;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_297;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_337;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_341;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_344;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_347;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
      {
         /* CellType.BLUE_DOWN */
         const walberla::float64 tmp_coords_jac_0_BLUE_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_6_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_8_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 tmp_coords_jac_9_BLUE_DOWN   = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_0_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) +
             tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_1_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) +
             tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_2_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) +
             tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
         const walberla::float64 jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
         const walberla::float64 jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
         const walberla::float64 jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
         const walberla::float64 jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
         const walberla::float64 jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_48 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_49 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_54 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_55 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_54 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_55 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_48 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_49 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_81 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_82 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_87 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_88 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_87 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_88 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_81 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_82 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_113 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_114 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_115 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_119 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_120 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_121 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_119 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_120 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_121 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_113 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_114 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_115 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_145 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_146 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_147 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_151 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_152 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_153 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_151 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_152 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_153 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_145 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_146 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_147 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_177 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_178 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_179 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_183 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_184 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_185 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_183 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_184 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_185 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_177 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_178 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_179 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_209 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_210 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_211 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_215 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_216 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_217 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_215 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_216 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_217 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_209 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_210 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_211 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_103 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 *
                          ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                            ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                      tmp_kernel_op_167 *
                          ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                            ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                      tmp_kernel_op_199 *
                          ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                            ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                      tmp_kernel_op_231 *
                          ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                            ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_239;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_240;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_241;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_242;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_243;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_244;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_245;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_246;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_247;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_239;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_201 - 0.050643253661728158 ) * ( tmp_kernel_op_201 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_262;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_263;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_264;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_265;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_266;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_267;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_268;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_269;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_240;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_262;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_202 - 0.050643253661728158 ) * ( tmp_kernel_op_202 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_277;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_278;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_279;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_280;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_281;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_282;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_283;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_241;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_263;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_277;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_292;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_293;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_294;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_295;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_296;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_297;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_242;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_264;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_278;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_292;
                  const walberla::float64 elMat_4_4 =
                      tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                      tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                      tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                      tmp_kernel_op_300 * tmp_kernel_op_74;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_305;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_313;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_321;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_329;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_337;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_243;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_265;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_279;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_293;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_305;
                  const walberla::float64 elMat_5_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                      tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                      tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                      tmp_kernel_op_300 * tmp_kernel_op_73;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_338;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_339;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_340;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_341;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_244;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_266;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_280;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_294;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_313;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_338;
                  const walberla::float64 elMat_6_6 =
                      tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                      tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                      tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                      tmp_kernel_op_308 * tmp_kernel_op_73;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_342;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_343;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_344;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_245;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_267;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_281;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_295;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_321;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_339;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_342;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                     ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_346;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_347;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_246;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_268;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_282;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_296;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_329;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_340;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_343;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_346;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_247;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_269;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_283;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_297;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_337;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_341;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_344;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_347;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::toMatrix_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_3_macro_3D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    walberla::float64* RESTRICT          _data_kEdge,
    walberla::float64* RESTRICT          _data_kVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    forVertex_0,
    walberla::float64                    forVertex_1,
    walberla::float64                    forVertex_2,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_0comp2,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_1comp2,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    walberla::float64                    macro_vertex_coord_id_2comp2,
    walberla::float64                    macro_vertex_coord_id_3comp0,
    walberla::float64                    macro_vertex_coord_id_3comp1,
    walberla::float64                    macro_vertex_coord_id_3comp2,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float,
    walberla::float64                    radRayVertex,
    walberla::float64                    radRefVertex,
    walberla::float64                    rayVertex_0,
    walberla::float64                    rayVertex_1,
    walberla::float64                    rayVertex_2,
    walberla::float64                    refVertex_0,
    walberla::float64                    refVertex_1,
    walberla::float64                    refVertex_2,
    walberla::float64                    thrVertex_0,
    walberla::float64                    thrVertex_1,
    walberla::float64                    thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_0_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 jac_affine_0_0_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_49 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_50 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_55 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_56 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_54 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_55 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_56 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_48 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_49 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_50 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_82 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_83 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_88 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_89 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_87 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_88 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_89 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_81 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_82 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_83 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_114 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_120 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_119 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_120 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_113 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_114 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_146 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_152 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_151 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_152 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_145 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_146 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_178 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_184 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_183 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_184 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_177 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_178 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_210 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_216 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_215 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_216 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_209 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_210 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_103 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 *
                          ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                            ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                      tmp_kernel_op_167 *
                          ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                            ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                      tmp_kernel_op_199 *
                          ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                            ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                      tmp_kernel_op_231 *
                          ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                            ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_239;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_240;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_241;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_242;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_243;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_244;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_245;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_246;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_247;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_239;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_201 - 0.050643253661728158 ) * ( tmp_kernel_op_201 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_262;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_263;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_264;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_265;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_266;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_267;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_268;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_269;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_240;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_262;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_202 - 0.050643253661728158 ) * ( tmp_kernel_op_202 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_277;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_278;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_279;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_280;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_281;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_282;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_283;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_241;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_263;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_277;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_292;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_293;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_294;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_295;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_296;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_297;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_242;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_264;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_278;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_292;
                  const walberla::float64 elMat_4_4 =
                      tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                      tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                      tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                      tmp_kernel_op_300 * tmp_kernel_op_74;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_305;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_313;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_321;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_329;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_337;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_243;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_265;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_279;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_293;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_305;
                  const walberla::float64 elMat_5_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                      tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                      tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                      tmp_kernel_op_300 * tmp_kernel_op_73;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_338;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_339;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_340;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_341;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_244;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_266;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_280;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_294;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_313;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_338;
                  const walberla::float64 elMat_6_6 =
                      tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                      tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                      tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                      tmp_kernel_op_308 * tmp_kernel_op_73;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_342;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_343;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_344;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_245;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_267;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_281;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_295;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_321;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_339;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_342;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                     ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_346;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_347;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_246;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_268;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_282;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_296;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_329;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_340;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_343;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_346;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_247;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_269;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_283;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_297;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_337;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_341;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_344;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_347;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
      {
         /* CellType.GREEN_DOWN */
         const walberla::float64 tmp_coords_jac_0_GREEN_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_3_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_4_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_5_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_6_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_7_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_8_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_9_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_0_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 + tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_1_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 + tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 jac_affine_0_0_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
         const walberla::float64 jac_affine_0_1_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
         const walberla::float64 jac_affine_1_0_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
         const walberla::float64 jac_affine_1_1_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
         const walberla::float64 jac_affine_2_0_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
         const walberla::float64 jac_affine_2_1_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_23 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_25 - 0.33333333333333331;
                  const walberla::float64 tmp_kernel_op_27 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_27;
                  const walberla::float64 tmp_kernel_op_29 = k_dof_3 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_30 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_33 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_1 * -4.0 - tmp_kernel_op_33 + 1.3333333333333333;
                  const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_27 + 1.0;
                  const walberla::float64 tmp_kernel_op_36 =
                      tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_25 + tmp_kernel_op_33 + tmp_kernel_op_35 - 2.0;
                  const walberla::float64 tmp_kernel_op_37 =
                      ( k_dof_0 * tmp_kernel_op_36 + k_dof_1 * tmp_kernel_op_24 + k_dof_2 * tmp_kernel_op_26 +
                        k_dof_4 * tmp_kernel_op_20 + k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * tmp_kernel_op_31 + k_dof_8 * tmp_kernel_op_32 + k_dof_9 * tmp_kernel_op_34 +
                        tmp_kernel_op_29 ) *
                      0.11250000000000003 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_12 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_13 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_18 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_19 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_18 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_19 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_12 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_13 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_37 * 16.0;
                  const walberla::float64 tmp_kernel_op_39 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_40 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_41 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_50 = jac_blending_0_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_46 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_47;
                  const walberla::float64 tmp_kernel_op_51 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_52 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_53 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_54 = jac_blending_0_0_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_55 = jac_blending_0_1_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_56 = jac_blending_0_2_q_1 * tmp_kernel_op_51 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_52 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_53;
                  const int64_t           tmp_kernel_op_57 = 0;
                  const walberla::float64 tmp_kernel_op_58 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_59 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_61 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_63 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_65 = -tmp_kernel_op_30 - tmp_kernel_op_58 - tmp_kernel_op_59;
                  const walberla::float64 tmp_kernel_op_66 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_58 - tmp_kernel_op_60 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_59 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_40 * -4.0 - tmp_kernel_op_67 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_35 + tmp_kernel_op_58 + tmp_kernel_op_61 +
                                                             tmp_kernel_op_63 + tmp_kernel_op_67 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_70 =
                      ( k_dof_0 * tmp_kernel_op_69 + k_dof_1 * tmp_kernel_op_62 + k_dof_2 * tmp_kernel_op_64 +
                        k_dof_4 * tmp_kernel_op_58 + k_dof_5 * tmp_kernel_op_59 + k_dof_6 * tmp_kernel_op_60 +
                        k_dof_7 * tmp_kernel_op_65 + k_dof_8 * tmp_kernel_op_66 + k_dof_9 * tmp_kernel_op_68 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_48 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_49 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_50 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_54 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_55 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_56 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_54 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_55 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_56 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_48 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_49 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_50 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_71 = tmp_kernel_op_70 * 16.0;
                  const walberla::float64 tmp_kernel_op_72 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_73 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_74 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_75 = 0;
                  const int64_t           tmp_kernel_op_76 = 0;
                  const int64_t           tmp_kernel_op_77 = tmp_kernel_op_75 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_79 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_80 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_81 = jac_blending_0_0_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = jac_blending_0_1_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_83 = jac_blending_0_2_q_2 * tmp_kernel_op_78 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_79 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_84 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_85 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_86 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_87 = jac_blending_0_0_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_blending_0_1_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_89 = jac_blending_0_2_q_2 * tmp_kernel_op_84 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_85 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_90 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_91 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_92 = tmp_kernel_op_72 * 4.0;
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_73 * 2.0;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_93 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_95 = tmp_kernel_op_74 * 2.0;
                  const walberla::float64 tmp_kernel_op_96 = tmp_kernel_op_95 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_97 = -tmp_kernel_op_30 - tmp_kernel_op_90 - tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_74 * -4.0 - tmp_kernel_op_90 - tmp_kernel_op_92 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_91 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_73 * -4.0 - tmp_kernel_op_99 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_35 + tmp_kernel_op_90 + tmp_kernel_op_93 +
                                                              tmp_kernel_op_95 + tmp_kernel_op_99 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_102 =
                      ( k_dof_0 * tmp_kernel_op_101 + k_dof_1 * tmp_kernel_op_94 + k_dof_2 * tmp_kernel_op_96 +
                        k_dof_4 * tmp_kernel_op_90 + k_dof_5 * tmp_kernel_op_91 + k_dof_6 * tmp_kernel_op_92 +
                        k_dof_7 * tmp_kernel_op_97 + k_dof_8 * tmp_kernel_op_98 + k_dof_9 * tmp_kernel_op_100 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_81 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_82 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_83 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_87 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_88 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_89 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_87 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_88 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_89 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_81 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_82 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_83 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_102 * 16.0;
                  const walberla::float64 tmp_kernel_op_104 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_105 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_106 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_107 = 0;
                  const int64_t           tmp_kernel_op_108 = 0;
                  const int64_t           tmp_kernel_op_109 = tmp_kernel_op_107 + tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_111 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_112 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_0_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_114 = jac_blending_0_1_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_115 = jac_blending_0_2_q_3 * tmp_kernel_op_110 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_111 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_112;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_0_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_1_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_2_q_3 * tmp_kernel_op_116 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_117 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_118;
                  const walberla::float64 tmp_kernel_op_122 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_123 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_104 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_105 * 2.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_125 - 0.059715871789769892;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_106 * 2.0;
                  const walberla::float64 tmp_kernel_op_128 = tmp_kernel_op_127 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_129 = -tmp_kernel_op_122 - tmp_kernel_op_123 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_106 * -4.0 - tmp_kernel_op_122 - tmp_kernel_op_124 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_123 + tmp_kernel_op_124;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_105 * -4.0 - tmp_kernel_op_131 + 0.23886348715907957;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_122 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                                              tmp_kernel_op_131 + tmp_kernel_op_35 - 1.5895738076846548;
                  const walberla::float64 tmp_kernel_op_134 =
                      ( k_dof_0 * tmp_kernel_op_133 + k_dof_1 * tmp_kernel_op_126 + k_dof_2 * tmp_kernel_op_128 +
                        k_dof_4 * tmp_kernel_op_122 + k_dof_5 * tmp_kernel_op_123 + k_dof_6 * tmp_kernel_op_124 +
                        k_dof_7 * tmp_kernel_op_129 + k_dof_8 * tmp_kernel_op_130 + k_dof_9 * tmp_kernel_op_132 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_113 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_114 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_115 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_119 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_120 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_121 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_119 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_120 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_121 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_113 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_114 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_115 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_135 = tmp_kernel_op_134 * 16.0;
                  const walberla::float64 tmp_kernel_op_136 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_137 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_138 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_139 = 0;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = tmp_kernel_op_139 + tmp_kernel_op_140;
                  const walberla::float64 tmp_kernel_op_142 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_145 = jac_blending_0_0_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_1_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_2_q_4 * tmp_kernel_op_142 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_143 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_144;
                  const walberla::float64 tmp_kernel_op_148 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_151 = jac_blending_0_0_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_1_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_2_q_4 * tmp_kernel_op_148 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_149 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_150;
                  const walberla::float64 tmp_kernel_op_154 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_155 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_156 = tmp_kernel_op_136 * 4.0;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 2.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_157 - 0.79742698535308731;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_159 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_161 = -tmp_kernel_op_154 - tmp_kernel_op_155 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_162 =
                      tmp_kernel_op_138 * -4.0 - tmp_kernel_op_154 - tmp_kernel_op_156 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_163 = tmp_kernel_op_155 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_137 * -4.0 - tmp_kernel_op_163 + 3.1897079414123493;
                  const walberla::float64 tmp_kernel_op_165 = tmp_kernel_op_154 + tmp_kernel_op_157 + tmp_kernel_op_159 +
                                                              tmp_kernel_op_163 + tmp_kernel_op_35 - 2.6961404780296307;
                  const walberla::float64 tmp_kernel_op_166 =
                      ( k_dof_0 * tmp_kernel_op_165 + k_dof_1 * tmp_kernel_op_158 + k_dof_2 * tmp_kernel_op_160 +
                        k_dof_4 * tmp_kernel_op_154 + k_dof_5 * tmp_kernel_op_155 + k_dof_6 * tmp_kernel_op_156 +
                        k_dof_7 * tmp_kernel_op_161 + k_dof_8 * tmp_kernel_op_162 + k_dof_9 * tmp_kernel_op_164 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_145 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_146 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_147 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_151 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_152 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_153 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_151 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_152 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_153 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_145 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_146 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_147 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_167 = tmp_kernel_op_166 * 16.0;
                  const walberla::float64 tmp_kernel_op_168 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_169 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_170 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_171 = 0;
                  const int64_t           tmp_kernel_op_172 = 0;
                  const int64_t           tmp_kernel_op_173 = tmp_kernel_op_171 + tmp_kernel_op_172;
                  const walberla::float64 tmp_kernel_op_174 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_177 = jac_blending_0_0_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_1_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_2_q_5 * tmp_kernel_op_174 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_175 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_180 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_181 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_182 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_183 = jac_blending_0_0_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_184 = jac_blending_0_1_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_185 = jac_blending_0_2_q_5 * tmp_kernel_op_180 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_181 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_182;
                  const walberla::float64 tmp_kernel_op_186 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_187 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_168 * 4.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_169 * 2.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_189 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_170 * 2.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_191 - 0.47014206410511505;
                  const walberla::float64 tmp_kernel_op_193 = -tmp_kernel_op_186 - tmp_kernel_op_187 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_194 =
                      tmp_kernel_op_170 * -4.0 - tmp_kernel_op_186 - tmp_kernel_op_188 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 + tmp_kernel_op_188;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_169 * -4.0 - tmp_kernel_op_195 + 1.8805682564204602;
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_186 + tmp_kernel_op_189 + tmp_kernel_op_191 +
                                                              tmp_kernel_op_195 + tmp_kernel_op_35 - 2.8208523846306903;
                  const walberla::float64 tmp_kernel_op_198 =
                      ( k_dof_0 * tmp_kernel_op_197 + k_dof_1 * tmp_kernel_op_190 + k_dof_2 * tmp_kernel_op_192 +
                        k_dof_4 * tmp_kernel_op_186 + k_dof_5 * tmp_kernel_op_187 + k_dof_6 * tmp_kernel_op_188 +
                        k_dof_7 * tmp_kernel_op_193 + k_dof_8 * tmp_kernel_op_194 + k_dof_9 * tmp_kernel_op_196 +
                        tmp_kernel_op_29 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_177 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_178 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_179 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_183 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_184 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_185 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_183 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_184 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_185 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_177 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_178 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_179 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_198 * 16.0;
                  const walberla::float64 tmp_kernel_op_200 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_201 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_202 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_203 = 0;
                  const int64_t           tmp_kernel_op_204 = 0;
                  const int64_t           tmp_kernel_op_205 = tmp_kernel_op_203 + tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_206 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_207 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_208 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_209 = jac_blending_0_0_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_210 = jac_blending_0_1_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_211 = jac_blending_0_2_q_6 * tmp_kernel_op_206 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_207 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_208;
                  const walberla::float64 tmp_kernel_op_212 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_213 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_214 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_215 = jac_blending_0_0_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_216 = jac_blending_0_1_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_217 = jac_blending_0_2_q_6 * tmp_kernel_op_212 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_213 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_214;
                  const walberla::float64 tmp_kernel_op_218 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_219 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_57 ) );
                  const walberla::float64 tmp_kernel_op_220 = tmp_kernel_op_200 * 4.0;
                  const walberla::float64 tmp_kernel_op_221 = tmp_kernel_op_201 * 2.0;
                  const walberla::float64 tmp_kernel_op_222 = tmp_kernel_op_221 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_223 = tmp_kernel_op_202 * 2.0;
                  const walberla::float64 tmp_kernel_op_224 = tmp_kernel_op_223 - 0.10128650732345632;
                  const walberla::float64 tmp_kernel_op_225 = -tmp_kernel_op_218 - tmp_kernel_op_219 - tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_202 * -4.0 - tmp_kernel_op_218 - tmp_kernel_op_220 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_219 + tmp_kernel_op_220;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_201 * -4.0 - tmp_kernel_op_227 + 0.40514602929382526;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_218 + tmp_kernel_op_221 + tmp_kernel_op_223 +
                                                              tmp_kernel_op_227 + tmp_kernel_op_35 - 0.60771904394073784;
                  const walberla::float64 tmp_kernel_op_230 =
                      ( k_dof_0 * tmp_kernel_op_229 + k_dof_1 * tmp_kernel_op_222 + k_dof_2 * tmp_kernel_op_224 +
                        k_dof_4 * tmp_kernel_op_218 + k_dof_5 * tmp_kernel_op_219 + k_dof_6 * tmp_kernel_op_220 +
                        k_dof_7 * tmp_kernel_op_225 + k_dof_8 * tmp_kernel_op_226 + k_dof_9 * tmp_kernel_op_228 +
                        tmp_kernel_op_29 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_209 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_210 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_211 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_215 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_216 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_217 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_215 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_216 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_217 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_209 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_210 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_211 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_230 * 16.0;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_36 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_233 = tmp_kernel_op_69 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_234 = tmp_kernel_op_101 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_235 = tmp_kernel_op_133 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_236 = tmp_kernel_op_165 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_237 = tmp_kernel_op_197 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_238 = tmp_kernel_op_229 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_126 * tmp_kernel_op_235 + tmp_kernel_op_158 * tmp_kernel_op_236 +
                      tmp_kernel_op_190 * tmp_kernel_op_237 + tmp_kernel_op_222 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_24 + tmp_kernel_op_233 * tmp_kernel_op_62 +
                      tmp_kernel_op_234 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_240 =
                      tmp_kernel_op_128 * tmp_kernel_op_235 + tmp_kernel_op_160 * tmp_kernel_op_236 +
                      tmp_kernel_op_192 * tmp_kernel_op_237 + tmp_kernel_op_224 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_26 + tmp_kernel_op_233 * tmp_kernel_op_64 +
                      tmp_kernel_op_234 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_241 =
                      tmp_kernel_op_232 * tmp_kernel_op_28 + tmp_kernel_op_233 * tmp_kernel_op_28 +
                      tmp_kernel_op_234 * tmp_kernel_op_28 + tmp_kernel_op_235 * tmp_kernel_op_28 +
                      tmp_kernel_op_236 * tmp_kernel_op_28 + tmp_kernel_op_237 * tmp_kernel_op_28 +
                      tmp_kernel_op_238 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_242 =
                      tmp_kernel_op_122 * tmp_kernel_op_235 + tmp_kernel_op_154 * tmp_kernel_op_236 +
                      tmp_kernel_op_186 * tmp_kernel_op_237 + tmp_kernel_op_20 * tmp_kernel_op_232 +
                      tmp_kernel_op_218 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_58 +
                      tmp_kernel_op_234 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_243 =
                      tmp_kernel_op_123 * tmp_kernel_op_235 + tmp_kernel_op_155 * tmp_kernel_op_236 +
                      tmp_kernel_op_187 * tmp_kernel_op_237 + tmp_kernel_op_21 * tmp_kernel_op_232 +
                      tmp_kernel_op_219 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_59 +
                      tmp_kernel_op_234 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_244 =
                      tmp_kernel_op_124 * tmp_kernel_op_235 + tmp_kernel_op_156 * tmp_kernel_op_236 +
                      tmp_kernel_op_188 * tmp_kernel_op_237 + tmp_kernel_op_22 * tmp_kernel_op_232 +
                      tmp_kernel_op_220 * tmp_kernel_op_238 + tmp_kernel_op_233 * tmp_kernel_op_60 +
                      tmp_kernel_op_234 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_245 =
                      tmp_kernel_op_129 * tmp_kernel_op_235 + tmp_kernel_op_161 * tmp_kernel_op_236 +
                      tmp_kernel_op_193 * tmp_kernel_op_237 + tmp_kernel_op_225 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_31 + tmp_kernel_op_233 * tmp_kernel_op_65 +
                      tmp_kernel_op_234 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_246 =
                      tmp_kernel_op_130 * tmp_kernel_op_235 + tmp_kernel_op_162 * tmp_kernel_op_236 +
                      tmp_kernel_op_194 * tmp_kernel_op_237 + tmp_kernel_op_226 * tmp_kernel_op_238 +
                      tmp_kernel_op_232 * tmp_kernel_op_32 + tmp_kernel_op_233 * tmp_kernel_op_66 +
                      tmp_kernel_op_234 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_100 * tmp_kernel_op_234 + tmp_kernel_op_132 * tmp_kernel_op_235 +
                      tmp_kernel_op_164 * tmp_kernel_op_236 + tmp_kernel_op_196 * tmp_kernel_op_237 +
                      tmp_kernel_op_228 * tmp_kernel_op_238 + tmp_kernel_op_232 * tmp_kernel_op_34 +
                      tmp_kernel_op_233 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_248 = tmp_kernel_op_37 * 4.0;
                  const walberla::float64 tmp_kernel_op_249 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_250 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_251 = tmp_kernel_op_134 * 4.0;
                  const walberla::float64 tmp_kernel_op_252 = tmp_kernel_op_166 * 4.0;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_198 * 4.0;
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_230 * 4.0;
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_24 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_62 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_102 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_126 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_259 = tmp_kernel_op_158 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_190 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_222 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_262 =
                      tmp_kernel_op_128 * tmp_kernel_op_258 + tmp_kernel_op_160 * tmp_kernel_op_259 +
                      tmp_kernel_op_192 * tmp_kernel_op_260 + tmp_kernel_op_224 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_26 + tmp_kernel_op_256 * tmp_kernel_op_64 +
                      tmp_kernel_op_257 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_263 =
                      tmp_kernel_op_255 * tmp_kernel_op_28 + tmp_kernel_op_256 * tmp_kernel_op_28 +
                      tmp_kernel_op_257 * tmp_kernel_op_28 + tmp_kernel_op_258 * tmp_kernel_op_28 +
                      tmp_kernel_op_259 * tmp_kernel_op_28 + tmp_kernel_op_260 * tmp_kernel_op_28 +
                      tmp_kernel_op_261 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_264 =
                      tmp_kernel_op_122 * tmp_kernel_op_258 + tmp_kernel_op_154 * tmp_kernel_op_259 +
                      tmp_kernel_op_186 * tmp_kernel_op_260 + tmp_kernel_op_20 * tmp_kernel_op_255 +
                      tmp_kernel_op_218 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_58 +
                      tmp_kernel_op_257 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_265 =
                      tmp_kernel_op_123 * tmp_kernel_op_258 + tmp_kernel_op_155 * tmp_kernel_op_259 +
                      tmp_kernel_op_187 * tmp_kernel_op_260 + tmp_kernel_op_21 * tmp_kernel_op_255 +
                      tmp_kernel_op_219 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_59 +
                      tmp_kernel_op_257 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_266 =
                      tmp_kernel_op_124 * tmp_kernel_op_258 + tmp_kernel_op_156 * tmp_kernel_op_259 +
                      tmp_kernel_op_188 * tmp_kernel_op_260 + tmp_kernel_op_22 * tmp_kernel_op_255 +
                      tmp_kernel_op_220 * tmp_kernel_op_261 + tmp_kernel_op_256 * tmp_kernel_op_60 +
                      tmp_kernel_op_257 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_267 =
                      tmp_kernel_op_129 * tmp_kernel_op_258 + tmp_kernel_op_161 * tmp_kernel_op_259 +
                      tmp_kernel_op_193 * tmp_kernel_op_260 + tmp_kernel_op_225 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_31 + tmp_kernel_op_256 * tmp_kernel_op_65 +
                      tmp_kernel_op_257 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_268 =
                      tmp_kernel_op_130 * tmp_kernel_op_258 + tmp_kernel_op_162 * tmp_kernel_op_259 +
                      tmp_kernel_op_194 * tmp_kernel_op_260 + tmp_kernel_op_226 * tmp_kernel_op_261 +
                      tmp_kernel_op_255 * tmp_kernel_op_32 + tmp_kernel_op_256 * tmp_kernel_op_66 +
                      tmp_kernel_op_257 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_269 =
                      tmp_kernel_op_100 * tmp_kernel_op_257 + tmp_kernel_op_132 * tmp_kernel_op_258 +
                      tmp_kernel_op_164 * tmp_kernel_op_259 + tmp_kernel_op_196 * tmp_kernel_op_260 +
                      tmp_kernel_op_228 * tmp_kernel_op_261 + tmp_kernel_op_255 * tmp_kernel_op_34 +
                      tmp_kernel_op_256 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_26 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_64 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_102 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_273 = tmp_kernel_op_128 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_160 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_192 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_224 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_277 =
                      tmp_kernel_op_270 * tmp_kernel_op_28 + tmp_kernel_op_271 * tmp_kernel_op_28 +
                      tmp_kernel_op_272 * tmp_kernel_op_28 + tmp_kernel_op_273 * tmp_kernel_op_28 +
                      tmp_kernel_op_274 * tmp_kernel_op_28 + tmp_kernel_op_275 * tmp_kernel_op_28 +
                      tmp_kernel_op_276 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_278 =
                      tmp_kernel_op_122 * tmp_kernel_op_273 + tmp_kernel_op_154 * tmp_kernel_op_274 +
                      tmp_kernel_op_186 * tmp_kernel_op_275 + tmp_kernel_op_20 * tmp_kernel_op_270 +
                      tmp_kernel_op_218 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_58 +
                      tmp_kernel_op_272 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_279 =
                      tmp_kernel_op_123 * tmp_kernel_op_273 + tmp_kernel_op_155 * tmp_kernel_op_274 +
                      tmp_kernel_op_187 * tmp_kernel_op_275 + tmp_kernel_op_21 * tmp_kernel_op_270 +
                      tmp_kernel_op_219 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_59 +
                      tmp_kernel_op_272 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_124 * tmp_kernel_op_273 + tmp_kernel_op_156 * tmp_kernel_op_274 +
                      tmp_kernel_op_188 * tmp_kernel_op_275 + tmp_kernel_op_22 * tmp_kernel_op_270 +
                      tmp_kernel_op_220 * tmp_kernel_op_276 + tmp_kernel_op_271 * tmp_kernel_op_60 +
                      tmp_kernel_op_272 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_281 =
                      tmp_kernel_op_129 * tmp_kernel_op_273 + tmp_kernel_op_161 * tmp_kernel_op_274 +
                      tmp_kernel_op_193 * tmp_kernel_op_275 + tmp_kernel_op_225 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_31 + tmp_kernel_op_271 * tmp_kernel_op_65 +
                      tmp_kernel_op_272 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_282 =
                      tmp_kernel_op_130 * tmp_kernel_op_273 + tmp_kernel_op_162 * tmp_kernel_op_274 +
                      tmp_kernel_op_194 * tmp_kernel_op_275 + tmp_kernel_op_226 * tmp_kernel_op_276 +
                      tmp_kernel_op_270 * tmp_kernel_op_32 + tmp_kernel_op_271 * tmp_kernel_op_66 +
                      tmp_kernel_op_272 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_283 =
                      tmp_kernel_op_100 * tmp_kernel_op_272 + tmp_kernel_op_132 * tmp_kernel_op_273 +
                      tmp_kernel_op_164 * tmp_kernel_op_274 + tmp_kernel_op_196 * tmp_kernel_op_275 +
                      tmp_kernel_op_228 * tmp_kernel_op_276 + tmp_kernel_op_270 * tmp_kernel_op_34 +
                      tmp_kernel_op_271 * tmp_kernel_op_68;
                  const int64_t           tmp_kernel_op_284 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_28 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_28 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_287 = tmp_kernel_op_102 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_288 = tmp_kernel_op_134 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_289 = tmp_kernel_op_166 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_290 = tmp_kernel_op_198 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_291 = tmp_kernel_op_230 * tmp_kernel_op_28;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_122 * tmp_kernel_op_288 + tmp_kernel_op_154 * tmp_kernel_op_289 +
                      tmp_kernel_op_186 * tmp_kernel_op_290 + tmp_kernel_op_20 * tmp_kernel_op_285 +
                      tmp_kernel_op_218 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_58 +
                      tmp_kernel_op_287 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_123 * tmp_kernel_op_288 + tmp_kernel_op_155 * tmp_kernel_op_289 +
                      tmp_kernel_op_187 * tmp_kernel_op_290 + tmp_kernel_op_21 * tmp_kernel_op_285 +
                      tmp_kernel_op_219 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_59 +
                      tmp_kernel_op_287 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_124 * tmp_kernel_op_288 + tmp_kernel_op_156 * tmp_kernel_op_289 +
                      tmp_kernel_op_188 * tmp_kernel_op_290 + tmp_kernel_op_22 * tmp_kernel_op_285 +
                      tmp_kernel_op_220 * tmp_kernel_op_291 + tmp_kernel_op_286 * tmp_kernel_op_60 +
                      tmp_kernel_op_287 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_295 =
                      tmp_kernel_op_129 * tmp_kernel_op_288 + tmp_kernel_op_161 * tmp_kernel_op_289 +
                      tmp_kernel_op_193 * tmp_kernel_op_290 + tmp_kernel_op_225 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_31 + tmp_kernel_op_286 * tmp_kernel_op_65 +
                      tmp_kernel_op_287 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_130 * tmp_kernel_op_288 + tmp_kernel_op_162 * tmp_kernel_op_289 +
                      tmp_kernel_op_194 * tmp_kernel_op_290 + tmp_kernel_op_226 * tmp_kernel_op_291 +
                      tmp_kernel_op_285 * tmp_kernel_op_32 + tmp_kernel_op_286 * tmp_kernel_op_66 +
                      tmp_kernel_op_287 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_100 * tmp_kernel_op_287 + tmp_kernel_op_132 * tmp_kernel_op_288 +
                      tmp_kernel_op_164 * tmp_kernel_op_289 + tmp_kernel_op_196 * tmp_kernel_op_290 +
                      tmp_kernel_op_228 * tmp_kernel_op_291 + tmp_kernel_op_285 * tmp_kernel_op_34 +
                      tmp_kernel_op_286 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_298 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_299 = tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_300 = tmp_kernel_op_103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_301 = tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_302 = tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_303 = tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_304 = tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_305 =
                      tmp_kernel_op_0 * tmp_kernel_op_298 + tmp_kernel_op_104 * tmp_kernel_op_301 +
                      tmp_kernel_op_136 * tmp_kernel_op_302 + tmp_kernel_op_168 * tmp_kernel_op_303 +
                      tmp_kernel_op_200 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_39 +
                      tmp_kernel_op_300 * tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_306 = tmp_kernel_op_2 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_307 = tmp_kernel_op_41 * tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_308 = tmp_kernel_op_103 * tmp_kernel_op_74;
                  const walberla::float64 tmp_kernel_op_309 = tmp_kernel_op_106 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_310 = tmp_kernel_op_138 * tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_311 = tmp_kernel_op_170 * tmp_kernel_op_199;
                  const walberla::float64 tmp_kernel_op_312 = tmp_kernel_op_202 * tmp_kernel_op_231;
                  const walberla::float64 tmp_kernel_op_313 = tmp_kernel_op_306 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_307 * ( ( walberla::float64 )( tmp_kernel_op_42 ) ) +
                                                              tmp_kernel_op_308 * ( ( walberla::float64 )( tmp_kernel_op_75 ) ) +
                                                              tmp_kernel_op_309 * ( ( walberla::float64 )( tmp_kernel_op_107 ) ) +
                                                              tmp_kernel_op_310 * ( ( walberla::float64 )( tmp_kernel_op_139 ) ) +
                                                              tmp_kernel_op_311 * ( ( walberla::float64 )( tmp_kernel_op_171 ) ) +
                                                              tmp_kernel_op_312 * ( ( walberla::float64 )( tmp_kernel_op_203 ) );
                  const walberla::float64 tmp_kernel_op_314 = tmp_kernel_op_31 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_315 = tmp_kernel_op_65 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_316 = tmp_kernel_op_102 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_317 = tmp_kernel_op_129 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_318 = tmp_kernel_op_161 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_319 = tmp_kernel_op_193 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_320 = tmp_kernel_op_225 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_321 =
                      tmp_kernel_op_122 * tmp_kernel_op_317 + tmp_kernel_op_154 * tmp_kernel_op_318 +
                      tmp_kernel_op_186 * tmp_kernel_op_319 + tmp_kernel_op_20 * tmp_kernel_op_314 +
                      tmp_kernel_op_218 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_58 +
                      tmp_kernel_op_316 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_322 = tmp_kernel_op_32 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_323 = tmp_kernel_op_66 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_324 = tmp_kernel_op_102 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_325 = tmp_kernel_op_130 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_326 = tmp_kernel_op_162 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_327 = tmp_kernel_op_194 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_328 = tmp_kernel_op_226 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_329 =
                      tmp_kernel_op_122 * tmp_kernel_op_325 + tmp_kernel_op_154 * tmp_kernel_op_326 +
                      tmp_kernel_op_186 * tmp_kernel_op_327 + tmp_kernel_op_20 * tmp_kernel_op_322 +
                      tmp_kernel_op_218 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_58 +
                      tmp_kernel_op_324 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_330 = tmp_kernel_op_34 * tmp_kernel_op_37;
                  const walberla::float64 tmp_kernel_op_331 = tmp_kernel_op_68 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_332 = tmp_kernel_op_100 * tmp_kernel_op_102;
                  const walberla::float64 tmp_kernel_op_333 = tmp_kernel_op_132 * tmp_kernel_op_134;
                  const walberla::float64 tmp_kernel_op_334 = tmp_kernel_op_164 * tmp_kernel_op_166;
                  const walberla::float64 tmp_kernel_op_335 = tmp_kernel_op_196 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_336 = tmp_kernel_op_228 * tmp_kernel_op_230;
                  const walberla::float64 tmp_kernel_op_337 =
                      tmp_kernel_op_122 * tmp_kernel_op_333 + tmp_kernel_op_154 * tmp_kernel_op_334 +
                      tmp_kernel_op_186 * tmp_kernel_op_335 + tmp_kernel_op_20 * tmp_kernel_op_330 +
                      tmp_kernel_op_218 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_58 +
                      tmp_kernel_op_332 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_338 =
                      tmp_kernel_op_1 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_73 * ( ( walberla::float64 )( tmp_kernel_op_76 ) ) +
                      tmp_kernel_op_105 * tmp_kernel_op_135 * ( ( walberla::float64 )( tmp_kernel_op_108 ) ) +
                      tmp_kernel_op_137 * tmp_kernel_op_167 * ( ( walberla::float64 )( tmp_kernel_op_140 ) ) +
                      tmp_kernel_op_169 * tmp_kernel_op_199 * ( ( walberla::float64 )( tmp_kernel_op_172 ) ) +
                      tmp_kernel_op_201 * tmp_kernel_op_231 * ( ( walberla::float64 )( tmp_kernel_op_204 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_71 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_339 =
                      tmp_kernel_op_123 * tmp_kernel_op_317 + tmp_kernel_op_155 * tmp_kernel_op_318 +
                      tmp_kernel_op_187 * tmp_kernel_op_319 + tmp_kernel_op_21 * tmp_kernel_op_314 +
                      tmp_kernel_op_219 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_59 +
                      tmp_kernel_op_316 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_340 =
                      tmp_kernel_op_123 * tmp_kernel_op_325 + tmp_kernel_op_155 * tmp_kernel_op_326 +
                      tmp_kernel_op_187 * tmp_kernel_op_327 + tmp_kernel_op_21 * tmp_kernel_op_322 +
                      tmp_kernel_op_219 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_59 +
                      tmp_kernel_op_324 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_341 =
                      tmp_kernel_op_123 * tmp_kernel_op_333 + tmp_kernel_op_155 * tmp_kernel_op_334 +
                      tmp_kernel_op_187 * tmp_kernel_op_335 + tmp_kernel_op_21 * tmp_kernel_op_330 +
                      tmp_kernel_op_219 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_59 +
                      tmp_kernel_op_332 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_342 =
                      tmp_kernel_op_124 * tmp_kernel_op_317 + tmp_kernel_op_156 * tmp_kernel_op_318 +
                      tmp_kernel_op_188 * tmp_kernel_op_319 + tmp_kernel_op_22 * tmp_kernel_op_314 +
                      tmp_kernel_op_220 * tmp_kernel_op_320 + tmp_kernel_op_315 * tmp_kernel_op_60 +
                      tmp_kernel_op_316 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_343 =
                      tmp_kernel_op_124 * tmp_kernel_op_325 + tmp_kernel_op_156 * tmp_kernel_op_326 +
                      tmp_kernel_op_188 * tmp_kernel_op_327 + tmp_kernel_op_22 * tmp_kernel_op_322 +
                      tmp_kernel_op_220 * tmp_kernel_op_328 + tmp_kernel_op_323 * tmp_kernel_op_60 +
                      tmp_kernel_op_324 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_344 =
                      tmp_kernel_op_124 * tmp_kernel_op_333 + tmp_kernel_op_156 * tmp_kernel_op_334 +
                      tmp_kernel_op_188 * tmp_kernel_op_335 + tmp_kernel_op_22 * tmp_kernel_op_330 +
                      tmp_kernel_op_220 * tmp_kernel_op_336 + tmp_kernel_op_331 * tmp_kernel_op_60 +
                      tmp_kernel_op_332 * tmp_kernel_op_92;
                  const int64_t           tmp_kernel_op_345 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_346 =
                      tmp_kernel_op_130 * tmp_kernel_op_317 + tmp_kernel_op_162 * tmp_kernel_op_318 +
                      tmp_kernel_op_194 * tmp_kernel_op_319 + tmp_kernel_op_226 * tmp_kernel_op_320 +
                      tmp_kernel_op_314 * tmp_kernel_op_32 + tmp_kernel_op_315 * tmp_kernel_op_66 +
                      tmp_kernel_op_316 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_347 =
                      tmp_kernel_op_100 * tmp_kernel_op_316 + tmp_kernel_op_132 * tmp_kernel_op_317 +
                      tmp_kernel_op_164 * tmp_kernel_op_318 + tmp_kernel_op_196 * tmp_kernel_op_319 +
                      tmp_kernel_op_228 * tmp_kernel_op_320 + tmp_kernel_op_314 * tmp_kernel_op_34 +
                      tmp_kernel_op_315 * tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_348 =
                      tmp_kernel_op_100 * tmp_kernel_op_324 + tmp_kernel_op_132 * tmp_kernel_op_325 +
                      tmp_kernel_op_164 * tmp_kernel_op_326 + tmp_kernel_op_196 * tmp_kernel_op_327 +
                      tmp_kernel_op_228 * tmp_kernel_op_328 + tmp_kernel_op_322 * tmp_kernel_op_34 +
                      tmp_kernel_op_323 * tmp_kernel_op_68;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_103 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_72 + tmp_kernel_op_73 * 0.5 + tmp_kernel_op_74 * 0.5 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 *
                          ( ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) *
                            ( tmp_kernel_op_104 + tmp_kernel_op_105 * 0.5 + tmp_kernel_op_106 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_109 ) ) ) ) +
                      tmp_kernel_op_167 *
                          ( ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) *
                            ( tmp_kernel_op_136 + tmp_kernel_op_137 * 0.5 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_141 ) ) ) ) +
                      tmp_kernel_op_199 *
                          ( ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) *
                            ( tmp_kernel_op_168 + tmp_kernel_op_169 * 0.5 + tmp_kernel_op_170 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_173 ) ) ) ) +
                      tmp_kernel_op_231 *
                          ( ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) *
                            ( tmp_kernel_op_200 + tmp_kernel_op_201 * 0.5 + tmp_kernel_op_202 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_205 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_239;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_240;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_241;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_242;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_243;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_244;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_245;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_246;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_247;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_239;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_40 - 0.23507103205255753 ) * ( tmp_kernel_op_40 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_73 - 0.050643253661728158 ) * ( tmp_kernel_op_73 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_105 - 0.029857935894884946 ) * ( tmp_kernel_op_105 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_137 - 0.39871349267654366 ) * ( tmp_kernel_op_137 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_169 - 0.23507103205255753 ) * ( tmp_kernel_op_169 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_201 - 0.050643253661728158 ) * ( tmp_kernel_op_201 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_262;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_263;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_264;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_265;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_266;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_267;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_268;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_269;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_240;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_262;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_248 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_249 *
                          ( ( tmp_kernel_op_41 - 0.029857935894884946 ) * ( tmp_kernel_op_41 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_250 *
                          ( ( tmp_kernel_op_74 - 0.39871349267654366 ) * ( tmp_kernel_op_74 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_251 *
                          ( ( tmp_kernel_op_106 - 0.23507103205255753 ) * ( tmp_kernel_op_106 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_252 *
                          ( ( tmp_kernel_op_138 - 0.050643253661728158 ) * ( tmp_kernel_op_138 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_253 *
                          ( ( tmp_kernel_op_170 - 0.23507103205255753 ) * ( tmp_kernel_op_170 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_254 *
                          ( ( tmp_kernel_op_202 - 0.050643253661728158 ) * ( tmp_kernel_op_202 - 0.050643253661728158 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_277;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_278;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_279;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_280;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_281;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_282;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_283;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_241;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_263;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_277;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_248 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_249 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_250 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_251 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_252 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_253 * ( ( walberla::float64 )( tmp_kernel_op_284 ) ) +
                                                      tmp_kernel_op_254 * ( ( walberla::float64 )( tmp_kernel_op_284 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_292;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_293;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_294;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_295;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_296;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_297;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_242;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_264;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_278;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_292;
                  const walberla::float64 elMat_4_4 =
                      tmp_kernel_op_106 * tmp_kernel_op_301 + tmp_kernel_op_138 * tmp_kernel_op_302 +
                      tmp_kernel_op_170 * tmp_kernel_op_303 + tmp_kernel_op_2 * tmp_kernel_op_298 +
                      tmp_kernel_op_202 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_41 +
                      tmp_kernel_op_300 * tmp_kernel_op_74;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_305;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_313;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_321;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_329;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_337;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_243;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_265;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_279;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_293;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_305;
                  const walberla::float64 elMat_5_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_298 + tmp_kernel_op_105 * tmp_kernel_op_301 +
                      tmp_kernel_op_137 * tmp_kernel_op_302 + tmp_kernel_op_169 * tmp_kernel_op_303 +
                      tmp_kernel_op_201 * tmp_kernel_op_304 + tmp_kernel_op_299 * tmp_kernel_op_40 +
                      tmp_kernel_op_300 * tmp_kernel_op_73;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_338;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_339;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_340;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_341;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_244;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_266;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_280;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_294;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_313;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_338;
                  const walberla::float64 elMat_6_6 =
                      tmp_kernel_op_1 * tmp_kernel_op_306 + tmp_kernel_op_105 * tmp_kernel_op_309 +
                      tmp_kernel_op_137 * tmp_kernel_op_310 + tmp_kernel_op_169 * tmp_kernel_op_311 +
                      tmp_kernel_op_201 * tmp_kernel_op_312 + tmp_kernel_op_307 * tmp_kernel_op_40 +
                      tmp_kernel_op_308 * tmp_kernel_op_73;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_342;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_343;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_344;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_245;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_267;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_281;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_295;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_321;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_339;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_342;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_103 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) *
                                                                     ( -tmp_kernel_op_345 - tmp_kernel_op_77 ) ) ) ) +
                      tmp_kernel_op_135 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_109 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_167 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_141 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_199 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_173 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_231 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) *
                                                                     ( -tmp_kernel_op_205 - tmp_kernel_op_345 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_71 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_345 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_346;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_347;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_246;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_268;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_282;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_296;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_329;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_340;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_343;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_346;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_74 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_76 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_106 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_108 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_170 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_172 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_202 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_204 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.059715871789769892 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_247;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_269;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_283;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_297;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_337;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_341;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_344;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_347;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_348;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_103 * ( ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_72 - tmp_kernel_op_73 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_75 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_135 * ( ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_104 - tmp_kernel_op_105 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_107 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_167 * ( ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_136 - tmp_kernel_op_137 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_139 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_199 * ( ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_168 - tmp_kernel_op_169 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_171 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_231 * ( ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_200 - tmp_kernel_op_201 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_203 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_71 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.47014206410511505 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::
    computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_0_macro_3D(
        walberla::float64* RESTRICT _data_invDiag_Edge,
        walberla::float64* RESTRICT _data_invDiag_Vertex,
        walberla::float64* RESTRICT _data_kEdge,
        walberla::float64* RESTRICT _data_kVertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_25 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_26 = k_dof_3 * tmp_kernel_op_25;
                  const walberla::float64 tmp_kernel_op_27 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_25 + 1.0;
                  const walberla::float64 tmp_kernel_op_30 =
                      ( k_dof_0 * ( tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_24 + tmp_kernel_op_28 + tmp_kernel_op_29 -
                                    2.0 ) +
                        k_dof_1 * ( tmp_kernel_op_23 - 0.33333333333333331 ) +
                        k_dof_2 * ( tmp_kernel_op_24 - 0.33333333333333331 ) + k_dof_4 * tmp_kernel_op_20 +
                        k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * ( -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333 ) +
                        k_dof_9 * ( tmp_kernel_op_1 * -4.0 - tmp_kernel_op_28 + 1.3333333333333333 ) + tmp_kernel_op_26 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_30 * 16.0;
                  const walberla::float64 tmp_kernel_op_32 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_33 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_34 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_39 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_40 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_41 = jac_blending_0_0_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_42 = jac_blending_0_1_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_43 = jac_blending_0_2_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_44 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_blending_0_0_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_1_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_2_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_46;
                  const int64_t           tmp_kernel_op_50 = 0;
                  const walberla::float64 tmp_kernel_op_51 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_52 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_52 + tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_57 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_51 + tmp_kernel_op_54 + tmp_kernel_op_55 + tmp_kernel_op_56 -
                                    1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_54 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_55 - 0.059715871789769892 ) + k_dof_4 * tmp_kernel_op_51 +
                        k_dof_5 * tmp_kernel_op_52 + k_dof_6 * tmp_kernel_op_53 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_51 - tmp_kernel_op_52 ) +
                        k_dof_8 * ( tmp_kernel_op_34 * -4.0 - tmp_kernel_op_51 - tmp_kernel_op_53 + 0.23886348715907957 ) +
                        k_dof_9 * ( tmp_kernel_op_33 * -4.0 - tmp_kernel_op_56 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_41 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_42 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_43 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_47 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_48 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_49 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_47 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_48 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_49 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_41 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_42 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_43 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 * 16.0;
                  const walberla::float64 tmp_kernel_op_59 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_60 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_61 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_62 = 0;
                  const int64_t           tmp_kernel_op_63 = 0;
                  const int64_t           tmp_kernel_op_64 = tmp_kernel_op_62 + tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_65 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_66 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_67 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_68 = jac_blending_0_0_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_69 = jac_blending_0_1_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_70 = jac_blending_0_2_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_71 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_72 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_73 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_74 = jac_blending_0_0_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_75 = jac_blending_0_1_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_76 = jac_blending_0_2_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_77 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_78 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_79 = tmp_kernel_op_59 * 4.0;
                  const walberla::float64 tmp_kernel_op_80 = tmp_kernel_op_60 * 2.0;
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_61 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_78 + tmp_kernel_op_79;
                  const walberla::float64 tmp_kernel_op_83 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_77 + tmp_kernel_op_80 + tmp_kernel_op_81 + tmp_kernel_op_82 -
                                    2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_80 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_81 - 0.79742698535308731 ) + k_dof_4 * tmp_kernel_op_77 +
                        k_dof_5 * tmp_kernel_op_78 + k_dof_6 * tmp_kernel_op_79 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_77 - tmp_kernel_op_78 ) +
                        k_dof_8 * ( tmp_kernel_op_61 * -4.0 - tmp_kernel_op_77 - tmp_kernel_op_79 + 3.1897079414123493 ) +
                        k_dof_9 * ( tmp_kernel_op_60 * -4.0 - tmp_kernel_op_82 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_68 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_69 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_70 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_74 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_75 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_76 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_74 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_75 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_76 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_68 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_69 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_70 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_83 * 16.0;
                  const walberla::float64 tmp_kernel_op_85 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_86 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_87 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_88 = 0;
                  const int64_t           tmp_kernel_op_89 = 0;
                  const int64_t           tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_92 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_93 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_94 = jac_blending_0_0_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_95 = jac_blending_0_1_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_96 = jac_blending_0_2_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_97 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_98 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_99 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_100 = jac_blending_0_0_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_101 = jac_blending_0_1_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_102 = jac_blending_0_2_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_103 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_104 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_85 * 4.0;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_86 * 2.0;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_87 * 2.0;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_104 + tmp_kernel_op_105;
                  const walberla::float64 tmp_kernel_op_109 =
                      ( k_dof_0 * ( tmp_kernel_op_103 + tmp_kernel_op_106 + tmp_kernel_op_107 + tmp_kernel_op_108 +
                                    tmp_kernel_op_29 - 1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_106 - 0.059715871789769892 ) +
                        k_dof_2 * ( tmp_kernel_op_107 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_103 +
                        k_dof_5 * tmp_kernel_op_104 + k_dof_6 * tmp_kernel_op_105 +
                        k_dof_7 * ( -tmp_kernel_op_103 - tmp_kernel_op_104 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( -tmp_kernel_op_103 - tmp_kernel_op_105 + tmp_kernel_op_87 * -4.0 + 1.8805682564204602 ) +
                        k_dof_9 * ( -tmp_kernel_op_108 + tmp_kernel_op_86 * -4.0 + 0.23886348715907957 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_100 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_101 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_102 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_94 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_95 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_96 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_94 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_95 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_96 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_100 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_101 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_102 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_109 * 16.0;
                  const walberla::float64 tmp_kernel_op_111 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_112 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_113 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_114 = 0;
                  const int64_t           tmp_kernel_op_115 = 0;
                  const int64_t           tmp_kernel_op_116 = tmp_kernel_op_114 + tmp_kernel_op_115;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_119 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_0_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_1_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_122 = jac_blending_0_2_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_123 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_124 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_125 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_126 = jac_blending_0_0_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_127 = jac_blending_0_1_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_128 = jac_blending_0_2_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_129 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_130 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_111 * 4.0;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_112 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_113 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_130 + tmp_kernel_op_131;
                  const walberla::float64 tmp_kernel_op_135 =
                      ( k_dof_0 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                    tmp_kernel_op_29 - 2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_132 - 0.79742698535308731 ) +
                        k_dof_2 * ( tmp_kernel_op_133 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_129 +
                        k_dof_5 * tmp_kernel_op_130 + k_dof_6 * tmp_kernel_op_131 +
                        k_dof_7 * ( -tmp_kernel_op_129 - tmp_kernel_op_130 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_113 * -4.0 - tmp_kernel_op_129 - tmp_kernel_op_131 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_112 * -4.0 - tmp_kernel_op_134 + 3.1897079414123493 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_120 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_121 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_122 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_126 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_127 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_128 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_126 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_127 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_128 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_120 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_121 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_122 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_135 * 16.0;
                  const walberla::float64 tmp_kernel_op_137 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_138 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_139 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = 0;
                  const int64_t           tmp_kernel_op_142 = tmp_kernel_op_140 + tmp_kernel_op_141;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_145 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_0_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_1_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_148 = jac_blending_0_2_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_151 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_0_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_1_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_154 = jac_blending_0_2_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_155 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_156 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 4.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_139 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_156 + tmp_kernel_op_157;
                  const walberla::float64 tmp_kernel_op_161 =
                      ( k_dof_0 * ( tmp_kernel_op_155 + tmp_kernel_op_158 + tmp_kernel_op_159 + tmp_kernel_op_160 +
                                    tmp_kernel_op_29 - 2.8208523846306903 ) +
                        k_dof_1 * ( tmp_kernel_op_158 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_159 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_155 +
                        k_dof_5 * tmp_kernel_op_156 + k_dof_6 * tmp_kernel_op_157 +
                        k_dof_7 * ( -tmp_kernel_op_155 - tmp_kernel_op_156 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_139 * -4.0 - tmp_kernel_op_155 - tmp_kernel_op_157 + 1.8805682564204602 ) +
                        k_dof_9 * ( tmp_kernel_op_138 * -4.0 - tmp_kernel_op_160 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_146 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_147 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_148 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_152 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_153 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_154 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_152 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_153 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_154 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_146 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_147 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_148 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_161 * 16.0;
                  const walberla::float64 tmp_kernel_op_163 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_164 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_165 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_166 = 0;
                  const int64_t           tmp_kernel_op_167 = 0;
                  const int64_t           tmp_kernel_op_168 = tmp_kernel_op_166 + tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_169 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_170 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_171 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_172 = jac_blending_0_0_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_173 = jac_blending_0_1_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_174 = jac_blending_0_2_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_177 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_0_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_1_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_180 = jac_blending_0_2_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_181 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_182 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_163 * 4.0;
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_164 * 2.0;
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_165 * 2.0;
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_182 + tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_187 =
                      ( k_dof_0 * ( tmp_kernel_op_181 + tmp_kernel_op_184 + tmp_kernel_op_185 + tmp_kernel_op_186 +
                                    tmp_kernel_op_29 - 0.60771904394073784 ) +
                        k_dof_1 * ( tmp_kernel_op_184 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_185 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_181 +
                        k_dof_5 * tmp_kernel_op_182 + k_dof_6 * tmp_kernel_op_183 +
                        k_dof_7 * ( -tmp_kernel_op_181 - tmp_kernel_op_182 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_165 * -4.0 - tmp_kernel_op_181 - tmp_kernel_op_183 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_164 * -4.0 - tmp_kernel_op_186 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_172 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_173 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_174 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_178 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_179 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_180 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_178 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_179 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_180 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_172 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_173 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_174 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_187 * 16.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_30 * 4.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_57 * 4.0;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_83 * 4.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_109 * 4.0;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_135 * 4.0;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_161 * 4.0;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 * 4.0;
                  const int64_t           tmp_kernel_op_196 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_58 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_84 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_110 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_136 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_162 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_203 = tmp_kernel_op_188 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_204 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_110 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 *
                          ( ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) *
                            ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) ) +
                      tmp_kernel_op_162 *
                          ( ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) *
                            ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) ) +
                      tmp_kernel_op_188 *
                          ( ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) *
                            ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 *
                          ( ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) *
                            ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_33 - 0.23507103205255753 ) * ( tmp_kernel_op_33 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_60 - 0.050643253661728158 ) * ( tmp_kernel_op_60 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_86 - 0.029857935894884946 ) * ( tmp_kernel_op_86 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_112 - 0.39871349267654366 ) * ( tmp_kernel_op_112 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_138 - 0.23507103205255753 ) * ( tmp_kernel_op_138 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_164 - 0.050643253661728158 ) * ( tmp_kernel_op_164 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_34 - 0.029857935894884946 ) * ( tmp_kernel_op_34 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_61 - 0.39871349267654366 ) * ( tmp_kernel_op_61 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_87 - 0.23507103205255753 ) * ( tmp_kernel_op_87 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_113 - 0.050643253661728158 ) * ( tmp_kernel_op_113 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_139 - 0.23507103205255753 ) * ( tmp_kernel_op_139 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_165 - 0.050643253661728158 ) * ( tmp_kernel_op_165 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_189 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_196 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_113 * tmp_kernel_op_201 + tmp_kernel_op_139 * tmp_kernel_op_202 +
                      tmp_kernel_op_165 * tmp_kernel_op_203 + tmp_kernel_op_197 * tmp_kernel_op_2 +
                      tmp_kernel_op_198 * tmp_kernel_op_34 + tmp_kernel_op_199 * tmp_kernel_op_61 +
                      tmp_kernel_op_200 * tmp_kernel_op_87;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_197 + tmp_kernel_op_112 * tmp_kernel_op_201 +
                      tmp_kernel_op_138 * tmp_kernel_op_202 + tmp_kernel_op_164 * tmp_kernel_op_203 +
                      tmp_kernel_op_198 * tmp_kernel_op_33 + tmp_kernel_op_199 * tmp_kernel_op_60 +
                      tmp_kernel_op_200 * tmp_kernel_op_86;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_110 * tmp_kernel_op_86 * tmp_kernel_op_87 +
                                                        tmp_kernel_op_112 * tmp_kernel_op_113 * tmp_kernel_op_136 +
                                                        tmp_kernel_op_138 * tmp_kernel_op_139 * tmp_kernel_op_162 +
                                                        tmp_kernel_op_164 * tmp_kernel_op_165 * tmp_kernel_op_188 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_58 +
                                                        tmp_kernel_op_60 * tmp_kernel_op_61 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_110 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) *
                                                                     ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_162 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_188 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_1 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_UP */
         const walberla::float64 tmp_coords_jac_0_BLUE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_6_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_3_0_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) +
             tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_3_1_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) +
             tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_3_2_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) +
             tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
         const walberla::float64 jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
         const walberla::float64 jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
         const walberla::float64 jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
         const walberla::float64 jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
         const walberla::float64 jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_25 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_26 = k_dof_3 * tmp_kernel_op_25;
                  const walberla::float64 tmp_kernel_op_27 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_25 + 1.0;
                  const walberla::float64 tmp_kernel_op_30 =
                      ( k_dof_0 * ( tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_24 + tmp_kernel_op_28 + tmp_kernel_op_29 -
                                    2.0 ) +
                        k_dof_1 * ( tmp_kernel_op_23 - 0.33333333333333331 ) +
                        k_dof_2 * ( tmp_kernel_op_24 - 0.33333333333333331 ) + k_dof_4 * tmp_kernel_op_20 +
                        k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * ( -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333 ) +
                        k_dof_9 * ( tmp_kernel_op_1 * -4.0 - tmp_kernel_op_28 + 1.3333333333333333 ) + tmp_kernel_op_26 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_30 * 16.0;
                  const walberla::float64 tmp_kernel_op_32 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_33 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_34 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_39 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_40 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_41 = jac_blending_0_0_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_42 = jac_blending_0_1_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_43 = jac_blending_0_2_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_44 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_blending_0_0_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_1_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_2_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_46;
                  const int64_t           tmp_kernel_op_50 = 0;
                  const walberla::float64 tmp_kernel_op_51 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_52 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_52 + tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_57 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_51 + tmp_kernel_op_54 + tmp_kernel_op_55 + tmp_kernel_op_56 -
                                    1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_54 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_55 - 0.059715871789769892 ) + k_dof_4 * tmp_kernel_op_51 +
                        k_dof_5 * tmp_kernel_op_52 + k_dof_6 * tmp_kernel_op_53 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_51 - tmp_kernel_op_52 ) +
                        k_dof_8 * ( tmp_kernel_op_34 * -4.0 - tmp_kernel_op_51 - tmp_kernel_op_53 + 0.23886348715907957 ) +
                        k_dof_9 * ( tmp_kernel_op_33 * -4.0 - tmp_kernel_op_56 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_41 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_42 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_43 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_47 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_48 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_49 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_47 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_48 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_49 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_41 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_42 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_43 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 * 16.0;
                  const walberla::float64 tmp_kernel_op_59 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_60 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_61 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_62 = 0;
                  const int64_t           tmp_kernel_op_63 = 0;
                  const int64_t           tmp_kernel_op_64 = tmp_kernel_op_62 + tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_65 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_66 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_67 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_68 = jac_blending_0_0_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_69 = jac_blending_0_1_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_70 = jac_blending_0_2_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_71 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_72 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_73 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_74 = jac_blending_0_0_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_75 = jac_blending_0_1_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_76 = jac_blending_0_2_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_77 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_78 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_79 = tmp_kernel_op_59 * 4.0;
                  const walberla::float64 tmp_kernel_op_80 = tmp_kernel_op_60 * 2.0;
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_61 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_78 + tmp_kernel_op_79;
                  const walberla::float64 tmp_kernel_op_83 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_77 + tmp_kernel_op_80 + tmp_kernel_op_81 + tmp_kernel_op_82 -
                                    2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_80 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_81 - 0.79742698535308731 ) + k_dof_4 * tmp_kernel_op_77 +
                        k_dof_5 * tmp_kernel_op_78 + k_dof_6 * tmp_kernel_op_79 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_77 - tmp_kernel_op_78 ) +
                        k_dof_8 * ( tmp_kernel_op_61 * -4.0 - tmp_kernel_op_77 - tmp_kernel_op_79 + 3.1897079414123493 ) +
                        k_dof_9 * ( tmp_kernel_op_60 * -4.0 - tmp_kernel_op_82 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_68 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_69 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_70 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_74 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_75 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_76 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_74 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_75 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_76 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_68 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_69 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_70 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_83 * 16.0;
                  const walberla::float64 tmp_kernel_op_85 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_86 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_87 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_88 = 0;
                  const int64_t           tmp_kernel_op_89 = 0;
                  const int64_t           tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_92 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_93 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_94 = jac_blending_0_0_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_95 = jac_blending_0_1_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_96 = jac_blending_0_2_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_97 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_98 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_99 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_100 = jac_blending_0_0_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_101 = jac_blending_0_1_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_102 = jac_blending_0_2_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_103 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_104 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_85 * 4.0;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_86 * 2.0;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_87 * 2.0;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_104 + tmp_kernel_op_105;
                  const walberla::float64 tmp_kernel_op_109 =
                      ( k_dof_0 * ( tmp_kernel_op_103 + tmp_kernel_op_106 + tmp_kernel_op_107 + tmp_kernel_op_108 +
                                    tmp_kernel_op_29 - 1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_106 - 0.059715871789769892 ) +
                        k_dof_2 * ( tmp_kernel_op_107 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_103 +
                        k_dof_5 * tmp_kernel_op_104 + k_dof_6 * tmp_kernel_op_105 +
                        k_dof_7 * ( -tmp_kernel_op_103 - tmp_kernel_op_104 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( -tmp_kernel_op_103 - tmp_kernel_op_105 + tmp_kernel_op_87 * -4.0 + 1.8805682564204602 ) +
                        k_dof_9 * ( -tmp_kernel_op_108 + tmp_kernel_op_86 * -4.0 + 0.23886348715907957 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_100 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_101 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_102 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_94 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_95 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_96 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_94 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_95 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_96 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_100 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_101 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_102 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_109 * 16.0;
                  const walberla::float64 tmp_kernel_op_111 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_112 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_113 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_114 = 0;
                  const int64_t           tmp_kernel_op_115 = 0;
                  const int64_t           tmp_kernel_op_116 = tmp_kernel_op_114 + tmp_kernel_op_115;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_119 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_0_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_1_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_122 = jac_blending_0_2_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_123 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_124 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_125 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_126 = jac_blending_0_0_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_127 = jac_blending_0_1_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_128 = jac_blending_0_2_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_129 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_130 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_111 * 4.0;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_112 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_113 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_130 + tmp_kernel_op_131;
                  const walberla::float64 tmp_kernel_op_135 =
                      ( k_dof_0 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                    tmp_kernel_op_29 - 2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_132 - 0.79742698535308731 ) +
                        k_dof_2 * ( tmp_kernel_op_133 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_129 +
                        k_dof_5 * tmp_kernel_op_130 + k_dof_6 * tmp_kernel_op_131 +
                        k_dof_7 * ( -tmp_kernel_op_129 - tmp_kernel_op_130 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_113 * -4.0 - tmp_kernel_op_129 - tmp_kernel_op_131 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_112 * -4.0 - tmp_kernel_op_134 + 3.1897079414123493 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_120 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_121 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_122 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_126 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_127 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_128 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_126 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_127 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_128 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_120 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_121 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_122 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_135 * 16.0;
                  const walberla::float64 tmp_kernel_op_137 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_138 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_139 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = 0;
                  const int64_t           tmp_kernel_op_142 = tmp_kernel_op_140 + tmp_kernel_op_141;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_145 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_0_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_1_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_148 = jac_blending_0_2_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_151 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_0_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_1_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_154 = jac_blending_0_2_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_155 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_156 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 4.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_139 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_156 + tmp_kernel_op_157;
                  const walberla::float64 tmp_kernel_op_161 =
                      ( k_dof_0 * ( tmp_kernel_op_155 + tmp_kernel_op_158 + tmp_kernel_op_159 + tmp_kernel_op_160 +
                                    tmp_kernel_op_29 - 2.8208523846306903 ) +
                        k_dof_1 * ( tmp_kernel_op_158 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_159 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_155 +
                        k_dof_5 * tmp_kernel_op_156 + k_dof_6 * tmp_kernel_op_157 +
                        k_dof_7 * ( -tmp_kernel_op_155 - tmp_kernel_op_156 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_139 * -4.0 - tmp_kernel_op_155 - tmp_kernel_op_157 + 1.8805682564204602 ) +
                        k_dof_9 * ( tmp_kernel_op_138 * -4.0 - tmp_kernel_op_160 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_146 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_147 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_148 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_152 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_153 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_154 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_152 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_153 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_154 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_146 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_147 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_148 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_161 * 16.0;
                  const walberla::float64 tmp_kernel_op_163 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_164 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_165 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_166 = 0;
                  const int64_t           tmp_kernel_op_167 = 0;
                  const int64_t           tmp_kernel_op_168 = tmp_kernel_op_166 + tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_169 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_170 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_171 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_172 = jac_blending_0_0_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_173 = jac_blending_0_1_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_174 = jac_blending_0_2_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_177 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_0_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_1_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_180 = jac_blending_0_2_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_181 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_182 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_163 * 4.0;
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_164 * 2.0;
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_165 * 2.0;
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_182 + tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_187 =
                      ( k_dof_0 * ( tmp_kernel_op_181 + tmp_kernel_op_184 + tmp_kernel_op_185 + tmp_kernel_op_186 +
                                    tmp_kernel_op_29 - 0.60771904394073784 ) +
                        k_dof_1 * ( tmp_kernel_op_184 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_185 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_181 +
                        k_dof_5 * tmp_kernel_op_182 + k_dof_6 * tmp_kernel_op_183 +
                        k_dof_7 * ( -tmp_kernel_op_181 - tmp_kernel_op_182 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_165 * -4.0 - tmp_kernel_op_181 - tmp_kernel_op_183 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_164 * -4.0 - tmp_kernel_op_186 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_172 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_173 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_174 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_178 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_179 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_180 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_178 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_179 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_180 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_172 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_173 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_174 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_187 * 16.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_30 * 4.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_57 * 4.0;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_83 * 4.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_109 * 4.0;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_135 * 4.0;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_161 * 4.0;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 * 4.0;
                  const int64_t           tmp_kernel_op_196 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_58 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_84 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_110 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_136 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_162 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_203 = tmp_kernel_op_188 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_204 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_110 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 *
                          ( ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) *
                            ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) ) +
                      tmp_kernel_op_162 *
                          ( ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) *
                            ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) ) +
                      tmp_kernel_op_188 *
                          ( ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) *
                            ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 *
                          ( ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) *
                            ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_33 - 0.23507103205255753 ) * ( tmp_kernel_op_33 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_60 - 0.050643253661728158 ) * ( tmp_kernel_op_60 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_86 - 0.029857935894884946 ) * ( tmp_kernel_op_86 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_112 - 0.39871349267654366 ) * ( tmp_kernel_op_112 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_138 - 0.23507103205255753 ) * ( tmp_kernel_op_138 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_164 - 0.050643253661728158 ) * ( tmp_kernel_op_164 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_34 - 0.029857935894884946 ) * ( tmp_kernel_op_34 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_61 - 0.39871349267654366 ) * ( tmp_kernel_op_61 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_87 - 0.23507103205255753 ) * ( tmp_kernel_op_87 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_113 - 0.050643253661728158 ) * ( tmp_kernel_op_113 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_139 - 0.23507103205255753 ) * ( tmp_kernel_op_139 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_165 - 0.050643253661728158 ) * ( tmp_kernel_op_165 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_189 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_196 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_113 * tmp_kernel_op_201 + tmp_kernel_op_139 * tmp_kernel_op_202 +
                      tmp_kernel_op_165 * tmp_kernel_op_203 + tmp_kernel_op_197 * tmp_kernel_op_2 +
                      tmp_kernel_op_198 * tmp_kernel_op_34 + tmp_kernel_op_199 * tmp_kernel_op_61 +
                      tmp_kernel_op_200 * tmp_kernel_op_87;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_197 + tmp_kernel_op_112 * tmp_kernel_op_201 +
                      tmp_kernel_op_138 * tmp_kernel_op_202 + tmp_kernel_op_164 * tmp_kernel_op_203 +
                      tmp_kernel_op_198 * tmp_kernel_op_33 + tmp_kernel_op_199 * tmp_kernel_op_60 +
                      tmp_kernel_op_200 * tmp_kernel_op_86;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_110 * tmp_kernel_op_86 * tmp_kernel_op_87 +
                                                        tmp_kernel_op_112 * tmp_kernel_op_113 * tmp_kernel_op_136 +
                                                        tmp_kernel_op_138 * tmp_kernel_op_139 * tmp_kernel_op_162 +
                                                        tmp_kernel_op_164 * tmp_kernel_op_165 * tmp_kernel_op_188 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_58 +
                                                        tmp_kernel_op_60 * tmp_kernel_op_61 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_110 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) *
                                                                     ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_162 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_188 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::
    computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_1_macro_3D(
        walberla::float64* RESTRICT _data_invDiag_Edge,
        walberla::float64* RESTRICT _data_invDiag_Vertex,
        walberla::float64* RESTRICT _data_kEdge,
        walberla::float64* RESTRICT _data_kVertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_25 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_26 = k_dof_3 * tmp_kernel_op_25;
                  const walberla::float64 tmp_kernel_op_27 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_25 + 1.0;
                  const walberla::float64 tmp_kernel_op_30 =
                      ( k_dof_0 * ( tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_24 + tmp_kernel_op_28 + tmp_kernel_op_29 -
                                    2.0 ) +
                        k_dof_1 * ( tmp_kernel_op_23 - 0.33333333333333331 ) +
                        k_dof_2 * ( tmp_kernel_op_24 - 0.33333333333333331 ) + k_dof_4 * tmp_kernel_op_20 +
                        k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * ( -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333 ) +
                        k_dof_9 * ( tmp_kernel_op_1 * -4.0 - tmp_kernel_op_28 + 1.3333333333333333 ) + tmp_kernel_op_26 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_30 * 16.0;
                  const walberla::float64 tmp_kernel_op_32 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_33 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_34 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_39 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_40 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_41 = jac_blending_0_0_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_42 = jac_blending_0_1_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_43 = jac_blending_0_2_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_44 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_blending_0_0_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_1_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_2_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_46;
                  const int64_t           tmp_kernel_op_50 = 0;
                  const walberla::float64 tmp_kernel_op_51 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_52 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_52 + tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_57 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_51 + tmp_kernel_op_54 + tmp_kernel_op_55 + tmp_kernel_op_56 -
                                    1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_54 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_55 - 0.059715871789769892 ) + k_dof_4 * tmp_kernel_op_51 +
                        k_dof_5 * tmp_kernel_op_52 + k_dof_6 * tmp_kernel_op_53 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_51 - tmp_kernel_op_52 ) +
                        k_dof_8 * ( tmp_kernel_op_34 * -4.0 - tmp_kernel_op_51 - tmp_kernel_op_53 + 0.23886348715907957 ) +
                        k_dof_9 * ( tmp_kernel_op_33 * -4.0 - tmp_kernel_op_56 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_41 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_42 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_43 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_47 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_48 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_49 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_47 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_48 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_49 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_41 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_42 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_43 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 * 16.0;
                  const walberla::float64 tmp_kernel_op_59 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_60 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_61 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_62 = 0;
                  const int64_t           tmp_kernel_op_63 = 0;
                  const int64_t           tmp_kernel_op_64 = tmp_kernel_op_62 + tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_65 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_66 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_67 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_68 = jac_blending_0_0_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_69 = jac_blending_0_1_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_70 = jac_blending_0_2_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_71 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_72 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_73 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_74 = jac_blending_0_0_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_75 = jac_blending_0_1_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_76 = jac_blending_0_2_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_77 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_78 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_79 = tmp_kernel_op_59 * 4.0;
                  const walberla::float64 tmp_kernel_op_80 = tmp_kernel_op_60 * 2.0;
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_61 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_78 + tmp_kernel_op_79;
                  const walberla::float64 tmp_kernel_op_83 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_77 + tmp_kernel_op_80 + tmp_kernel_op_81 + tmp_kernel_op_82 -
                                    2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_80 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_81 - 0.79742698535308731 ) + k_dof_4 * tmp_kernel_op_77 +
                        k_dof_5 * tmp_kernel_op_78 + k_dof_6 * tmp_kernel_op_79 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_77 - tmp_kernel_op_78 ) +
                        k_dof_8 * ( tmp_kernel_op_61 * -4.0 - tmp_kernel_op_77 - tmp_kernel_op_79 + 3.1897079414123493 ) +
                        k_dof_9 * ( tmp_kernel_op_60 * -4.0 - tmp_kernel_op_82 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_68 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_69 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_70 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_74 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_75 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_76 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_74 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_75 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_76 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_68 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_69 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_70 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_83 * 16.0;
                  const walberla::float64 tmp_kernel_op_85 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_86 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_87 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_88 = 0;
                  const int64_t           tmp_kernel_op_89 = 0;
                  const int64_t           tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_92 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_93 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_94 = jac_blending_0_0_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_95 = jac_blending_0_1_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_96 = jac_blending_0_2_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_97 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_98 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_99 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_100 = jac_blending_0_0_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_101 = jac_blending_0_1_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_102 = jac_blending_0_2_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_103 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_104 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_85 * 4.0;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_86 * 2.0;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_87 * 2.0;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_104 + tmp_kernel_op_105;
                  const walberla::float64 tmp_kernel_op_109 =
                      ( k_dof_0 * ( tmp_kernel_op_103 + tmp_kernel_op_106 + tmp_kernel_op_107 + tmp_kernel_op_108 +
                                    tmp_kernel_op_29 - 1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_106 - 0.059715871789769892 ) +
                        k_dof_2 * ( tmp_kernel_op_107 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_103 +
                        k_dof_5 * tmp_kernel_op_104 + k_dof_6 * tmp_kernel_op_105 +
                        k_dof_7 * ( -tmp_kernel_op_103 - tmp_kernel_op_104 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( -tmp_kernel_op_103 - tmp_kernel_op_105 + tmp_kernel_op_87 * -4.0 + 1.8805682564204602 ) +
                        k_dof_9 * ( -tmp_kernel_op_108 + tmp_kernel_op_86 * -4.0 + 0.23886348715907957 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_100 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_101 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_102 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_94 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_95 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_96 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_94 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_95 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_96 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_100 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_101 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_102 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_109 * 16.0;
                  const walberla::float64 tmp_kernel_op_111 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_112 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_113 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_114 = 0;
                  const int64_t           tmp_kernel_op_115 = 0;
                  const int64_t           tmp_kernel_op_116 = tmp_kernel_op_114 + tmp_kernel_op_115;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_119 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_0_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_1_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_122 = jac_blending_0_2_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_123 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_124 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_125 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_126 = jac_blending_0_0_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_127 = jac_blending_0_1_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_128 = jac_blending_0_2_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_129 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_130 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_111 * 4.0;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_112 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_113 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_130 + tmp_kernel_op_131;
                  const walberla::float64 tmp_kernel_op_135 =
                      ( k_dof_0 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                    tmp_kernel_op_29 - 2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_132 - 0.79742698535308731 ) +
                        k_dof_2 * ( tmp_kernel_op_133 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_129 +
                        k_dof_5 * tmp_kernel_op_130 + k_dof_6 * tmp_kernel_op_131 +
                        k_dof_7 * ( -tmp_kernel_op_129 - tmp_kernel_op_130 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_113 * -4.0 - tmp_kernel_op_129 - tmp_kernel_op_131 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_112 * -4.0 - tmp_kernel_op_134 + 3.1897079414123493 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_120 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_121 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_122 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_126 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_127 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_128 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_126 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_127 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_128 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_120 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_121 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_122 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_135 * 16.0;
                  const walberla::float64 tmp_kernel_op_137 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_138 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_139 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = 0;
                  const int64_t           tmp_kernel_op_142 = tmp_kernel_op_140 + tmp_kernel_op_141;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_145 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_0_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_1_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_148 = jac_blending_0_2_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_151 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_0_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_1_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_154 = jac_blending_0_2_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_155 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_156 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 4.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_139 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_156 + tmp_kernel_op_157;
                  const walberla::float64 tmp_kernel_op_161 =
                      ( k_dof_0 * ( tmp_kernel_op_155 + tmp_kernel_op_158 + tmp_kernel_op_159 + tmp_kernel_op_160 +
                                    tmp_kernel_op_29 - 2.8208523846306903 ) +
                        k_dof_1 * ( tmp_kernel_op_158 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_159 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_155 +
                        k_dof_5 * tmp_kernel_op_156 + k_dof_6 * tmp_kernel_op_157 +
                        k_dof_7 * ( -tmp_kernel_op_155 - tmp_kernel_op_156 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_139 * -4.0 - tmp_kernel_op_155 - tmp_kernel_op_157 + 1.8805682564204602 ) +
                        k_dof_9 * ( tmp_kernel_op_138 * -4.0 - tmp_kernel_op_160 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_146 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_147 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_148 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_152 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_153 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_154 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_152 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_153 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_154 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_146 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_147 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_148 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_161 * 16.0;
                  const walberla::float64 tmp_kernel_op_163 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_164 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_165 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_166 = 0;
                  const int64_t           tmp_kernel_op_167 = 0;
                  const int64_t           tmp_kernel_op_168 = tmp_kernel_op_166 + tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_169 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_170 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_171 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_172 = jac_blending_0_0_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_173 = jac_blending_0_1_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_174 = jac_blending_0_2_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_177 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_0_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_1_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_180 = jac_blending_0_2_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_181 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_182 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_163 * 4.0;
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_164 * 2.0;
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_165 * 2.0;
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_182 + tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_187 =
                      ( k_dof_0 * ( tmp_kernel_op_181 + tmp_kernel_op_184 + tmp_kernel_op_185 + tmp_kernel_op_186 +
                                    tmp_kernel_op_29 - 0.60771904394073784 ) +
                        k_dof_1 * ( tmp_kernel_op_184 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_185 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_181 +
                        k_dof_5 * tmp_kernel_op_182 + k_dof_6 * tmp_kernel_op_183 +
                        k_dof_7 * ( -tmp_kernel_op_181 - tmp_kernel_op_182 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_165 * -4.0 - tmp_kernel_op_181 - tmp_kernel_op_183 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_164 * -4.0 - tmp_kernel_op_186 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_172 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_173 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_174 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_178 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_179 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_180 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_178 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_179 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_180 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_172 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_173 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_174 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_187 * 16.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_30 * 4.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_57 * 4.0;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_83 * 4.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_109 * 4.0;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_135 * 4.0;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_161 * 4.0;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 * 4.0;
                  const int64_t           tmp_kernel_op_196 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_58 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_84 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_110 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_136 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_162 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_203 = tmp_kernel_op_188 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_204 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_110 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 *
                          ( ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) *
                            ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) ) +
                      tmp_kernel_op_162 *
                          ( ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) *
                            ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) ) +
                      tmp_kernel_op_188 *
                          ( ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) *
                            ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 *
                          ( ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) *
                            ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_33 - 0.23507103205255753 ) * ( tmp_kernel_op_33 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_60 - 0.050643253661728158 ) * ( tmp_kernel_op_60 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_86 - 0.029857935894884946 ) * ( tmp_kernel_op_86 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_112 - 0.39871349267654366 ) * ( tmp_kernel_op_112 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_138 - 0.23507103205255753 ) * ( tmp_kernel_op_138 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_164 - 0.050643253661728158 ) * ( tmp_kernel_op_164 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_34 - 0.029857935894884946 ) * ( tmp_kernel_op_34 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_61 - 0.39871349267654366 ) * ( tmp_kernel_op_61 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_87 - 0.23507103205255753 ) * ( tmp_kernel_op_87 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_113 - 0.050643253661728158 ) * ( tmp_kernel_op_113 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_139 - 0.23507103205255753 ) * ( tmp_kernel_op_139 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_165 - 0.050643253661728158 ) * ( tmp_kernel_op_165 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_189 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_196 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_113 * tmp_kernel_op_201 + tmp_kernel_op_139 * tmp_kernel_op_202 +
                      tmp_kernel_op_165 * tmp_kernel_op_203 + tmp_kernel_op_197 * tmp_kernel_op_2 +
                      tmp_kernel_op_198 * tmp_kernel_op_34 + tmp_kernel_op_199 * tmp_kernel_op_61 +
                      tmp_kernel_op_200 * tmp_kernel_op_87;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_197 + tmp_kernel_op_112 * tmp_kernel_op_201 +
                      tmp_kernel_op_138 * tmp_kernel_op_202 + tmp_kernel_op_164 * tmp_kernel_op_203 +
                      tmp_kernel_op_198 * tmp_kernel_op_33 + tmp_kernel_op_199 * tmp_kernel_op_60 +
                      tmp_kernel_op_200 * tmp_kernel_op_86;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_110 * tmp_kernel_op_86 * tmp_kernel_op_87 +
                                                        tmp_kernel_op_112 * tmp_kernel_op_113 * tmp_kernel_op_136 +
                                                        tmp_kernel_op_138 * tmp_kernel_op_139 * tmp_kernel_op_162 +
                                                        tmp_kernel_op_164 * tmp_kernel_op_165 * tmp_kernel_op_188 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_58 +
                                                        tmp_kernel_op_60 * tmp_kernel_op_61 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_110 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) *
                                                                     ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_162 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_188 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_1 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_UP */
         const walberla::float64 tmp_coords_jac_0_GREEN_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_6_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
         const walberla::float64 p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
         const walberla::float64 p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
         const walberla::float64 p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_2_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_2_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_2_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_3_0_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
         const walberla::float64 jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
         const walberla::float64 jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
         const walberla::float64 jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
         const walberla::float64 jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
         const walberla::float64 jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_25 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_26 = k_dof_3 * tmp_kernel_op_25;
                  const walberla::float64 tmp_kernel_op_27 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_25 + 1.0;
                  const walberla::float64 tmp_kernel_op_30 =
                      ( k_dof_0 * ( tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_24 + tmp_kernel_op_28 + tmp_kernel_op_29 -
                                    2.0 ) +
                        k_dof_1 * ( tmp_kernel_op_23 - 0.33333333333333331 ) +
                        k_dof_2 * ( tmp_kernel_op_24 - 0.33333333333333331 ) + k_dof_4 * tmp_kernel_op_20 +
                        k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * ( -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333 ) +
                        k_dof_9 * ( tmp_kernel_op_1 * -4.0 - tmp_kernel_op_28 + 1.3333333333333333 ) + tmp_kernel_op_26 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_30 * 16.0;
                  const walberla::float64 tmp_kernel_op_32 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_33 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_34 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_39 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_40 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_41 = jac_blending_0_0_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_42 = jac_blending_0_1_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_43 = jac_blending_0_2_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_44 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_blending_0_0_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_1_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_2_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_46;
                  const int64_t           tmp_kernel_op_50 = 0;
                  const walberla::float64 tmp_kernel_op_51 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_52 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_52 + tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_57 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_51 + tmp_kernel_op_54 + tmp_kernel_op_55 + tmp_kernel_op_56 -
                                    1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_54 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_55 - 0.059715871789769892 ) + k_dof_4 * tmp_kernel_op_51 +
                        k_dof_5 * tmp_kernel_op_52 + k_dof_6 * tmp_kernel_op_53 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_51 - tmp_kernel_op_52 ) +
                        k_dof_8 * ( tmp_kernel_op_34 * -4.0 - tmp_kernel_op_51 - tmp_kernel_op_53 + 0.23886348715907957 ) +
                        k_dof_9 * ( tmp_kernel_op_33 * -4.0 - tmp_kernel_op_56 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_41 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_42 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_43 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_47 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_48 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_49 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_47 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_48 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_49 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_41 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_42 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_43 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 * 16.0;
                  const walberla::float64 tmp_kernel_op_59 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_60 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_61 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_62 = 0;
                  const int64_t           tmp_kernel_op_63 = 0;
                  const int64_t           tmp_kernel_op_64 = tmp_kernel_op_62 + tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_65 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_66 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_67 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_68 = jac_blending_0_0_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_69 = jac_blending_0_1_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_70 = jac_blending_0_2_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_71 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_72 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_73 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_74 = jac_blending_0_0_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_75 = jac_blending_0_1_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_76 = jac_blending_0_2_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_77 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_78 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_79 = tmp_kernel_op_59 * 4.0;
                  const walberla::float64 tmp_kernel_op_80 = tmp_kernel_op_60 * 2.0;
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_61 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_78 + tmp_kernel_op_79;
                  const walberla::float64 tmp_kernel_op_83 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_77 + tmp_kernel_op_80 + tmp_kernel_op_81 + tmp_kernel_op_82 -
                                    2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_80 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_81 - 0.79742698535308731 ) + k_dof_4 * tmp_kernel_op_77 +
                        k_dof_5 * tmp_kernel_op_78 + k_dof_6 * tmp_kernel_op_79 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_77 - tmp_kernel_op_78 ) +
                        k_dof_8 * ( tmp_kernel_op_61 * -4.0 - tmp_kernel_op_77 - tmp_kernel_op_79 + 3.1897079414123493 ) +
                        k_dof_9 * ( tmp_kernel_op_60 * -4.0 - tmp_kernel_op_82 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_68 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_69 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_70 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_74 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_75 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_76 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_74 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_75 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_76 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_68 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_69 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_70 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_83 * 16.0;
                  const walberla::float64 tmp_kernel_op_85 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_86 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_87 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_88 = 0;
                  const int64_t           tmp_kernel_op_89 = 0;
                  const int64_t           tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_92 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_93 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_94 = jac_blending_0_0_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_95 = jac_blending_0_1_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_96 = jac_blending_0_2_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_97 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_98 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_99 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_100 = jac_blending_0_0_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_101 = jac_blending_0_1_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_102 = jac_blending_0_2_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_103 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_104 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_85 * 4.0;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_86 * 2.0;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_87 * 2.0;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_104 + tmp_kernel_op_105;
                  const walberla::float64 tmp_kernel_op_109 =
                      ( k_dof_0 * ( tmp_kernel_op_103 + tmp_kernel_op_106 + tmp_kernel_op_107 + tmp_kernel_op_108 +
                                    tmp_kernel_op_29 - 1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_106 - 0.059715871789769892 ) +
                        k_dof_2 * ( tmp_kernel_op_107 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_103 +
                        k_dof_5 * tmp_kernel_op_104 + k_dof_6 * tmp_kernel_op_105 +
                        k_dof_7 * ( -tmp_kernel_op_103 - tmp_kernel_op_104 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( -tmp_kernel_op_103 - tmp_kernel_op_105 + tmp_kernel_op_87 * -4.0 + 1.8805682564204602 ) +
                        k_dof_9 * ( -tmp_kernel_op_108 + tmp_kernel_op_86 * -4.0 + 0.23886348715907957 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_100 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_101 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_102 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_94 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_95 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_96 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_94 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_95 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_96 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_100 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_101 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_102 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_109 * 16.0;
                  const walberla::float64 tmp_kernel_op_111 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_112 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_113 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_114 = 0;
                  const int64_t           tmp_kernel_op_115 = 0;
                  const int64_t           tmp_kernel_op_116 = tmp_kernel_op_114 + tmp_kernel_op_115;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_119 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_0_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_1_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_122 = jac_blending_0_2_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_123 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_124 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_125 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_126 = jac_blending_0_0_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_127 = jac_blending_0_1_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_128 = jac_blending_0_2_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_129 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_130 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_111 * 4.0;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_112 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_113 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_130 + tmp_kernel_op_131;
                  const walberla::float64 tmp_kernel_op_135 =
                      ( k_dof_0 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                    tmp_kernel_op_29 - 2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_132 - 0.79742698535308731 ) +
                        k_dof_2 * ( tmp_kernel_op_133 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_129 +
                        k_dof_5 * tmp_kernel_op_130 + k_dof_6 * tmp_kernel_op_131 +
                        k_dof_7 * ( -tmp_kernel_op_129 - tmp_kernel_op_130 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_113 * -4.0 - tmp_kernel_op_129 - tmp_kernel_op_131 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_112 * -4.0 - tmp_kernel_op_134 + 3.1897079414123493 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_120 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_121 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_122 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_126 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_127 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_128 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_126 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_127 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_128 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_120 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_121 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_122 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_135 * 16.0;
                  const walberla::float64 tmp_kernel_op_137 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_138 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_139 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = 0;
                  const int64_t           tmp_kernel_op_142 = tmp_kernel_op_140 + tmp_kernel_op_141;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_145 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_0_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_1_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_148 = jac_blending_0_2_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_151 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_0_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_1_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_154 = jac_blending_0_2_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_155 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_156 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 4.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_139 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_156 + tmp_kernel_op_157;
                  const walberla::float64 tmp_kernel_op_161 =
                      ( k_dof_0 * ( tmp_kernel_op_155 + tmp_kernel_op_158 + tmp_kernel_op_159 + tmp_kernel_op_160 +
                                    tmp_kernel_op_29 - 2.8208523846306903 ) +
                        k_dof_1 * ( tmp_kernel_op_158 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_159 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_155 +
                        k_dof_5 * tmp_kernel_op_156 + k_dof_6 * tmp_kernel_op_157 +
                        k_dof_7 * ( -tmp_kernel_op_155 - tmp_kernel_op_156 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_139 * -4.0 - tmp_kernel_op_155 - tmp_kernel_op_157 + 1.8805682564204602 ) +
                        k_dof_9 * ( tmp_kernel_op_138 * -4.0 - tmp_kernel_op_160 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_146 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_147 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_148 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_152 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_153 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_154 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_152 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_153 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_154 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_146 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_147 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_148 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_161 * 16.0;
                  const walberla::float64 tmp_kernel_op_163 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_164 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_165 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_166 = 0;
                  const int64_t           tmp_kernel_op_167 = 0;
                  const int64_t           tmp_kernel_op_168 = tmp_kernel_op_166 + tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_169 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_170 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_171 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_172 = jac_blending_0_0_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_173 = jac_blending_0_1_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_174 = jac_blending_0_2_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_177 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_0_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_1_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_180 = jac_blending_0_2_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_181 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_182 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_163 * 4.0;
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_164 * 2.0;
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_165 * 2.0;
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_182 + tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_187 =
                      ( k_dof_0 * ( tmp_kernel_op_181 + tmp_kernel_op_184 + tmp_kernel_op_185 + tmp_kernel_op_186 +
                                    tmp_kernel_op_29 - 0.60771904394073784 ) +
                        k_dof_1 * ( tmp_kernel_op_184 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_185 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_181 +
                        k_dof_5 * tmp_kernel_op_182 + k_dof_6 * tmp_kernel_op_183 +
                        k_dof_7 * ( -tmp_kernel_op_181 - tmp_kernel_op_182 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_165 * -4.0 - tmp_kernel_op_181 - tmp_kernel_op_183 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_164 * -4.0 - tmp_kernel_op_186 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_172 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_173 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_174 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_178 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_179 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_180 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_178 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_179 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_180 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_172 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_173 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_174 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_187 * 16.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_30 * 4.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_57 * 4.0;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_83 * 4.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_109 * 4.0;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_135 * 4.0;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_161 * 4.0;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 * 4.0;
                  const int64_t           tmp_kernel_op_196 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_58 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_84 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_110 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_136 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_162 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_203 = tmp_kernel_op_188 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_204 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_110 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 *
                          ( ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) *
                            ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) ) +
                      tmp_kernel_op_162 *
                          ( ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) *
                            ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) ) +
                      tmp_kernel_op_188 *
                          ( ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) *
                            ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 *
                          ( ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) *
                            ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_33 - 0.23507103205255753 ) * ( tmp_kernel_op_33 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_60 - 0.050643253661728158 ) * ( tmp_kernel_op_60 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_86 - 0.029857935894884946 ) * ( tmp_kernel_op_86 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_112 - 0.39871349267654366 ) * ( tmp_kernel_op_112 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_138 - 0.23507103205255753 ) * ( tmp_kernel_op_138 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_164 - 0.050643253661728158 ) * ( tmp_kernel_op_164 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_34 - 0.029857935894884946 ) * ( tmp_kernel_op_34 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_61 - 0.39871349267654366 ) * ( tmp_kernel_op_61 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_87 - 0.23507103205255753 ) * ( tmp_kernel_op_87 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_113 - 0.050643253661728158 ) * ( tmp_kernel_op_113 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_139 - 0.23507103205255753 ) * ( tmp_kernel_op_139 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_165 - 0.050643253661728158 ) * ( tmp_kernel_op_165 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_189 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_196 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_113 * tmp_kernel_op_201 + tmp_kernel_op_139 * tmp_kernel_op_202 +
                      tmp_kernel_op_165 * tmp_kernel_op_203 + tmp_kernel_op_197 * tmp_kernel_op_2 +
                      tmp_kernel_op_198 * tmp_kernel_op_34 + tmp_kernel_op_199 * tmp_kernel_op_61 +
                      tmp_kernel_op_200 * tmp_kernel_op_87;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_197 + tmp_kernel_op_112 * tmp_kernel_op_201 +
                      tmp_kernel_op_138 * tmp_kernel_op_202 + tmp_kernel_op_164 * tmp_kernel_op_203 +
                      tmp_kernel_op_198 * tmp_kernel_op_33 + tmp_kernel_op_199 * tmp_kernel_op_60 +
                      tmp_kernel_op_200 * tmp_kernel_op_86;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_110 * tmp_kernel_op_86 * tmp_kernel_op_87 +
                                                        tmp_kernel_op_112 * tmp_kernel_op_113 * tmp_kernel_op_136 +
                                                        tmp_kernel_op_138 * tmp_kernel_op_139 * tmp_kernel_op_162 +
                                                        tmp_kernel_op_164 * tmp_kernel_op_165 * tmp_kernel_op_188 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_58 +
                                                        tmp_kernel_op_60 * tmp_kernel_op_61 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_110 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) *
                                                                     ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_162 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_188 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::
    computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_2_macro_3D(
        walberla::float64* RESTRICT _data_invDiag_Edge,
        walberla::float64* RESTRICT _data_invDiag_Vertex,
        walberla::float64* RESTRICT _data_kEdge,
        walberla::float64* RESTRICT _data_kVertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_25 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_26 = k_dof_3 * tmp_kernel_op_25;
                  const walberla::float64 tmp_kernel_op_27 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_25 + 1.0;
                  const walberla::float64 tmp_kernel_op_30 =
                      ( k_dof_0 * ( tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_24 + tmp_kernel_op_28 + tmp_kernel_op_29 -
                                    2.0 ) +
                        k_dof_1 * ( tmp_kernel_op_23 - 0.33333333333333331 ) +
                        k_dof_2 * ( tmp_kernel_op_24 - 0.33333333333333331 ) + k_dof_4 * tmp_kernel_op_20 +
                        k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * ( -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333 ) +
                        k_dof_9 * ( tmp_kernel_op_1 * -4.0 - tmp_kernel_op_28 + 1.3333333333333333 ) + tmp_kernel_op_26 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_30 * 16.0;
                  const walberla::float64 tmp_kernel_op_32 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_33 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_34 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_39 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_40 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_41 = jac_blending_0_0_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_42 = jac_blending_0_1_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_43 = jac_blending_0_2_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_44 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_blending_0_0_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_1_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_2_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_46;
                  const int64_t           tmp_kernel_op_50 = 0;
                  const walberla::float64 tmp_kernel_op_51 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_52 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_52 + tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_57 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_51 + tmp_kernel_op_54 + tmp_kernel_op_55 + tmp_kernel_op_56 -
                                    1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_54 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_55 - 0.059715871789769892 ) + k_dof_4 * tmp_kernel_op_51 +
                        k_dof_5 * tmp_kernel_op_52 + k_dof_6 * tmp_kernel_op_53 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_51 - tmp_kernel_op_52 ) +
                        k_dof_8 * ( tmp_kernel_op_34 * -4.0 - tmp_kernel_op_51 - tmp_kernel_op_53 + 0.23886348715907957 ) +
                        k_dof_9 * ( tmp_kernel_op_33 * -4.0 - tmp_kernel_op_56 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_41 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_42 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_43 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_47 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_48 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_49 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_47 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_48 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_49 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_41 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_42 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_43 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 * 16.0;
                  const walberla::float64 tmp_kernel_op_59 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_60 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_61 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_62 = 0;
                  const int64_t           tmp_kernel_op_63 = 0;
                  const int64_t           tmp_kernel_op_64 = tmp_kernel_op_62 + tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_65 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_66 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_67 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_68 = jac_blending_0_0_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_69 = jac_blending_0_1_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_70 = jac_blending_0_2_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_71 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_72 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_73 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_74 = jac_blending_0_0_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_75 = jac_blending_0_1_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_76 = jac_blending_0_2_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_77 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_78 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_79 = tmp_kernel_op_59 * 4.0;
                  const walberla::float64 tmp_kernel_op_80 = tmp_kernel_op_60 * 2.0;
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_61 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_78 + tmp_kernel_op_79;
                  const walberla::float64 tmp_kernel_op_83 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_77 + tmp_kernel_op_80 + tmp_kernel_op_81 + tmp_kernel_op_82 -
                                    2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_80 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_81 - 0.79742698535308731 ) + k_dof_4 * tmp_kernel_op_77 +
                        k_dof_5 * tmp_kernel_op_78 + k_dof_6 * tmp_kernel_op_79 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_77 - tmp_kernel_op_78 ) +
                        k_dof_8 * ( tmp_kernel_op_61 * -4.0 - tmp_kernel_op_77 - tmp_kernel_op_79 + 3.1897079414123493 ) +
                        k_dof_9 * ( tmp_kernel_op_60 * -4.0 - tmp_kernel_op_82 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_68 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_69 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_70 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_74 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_75 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_76 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_74 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_75 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_76 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_68 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_69 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_70 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_83 * 16.0;
                  const walberla::float64 tmp_kernel_op_85 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_86 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_87 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_88 = 0;
                  const int64_t           tmp_kernel_op_89 = 0;
                  const int64_t           tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_92 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_93 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_94 = jac_blending_0_0_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_95 = jac_blending_0_1_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_96 = jac_blending_0_2_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_97 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_98 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_99 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_100 = jac_blending_0_0_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_101 = jac_blending_0_1_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_102 = jac_blending_0_2_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_103 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_104 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_85 * 4.0;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_86 * 2.0;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_87 * 2.0;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_104 + tmp_kernel_op_105;
                  const walberla::float64 tmp_kernel_op_109 =
                      ( k_dof_0 * ( tmp_kernel_op_103 + tmp_kernel_op_106 + tmp_kernel_op_107 + tmp_kernel_op_108 +
                                    tmp_kernel_op_29 - 1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_106 - 0.059715871789769892 ) +
                        k_dof_2 * ( tmp_kernel_op_107 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_103 +
                        k_dof_5 * tmp_kernel_op_104 + k_dof_6 * tmp_kernel_op_105 +
                        k_dof_7 * ( -tmp_kernel_op_103 - tmp_kernel_op_104 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( -tmp_kernel_op_103 - tmp_kernel_op_105 + tmp_kernel_op_87 * -4.0 + 1.8805682564204602 ) +
                        k_dof_9 * ( -tmp_kernel_op_108 + tmp_kernel_op_86 * -4.0 + 0.23886348715907957 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_100 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_101 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_102 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_94 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_95 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_96 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_94 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_95 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_96 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_100 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_101 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_102 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_109 * 16.0;
                  const walberla::float64 tmp_kernel_op_111 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_112 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_113 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_114 = 0;
                  const int64_t           tmp_kernel_op_115 = 0;
                  const int64_t           tmp_kernel_op_116 = tmp_kernel_op_114 + tmp_kernel_op_115;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_119 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_0_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_1_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_122 = jac_blending_0_2_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_123 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_124 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_125 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_126 = jac_blending_0_0_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_127 = jac_blending_0_1_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_128 = jac_blending_0_2_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_129 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_130 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_111 * 4.0;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_112 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_113 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_130 + tmp_kernel_op_131;
                  const walberla::float64 tmp_kernel_op_135 =
                      ( k_dof_0 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                    tmp_kernel_op_29 - 2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_132 - 0.79742698535308731 ) +
                        k_dof_2 * ( tmp_kernel_op_133 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_129 +
                        k_dof_5 * tmp_kernel_op_130 + k_dof_6 * tmp_kernel_op_131 +
                        k_dof_7 * ( -tmp_kernel_op_129 - tmp_kernel_op_130 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_113 * -4.0 - tmp_kernel_op_129 - tmp_kernel_op_131 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_112 * -4.0 - tmp_kernel_op_134 + 3.1897079414123493 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_120 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_121 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_122 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_126 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_127 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_128 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_126 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_127 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_128 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_120 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_121 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_122 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_135 * 16.0;
                  const walberla::float64 tmp_kernel_op_137 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_138 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_139 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = 0;
                  const int64_t           tmp_kernel_op_142 = tmp_kernel_op_140 + tmp_kernel_op_141;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_145 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_0_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_1_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_148 = jac_blending_0_2_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_151 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_0_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_1_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_154 = jac_blending_0_2_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_155 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_156 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 4.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_139 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_156 + tmp_kernel_op_157;
                  const walberla::float64 tmp_kernel_op_161 =
                      ( k_dof_0 * ( tmp_kernel_op_155 + tmp_kernel_op_158 + tmp_kernel_op_159 + tmp_kernel_op_160 +
                                    tmp_kernel_op_29 - 2.8208523846306903 ) +
                        k_dof_1 * ( tmp_kernel_op_158 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_159 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_155 +
                        k_dof_5 * tmp_kernel_op_156 + k_dof_6 * tmp_kernel_op_157 +
                        k_dof_7 * ( -tmp_kernel_op_155 - tmp_kernel_op_156 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_139 * -4.0 - tmp_kernel_op_155 - tmp_kernel_op_157 + 1.8805682564204602 ) +
                        k_dof_9 * ( tmp_kernel_op_138 * -4.0 - tmp_kernel_op_160 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_146 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_147 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_148 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_152 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_153 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_154 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_152 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_153 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_154 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_146 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_147 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_148 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_161 * 16.0;
                  const walberla::float64 tmp_kernel_op_163 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_164 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_165 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_166 = 0;
                  const int64_t           tmp_kernel_op_167 = 0;
                  const int64_t           tmp_kernel_op_168 = tmp_kernel_op_166 + tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_169 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_170 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_171 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_172 = jac_blending_0_0_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_173 = jac_blending_0_1_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_174 = jac_blending_0_2_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_177 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_0_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_1_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_180 = jac_blending_0_2_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_181 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_182 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_163 * 4.0;
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_164 * 2.0;
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_165 * 2.0;
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_182 + tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_187 =
                      ( k_dof_0 * ( tmp_kernel_op_181 + tmp_kernel_op_184 + tmp_kernel_op_185 + tmp_kernel_op_186 +
                                    tmp_kernel_op_29 - 0.60771904394073784 ) +
                        k_dof_1 * ( tmp_kernel_op_184 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_185 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_181 +
                        k_dof_5 * tmp_kernel_op_182 + k_dof_6 * tmp_kernel_op_183 +
                        k_dof_7 * ( -tmp_kernel_op_181 - tmp_kernel_op_182 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_165 * -4.0 - tmp_kernel_op_181 - tmp_kernel_op_183 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_164 * -4.0 - tmp_kernel_op_186 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_172 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_173 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_174 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_178 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_179 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_180 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_178 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_179 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_180 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_172 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_173 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_174 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_187 * 16.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_30 * 4.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_57 * 4.0;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_83 * 4.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_109 * 4.0;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_135 * 4.0;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_161 * 4.0;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 * 4.0;
                  const int64_t           tmp_kernel_op_196 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_58 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_84 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_110 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_136 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_162 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_203 = tmp_kernel_op_188 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_204 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_110 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 *
                          ( ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) *
                            ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) ) +
                      tmp_kernel_op_162 *
                          ( ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) *
                            ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) ) +
                      tmp_kernel_op_188 *
                          ( ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) *
                            ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 *
                          ( ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) *
                            ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_33 - 0.23507103205255753 ) * ( tmp_kernel_op_33 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_60 - 0.050643253661728158 ) * ( tmp_kernel_op_60 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_86 - 0.029857935894884946 ) * ( tmp_kernel_op_86 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_112 - 0.39871349267654366 ) * ( tmp_kernel_op_112 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_138 - 0.23507103205255753 ) * ( tmp_kernel_op_138 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_164 - 0.050643253661728158 ) * ( tmp_kernel_op_164 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_34 - 0.029857935894884946 ) * ( tmp_kernel_op_34 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_61 - 0.39871349267654366 ) * ( tmp_kernel_op_61 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_87 - 0.23507103205255753 ) * ( tmp_kernel_op_87 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_113 - 0.050643253661728158 ) * ( tmp_kernel_op_113 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_139 - 0.23507103205255753 ) * ( tmp_kernel_op_139 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_165 - 0.050643253661728158 ) * ( tmp_kernel_op_165 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_189 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_196 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_113 * tmp_kernel_op_201 + tmp_kernel_op_139 * tmp_kernel_op_202 +
                      tmp_kernel_op_165 * tmp_kernel_op_203 + tmp_kernel_op_197 * tmp_kernel_op_2 +
                      tmp_kernel_op_198 * tmp_kernel_op_34 + tmp_kernel_op_199 * tmp_kernel_op_61 +
                      tmp_kernel_op_200 * tmp_kernel_op_87;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_197 + tmp_kernel_op_112 * tmp_kernel_op_201 +
                      tmp_kernel_op_138 * tmp_kernel_op_202 + tmp_kernel_op_164 * tmp_kernel_op_203 +
                      tmp_kernel_op_198 * tmp_kernel_op_33 + tmp_kernel_op_199 * tmp_kernel_op_60 +
                      tmp_kernel_op_200 * tmp_kernel_op_86;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_110 * tmp_kernel_op_86 * tmp_kernel_op_87 +
                                                        tmp_kernel_op_112 * tmp_kernel_op_113 * tmp_kernel_op_136 +
                                                        tmp_kernel_op_138 * tmp_kernel_op_139 * tmp_kernel_op_162 +
                                                        tmp_kernel_op_164 * tmp_kernel_op_165 * tmp_kernel_op_188 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_58 +
                                                        tmp_kernel_op_60 * tmp_kernel_op_61 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_110 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) *
                                                                     ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_162 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_188 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_3 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_DOWN */
         const walberla::float64 tmp_coords_jac_0_BLUE_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_6_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_8_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 tmp_coords_jac_9_BLUE_DOWN   = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_0_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) +
             tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_1_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) +
             tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_2_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) +
             tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
         const walberla::float64 jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
         const walberla::float64 jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
         const walberla::float64 jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
         const walberla::float64 jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
         const walberla::float64 jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_25 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_26 = k_dof_3 * tmp_kernel_op_25;
                  const walberla::float64 tmp_kernel_op_27 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_25 + 1.0;
                  const walberla::float64 tmp_kernel_op_30 =
                      ( k_dof_0 * ( tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_24 + tmp_kernel_op_28 + tmp_kernel_op_29 -
                                    2.0 ) +
                        k_dof_1 * ( tmp_kernel_op_23 - 0.33333333333333331 ) +
                        k_dof_2 * ( tmp_kernel_op_24 - 0.33333333333333331 ) + k_dof_4 * tmp_kernel_op_20 +
                        k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * ( -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333 ) +
                        k_dof_9 * ( tmp_kernel_op_1 * -4.0 - tmp_kernel_op_28 + 1.3333333333333333 ) + tmp_kernel_op_26 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_30 * 16.0;
                  const walberla::float64 tmp_kernel_op_32 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_33 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_34 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_39 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_40 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_41 = jac_blending_0_0_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_42 = jac_blending_0_1_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_43 = jac_blending_0_2_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_44 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_blending_0_0_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_1_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_2_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_46;
                  const int64_t           tmp_kernel_op_50 = 0;
                  const walberla::float64 tmp_kernel_op_51 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_52 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_52 + tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_57 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_51 + tmp_kernel_op_54 + tmp_kernel_op_55 + tmp_kernel_op_56 -
                                    1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_54 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_55 - 0.059715871789769892 ) + k_dof_4 * tmp_kernel_op_51 +
                        k_dof_5 * tmp_kernel_op_52 + k_dof_6 * tmp_kernel_op_53 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_51 - tmp_kernel_op_52 ) +
                        k_dof_8 * ( tmp_kernel_op_34 * -4.0 - tmp_kernel_op_51 - tmp_kernel_op_53 + 0.23886348715907957 ) +
                        k_dof_9 * ( tmp_kernel_op_33 * -4.0 - tmp_kernel_op_56 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_41 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_42 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_43 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_47 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_48 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_49 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_47 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_48 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_49 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_41 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_42 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_43 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 * 16.0;
                  const walberla::float64 tmp_kernel_op_59 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_60 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_61 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_62 = 0;
                  const int64_t           tmp_kernel_op_63 = 0;
                  const int64_t           tmp_kernel_op_64 = tmp_kernel_op_62 + tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_65 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_66 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_67 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_68 = jac_blending_0_0_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_69 = jac_blending_0_1_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_70 = jac_blending_0_2_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_71 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_72 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_73 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_74 = jac_blending_0_0_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_75 = jac_blending_0_1_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_76 = jac_blending_0_2_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_77 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_78 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_79 = tmp_kernel_op_59 * 4.0;
                  const walberla::float64 tmp_kernel_op_80 = tmp_kernel_op_60 * 2.0;
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_61 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_78 + tmp_kernel_op_79;
                  const walberla::float64 tmp_kernel_op_83 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_77 + tmp_kernel_op_80 + tmp_kernel_op_81 + tmp_kernel_op_82 -
                                    2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_80 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_81 - 0.79742698535308731 ) + k_dof_4 * tmp_kernel_op_77 +
                        k_dof_5 * tmp_kernel_op_78 + k_dof_6 * tmp_kernel_op_79 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_77 - tmp_kernel_op_78 ) +
                        k_dof_8 * ( tmp_kernel_op_61 * -4.0 - tmp_kernel_op_77 - tmp_kernel_op_79 + 3.1897079414123493 ) +
                        k_dof_9 * ( tmp_kernel_op_60 * -4.0 - tmp_kernel_op_82 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_68 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_69 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_70 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_74 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_75 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_76 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_74 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_75 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_76 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_68 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_69 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_70 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_83 * 16.0;
                  const walberla::float64 tmp_kernel_op_85 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_86 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_87 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_88 = 0;
                  const int64_t           tmp_kernel_op_89 = 0;
                  const int64_t           tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_92 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_93 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_94 = jac_blending_0_0_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_95 = jac_blending_0_1_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_96 = jac_blending_0_2_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_97 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_98 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_99 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_100 = jac_blending_0_0_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_101 = jac_blending_0_1_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_102 = jac_blending_0_2_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_103 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_104 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_85 * 4.0;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_86 * 2.0;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_87 * 2.0;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_104 + tmp_kernel_op_105;
                  const walberla::float64 tmp_kernel_op_109 =
                      ( k_dof_0 * ( tmp_kernel_op_103 + tmp_kernel_op_106 + tmp_kernel_op_107 + tmp_kernel_op_108 +
                                    tmp_kernel_op_29 - 1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_106 - 0.059715871789769892 ) +
                        k_dof_2 * ( tmp_kernel_op_107 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_103 +
                        k_dof_5 * tmp_kernel_op_104 + k_dof_6 * tmp_kernel_op_105 +
                        k_dof_7 * ( -tmp_kernel_op_103 - tmp_kernel_op_104 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( -tmp_kernel_op_103 - tmp_kernel_op_105 + tmp_kernel_op_87 * -4.0 + 1.8805682564204602 ) +
                        k_dof_9 * ( -tmp_kernel_op_108 + tmp_kernel_op_86 * -4.0 + 0.23886348715907957 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_100 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_101 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_102 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_94 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_95 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_96 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_94 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_95 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_96 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_100 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_101 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_102 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_109 * 16.0;
                  const walberla::float64 tmp_kernel_op_111 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_112 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_113 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_114 = 0;
                  const int64_t           tmp_kernel_op_115 = 0;
                  const int64_t           tmp_kernel_op_116 = tmp_kernel_op_114 + tmp_kernel_op_115;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_119 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_0_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_1_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_122 = jac_blending_0_2_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_123 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_124 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_125 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_126 = jac_blending_0_0_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_127 = jac_blending_0_1_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_128 = jac_blending_0_2_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_129 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_130 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_111 * 4.0;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_112 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_113 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_130 + tmp_kernel_op_131;
                  const walberla::float64 tmp_kernel_op_135 =
                      ( k_dof_0 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                    tmp_kernel_op_29 - 2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_132 - 0.79742698535308731 ) +
                        k_dof_2 * ( tmp_kernel_op_133 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_129 +
                        k_dof_5 * tmp_kernel_op_130 + k_dof_6 * tmp_kernel_op_131 +
                        k_dof_7 * ( -tmp_kernel_op_129 - tmp_kernel_op_130 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_113 * -4.0 - tmp_kernel_op_129 - tmp_kernel_op_131 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_112 * -4.0 - tmp_kernel_op_134 + 3.1897079414123493 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_120 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_121 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_122 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_126 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_127 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_128 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_126 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_127 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_128 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_120 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_121 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_122 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_135 * 16.0;
                  const walberla::float64 tmp_kernel_op_137 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_138 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_139 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = 0;
                  const int64_t           tmp_kernel_op_142 = tmp_kernel_op_140 + tmp_kernel_op_141;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_145 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_0_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_1_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_148 = jac_blending_0_2_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_151 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_0_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_1_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_154 = jac_blending_0_2_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_155 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_156 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 4.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_139 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_156 + tmp_kernel_op_157;
                  const walberla::float64 tmp_kernel_op_161 =
                      ( k_dof_0 * ( tmp_kernel_op_155 + tmp_kernel_op_158 + tmp_kernel_op_159 + tmp_kernel_op_160 +
                                    tmp_kernel_op_29 - 2.8208523846306903 ) +
                        k_dof_1 * ( tmp_kernel_op_158 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_159 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_155 +
                        k_dof_5 * tmp_kernel_op_156 + k_dof_6 * tmp_kernel_op_157 +
                        k_dof_7 * ( -tmp_kernel_op_155 - tmp_kernel_op_156 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_139 * -4.0 - tmp_kernel_op_155 - tmp_kernel_op_157 + 1.8805682564204602 ) +
                        k_dof_9 * ( tmp_kernel_op_138 * -4.0 - tmp_kernel_op_160 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_146 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_147 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_148 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_152 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_153 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_154 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_152 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_153 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_154 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_146 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_147 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_148 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_161 * 16.0;
                  const walberla::float64 tmp_kernel_op_163 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_164 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_165 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_166 = 0;
                  const int64_t           tmp_kernel_op_167 = 0;
                  const int64_t           tmp_kernel_op_168 = tmp_kernel_op_166 + tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_169 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_170 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_171 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_172 = jac_blending_0_0_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_173 = jac_blending_0_1_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_174 = jac_blending_0_2_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_177 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_0_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_1_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_180 = jac_blending_0_2_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_181 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_182 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_163 * 4.0;
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_164 * 2.0;
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_165 * 2.0;
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_182 + tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_187 =
                      ( k_dof_0 * ( tmp_kernel_op_181 + tmp_kernel_op_184 + tmp_kernel_op_185 + tmp_kernel_op_186 +
                                    tmp_kernel_op_29 - 0.60771904394073784 ) +
                        k_dof_1 * ( tmp_kernel_op_184 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_185 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_181 +
                        k_dof_5 * tmp_kernel_op_182 + k_dof_6 * tmp_kernel_op_183 +
                        k_dof_7 * ( -tmp_kernel_op_181 - tmp_kernel_op_182 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_165 * -4.0 - tmp_kernel_op_181 - tmp_kernel_op_183 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_164 * -4.0 - tmp_kernel_op_186 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_172 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_173 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_174 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_178 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_179 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_180 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_178 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_179 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_180 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_172 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_173 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_174 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_187 * 16.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_30 * 4.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_57 * 4.0;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_83 * 4.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_109 * 4.0;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_135 * 4.0;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_161 * 4.0;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 * 4.0;
                  const int64_t           tmp_kernel_op_196 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_58 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_84 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_110 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_136 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_162 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_203 = tmp_kernel_op_188 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_204 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_110 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 *
                          ( ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) *
                            ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) ) +
                      tmp_kernel_op_162 *
                          ( ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) *
                            ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) ) +
                      tmp_kernel_op_188 *
                          ( ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) *
                            ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 *
                          ( ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) *
                            ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_33 - 0.23507103205255753 ) * ( tmp_kernel_op_33 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_60 - 0.050643253661728158 ) * ( tmp_kernel_op_60 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_86 - 0.029857935894884946 ) * ( tmp_kernel_op_86 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_112 - 0.39871349267654366 ) * ( tmp_kernel_op_112 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_138 - 0.23507103205255753 ) * ( tmp_kernel_op_138 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_164 - 0.050643253661728158 ) * ( tmp_kernel_op_164 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_34 - 0.029857935894884946 ) * ( tmp_kernel_op_34 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_61 - 0.39871349267654366 ) * ( tmp_kernel_op_61 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_87 - 0.23507103205255753 ) * ( tmp_kernel_op_87 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_113 - 0.050643253661728158 ) * ( tmp_kernel_op_113 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_139 - 0.23507103205255753 ) * ( tmp_kernel_op_139 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_165 - 0.050643253661728158 ) * ( tmp_kernel_op_165 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_189 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_196 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_113 * tmp_kernel_op_201 + tmp_kernel_op_139 * tmp_kernel_op_202 +
                      tmp_kernel_op_165 * tmp_kernel_op_203 + tmp_kernel_op_197 * tmp_kernel_op_2 +
                      tmp_kernel_op_198 * tmp_kernel_op_34 + tmp_kernel_op_199 * tmp_kernel_op_61 +
                      tmp_kernel_op_200 * tmp_kernel_op_87;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_197 + tmp_kernel_op_112 * tmp_kernel_op_201 +
                      tmp_kernel_op_138 * tmp_kernel_op_202 + tmp_kernel_op_164 * tmp_kernel_op_203 +
                      tmp_kernel_op_198 * tmp_kernel_op_33 + tmp_kernel_op_199 * tmp_kernel_op_60 +
                      tmp_kernel_op_200 * tmp_kernel_op_86;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_110 * tmp_kernel_op_86 * tmp_kernel_op_87 +
                                                        tmp_kernel_op_112 * tmp_kernel_op_113 * tmp_kernel_op_136 +
                                                        tmp_kernel_op_138 * tmp_kernel_op_139 * tmp_kernel_op_162 +
                                                        tmp_kernel_op_164 * tmp_kernel_op_165 * tmp_kernel_op_188 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_58 +
                                                        tmp_kernel_op_60 * tmp_kernel_op_61 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_110 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) *
                                                                     ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_162 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_188 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) );
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryKMassIcosahedralShellMap::
    computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryKMassIcosahedralShellMap_facet_id_3_macro_3D(
        walberla::float64* RESTRICT _data_invDiag_Edge,
        walberla::float64* RESTRICT _data_invDiag_Vertex,
        walberla::float64* RESTRICT _data_kEdge,
        walberla::float64* RESTRICT _data_kVertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_0_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 jac_affine_0_0_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 = _data_kVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_25 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_26 = k_dof_3 * tmp_kernel_op_25;
                  const walberla::float64 tmp_kernel_op_27 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_25 + 1.0;
                  const walberla::float64 tmp_kernel_op_30 =
                      ( k_dof_0 * ( tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_24 + tmp_kernel_op_28 + tmp_kernel_op_29 -
                                    2.0 ) +
                        k_dof_1 * ( tmp_kernel_op_23 - 0.33333333333333331 ) +
                        k_dof_2 * ( tmp_kernel_op_24 - 0.33333333333333331 ) + k_dof_4 * tmp_kernel_op_20 +
                        k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * ( -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333 ) +
                        k_dof_9 * ( tmp_kernel_op_1 * -4.0 - tmp_kernel_op_28 + 1.3333333333333333 ) + tmp_kernel_op_26 ) *
                      0.11250000000000003 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_30 * 16.0;
                  const walberla::float64 tmp_kernel_op_32 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_33 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_34 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_39 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_40 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_41 = jac_blending_0_0_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_42 = jac_blending_0_1_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_43 = jac_blending_0_2_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_44 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_blending_0_0_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_1_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_2_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_46;
                  const int64_t           tmp_kernel_op_50 = 0;
                  const walberla::float64 tmp_kernel_op_51 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_52 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_52 + tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_57 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_51 + tmp_kernel_op_54 + tmp_kernel_op_55 + tmp_kernel_op_56 -
                                    1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_54 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_55 - 0.059715871789769892 ) + k_dof_4 * tmp_kernel_op_51 +
                        k_dof_5 * tmp_kernel_op_52 + k_dof_6 * tmp_kernel_op_53 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_51 - tmp_kernel_op_52 ) +
                        k_dof_8 * ( tmp_kernel_op_34 * -4.0 - tmp_kernel_op_51 - tmp_kernel_op_53 + 0.23886348715907957 ) +
                        k_dof_9 * ( tmp_kernel_op_33 * -4.0 - tmp_kernel_op_56 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_41 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_42 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_43 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_47 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_48 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_49 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_47 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_48 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_49 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_41 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_42 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_43 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 * 16.0;
                  const walberla::float64 tmp_kernel_op_59 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_60 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_61 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_62 = 0;
                  const int64_t           tmp_kernel_op_63 = 0;
                  const int64_t           tmp_kernel_op_64 = tmp_kernel_op_62 + tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_65 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_66 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_67 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_68 = jac_blending_0_0_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_69 = jac_blending_0_1_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_70 = jac_blending_0_2_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_71 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_72 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_73 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_74 = jac_blending_0_0_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_75 = jac_blending_0_1_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_76 = jac_blending_0_2_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_77 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_78 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_79 = tmp_kernel_op_59 * 4.0;
                  const walberla::float64 tmp_kernel_op_80 = tmp_kernel_op_60 * 2.0;
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_61 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_78 + tmp_kernel_op_79;
                  const walberla::float64 tmp_kernel_op_83 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_77 + tmp_kernel_op_80 + tmp_kernel_op_81 + tmp_kernel_op_82 -
                                    2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_80 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_81 - 0.79742698535308731 ) + k_dof_4 * tmp_kernel_op_77 +
                        k_dof_5 * tmp_kernel_op_78 + k_dof_6 * tmp_kernel_op_79 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_77 - tmp_kernel_op_78 ) +
                        k_dof_8 * ( tmp_kernel_op_61 * -4.0 - tmp_kernel_op_77 - tmp_kernel_op_79 + 3.1897079414123493 ) +
                        k_dof_9 * ( tmp_kernel_op_60 * -4.0 - tmp_kernel_op_82 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_68 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_69 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_70 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_74 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_75 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_76 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_74 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_75 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_76 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_68 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_69 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_70 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_83 * 16.0;
                  const walberla::float64 tmp_kernel_op_85 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_86 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_87 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_88 = 0;
                  const int64_t           tmp_kernel_op_89 = 0;
                  const int64_t           tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_92 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_93 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_94 = jac_blending_0_0_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_95 = jac_blending_0_1_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_96 = jac_blending_0_2_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_97 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_98 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_99 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_100 = jac_blending_0_0_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_101 = jac_blending_0_1_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_102 = jac_blending_0_2_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_103 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_104 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_85 * 4.0;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_86 * 2.0;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_87 * 2.0;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_104 + tmp_kernel_op_105;
                  const walberla::float64 tmp_kernel_op_109 =
                      ( k_dof_0 * ( tmp_kernel_op_103 + tmp_kernel_op_106 + tmp_kernel_op_107 + tmp_kernel_op_108 +
                                    tmp_kernel_op_29 - 1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_106 - 0.059715871789769892 ) +
                        k_dof_2 * ( tmp_kernel_op_107 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_103 +
                        k_dof_5 * tmp_kernel_op_104 + k_dof_6 * tmp_kernel_op_105 +
                        k_dof_7 * ( -tmp_kernel_op_103 - tmp_kernel_op_104 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( -tmp_kernel_op_103 - tmp_kernel_op_105 + tmp_kernel_op_87 * -4.0 + 1.8805682564204602 ) +
                        k_dof_9 * ( -tmp_kernel_op_108 + tmp_kernel_op_86 * -4.0 + 0.23886348715907957 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_100 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_101 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_102 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_94 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_95 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_96 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_94 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_95 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_96 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_100 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_101 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_102 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_109 * 16.0;
                  const walberla::float64 tmp_kernel_op_111 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_112 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_113 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_114 = 0;
                  const int64_t           tmp_kernel_op_115 = 0;
                  const int64_t           tmp_kernel_op_116 = tmp_kernel_op_114 + tmp_kernel_op_115;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_119 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_0_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_1_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_122 = jac_blending_0_2_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_123 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_124 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_125 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_126 = jac_blending_0_0_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_127 = jac_blending_0_1_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_128 = jac_blending_0_2_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_129 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_130 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_111 * 4.0;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_112 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_113 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_130 + tmp_kernel_op_131;
                  const walberla::float64 tmp_kernel_op_135 =
                      ( k_dof_0 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                    tmp_kernel_op_29 - 2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_132 - 0.79742698535308731 ) +
                        k_dof_2 * ( tmp_kernel_op_133 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_129 +
                        k_dof_5 * tmp_kernel_op_130 + k_dof_6 * tmp_kernel_op_131 +
                        k_dof_7 * ( -tmp_kernel_op_129 - tmp_kernel_op_130 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_113 * -4.0 - tmp_kernel_op_129 - tmp_kernel_op_131 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_112 * -4.0 - tmp_kernel_op_134 + 3.1897079414123493 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_120 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_121 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_122 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_126 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_127 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_128 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_126 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_127 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_128 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_120 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_121 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_122 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_135 * 16.0;
                  const walberla::float64 tmp_kernel_op_137 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_138 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_139 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = 0;
                  const int64_t           tmp_kernel_op_142 = tmp_kernel_op_140 + tmp_kernel_op_141;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_145 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_0_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_1_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_148 = jac_blending_0_2_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_151 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_0_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_1_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_154 = jac_blending_0_2_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_155 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_156 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 4.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_139 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_156 + tmp_kernel_op_157;
                  const walberla::float64 tmp_kernel_op_161 =
                      ( k_dof_0 * ( tmp_kernel_op_155 + tmp_kernel_op_158 + tmp_kernel_op_159 + tmp_kernel_op_160 +
                                    tmp_kernel_op_29 - 2.8208523846306903 ) +
                        k_dof_1 * ( tmp_kernel_op_158 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_159 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_155 +
                        k_dof_5 * tmp_kernel_op_156 + k_dof_6 * tmp_kernel_op_157 +
                        k_dof_7 * ( -tmp_kernel_op_155 - tmp_kernel_op_156 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_139 * -4.0 - tmp_kernel_op_155 - tmp_kernel_op_157 + 1.8805682564204602 ) +
                        k_dof_9 * ( tmp_kernel_op_138 * -4.0 - tmp_kernel_op_160 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_146 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_147 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_148 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_152 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_153 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_154 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_152 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_153 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_154 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_146 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_147 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_148 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_161 * 16.0;
                  const walberla::float64 tmp_kernel_op_163 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_164 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_165 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_166 = 0;
                  const int64_t           tmp_kernel_op_167 = 0;
                  const int64_t           tmp_kernel_op_168 = tmp_kernel_op_166 + tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_169 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_170 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_171 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_172 = jac_blending_0_0_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_173 = jac_blending_0_1_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_174 = jac_blending_0_2_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_177 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_0_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_1_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_180 = jac_blending_0_2_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_181 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_182 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_163 * 4.0;
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_164 * 2.0;
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_165 * 2.0;
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_182 + tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_187 =
                      ( k_dof_0 * ( tmp_kernel_op_181 + tmp_kernel_op_184 + tmp_kernel_op_185 + tmp_kernel_op_186 +
                                    tmp_kernel_op_29 - 0.60771904394073784 ) +
                        k_dof_1 * ( tmp_kernel_op_184 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_185 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_181 +
                        k_dof_5 * tmp_kernel_op_182 + k_dof_6 * tmp_kernel_op_183 +
                        k_dof_7 * ( -tmp_kernel_op_181 - tmp_kernel_op_182 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_165 * -4.0 - tmp_kernel_op_181 - tmp_kernel_op_183 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_164 * -4.0 - tmp_kernel_op_186 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_172 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_173 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_174 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_178 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_179 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_180 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_178 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_179 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_180 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_172 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_173 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_174 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_187 * 16.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_30 * 4.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_57 * 4.0;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_83 * 4.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_109 * 4.0;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_135 * 4.0;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_161 * 4.0;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 * 4.0;
                  const int64_t           tmp_kernel_op_196 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_58 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_84 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_110 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_136 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_162 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_203 = tmp_kernel_op_188 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_204 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_110 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 *
                          ( ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) *
                            ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) ) +
                      tmp_kernel_op_162 *
                          ( ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) *
                            ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) ) +
                      tmp_kernel_op_188 *
                          ( ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) *
                            ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 *
                          ( ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) *
                            ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_33 - 0.23507103205255753 ) * ( tmp_kernel_op_33 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_60 - 0.050643253661728158 ) * ( tmp_kernel_op_60 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_86 - 0.029857935894884946 ) * ( tmp_kernel_op_86 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_112 - 0.39871349267654366 ) * ( tmp_kernel_op_112 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_138 - 0.23507103205255753 ) * ( tmp_kernel_op_138 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_164 - 0.050643253661728158 ) * ( tmp_kernel_op_164 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_34 - 0.029857935894884946 ) * ( tmp_kernel_op_34 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_61 - 0.39871349267654366 ) * ( tmp_kernel_op_61 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_87 - 0.23507103205255753 ) * ( tmp_kernel_op_87 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_113 - 0.050643253661728158 ) * ( tmp_kernel_op_113 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_139 - 0.23507103205255753 ) * ( tmp_kernel_op_139 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_165 - 0.050643253661728158 ) * ( tmp_kernel_op_165 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_189 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_196 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_113 * tmp_kernel_op_201 + tmp_kernel_op_139 * tmp_kernel_op_202 +
                      tmp_kernel_op_165 * tmp_kernel_op_203 + tmp_kernel_op_197 * tmp_kernel_op_2 +
                      tmp_kernel_op_198 * tmp_kernel_op_34 + tmp_kernel_op_199 * tmp_kernel_op_61 +
                      tmp_kernel_op_200 * tmp_kernel_op_87;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_197 + tmp_kernel_op_112 * tmp_kernel_op_201 +
                      tmp_kernel_op_138 * tmp_kernel_op_202 + tmp_kernel_op_164 * tmp_kernel_op_203 +
                      tmp_kernel_op_198 * tmp_kernel_op_33 + tmp_kernel_op_199 * tmp_kernel_op_60 +
                      tmp_kernel_op_200 * tmp_kernel_op_86;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_110 * tmp_kernel_op_86 * tmp_kernel_op_87 +
                                                        tmp_kernel_op_112 * tmp_kernel_op_113 * tmp_kernel_op_136 +
                                                        tmp_kernel_op_138 * tmp_kernel_op_139 * tmp_kernel_op_162 +
                                                        tmp_kernel_op_164 * tmp_kernel_op_165 * tmp_kernel_op_188 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_58 +
                                                        tmp_kernel_op_60 * tmp_kernel_op_61 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_110 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) *
                                                                     ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_162 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_188 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_DOWN */
         const walberla::float64 tmp_coords_jac_0_GREEN_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_3_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_4_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_5_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_6_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_7_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_8_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_9_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_0_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 + tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_1_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 + tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 jac_affine_0_0_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
         const walberla::float64 jac_affine_0_1_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
         const walberla::float64 jac_affine_1_0_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
         const walberla::float64 jac_affine_1_1_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
         const walberla::float64 jac_affine_2_0_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
         const walberla::float64 jac_affine_2_1_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.79742698535308731 + tmp_blending_op_1 * 0.10128650732345632 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.79742698535308731 + tmp_blending_op_26 * 0.10128650732345632 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.79742698535308731 + tmp_blending_op_31 * 0.10128650732345632 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.059715871789769892 + tmp_blending_op_1 * 0.47014206410511505 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.059715871789769892 + tmp_blending_op_26 * 0.47014206410511505 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.059715871789769892 + tmp_blending_op_31 * 0.47014206410511505 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.10128650732345632 + tmp_blending_op_1 * 0.79742698535308731 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.10128650732345632 + tmp_blending_op_26 * 0.79742698535308731 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.10128650732345632 + tmp_blending_op_31 * 0.79742698535308731 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.47014206410511505 + tmp_blending_op_1 * 0.059715871789769892 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.47014206410511505 + tmp_blending_op_26 * 0.059715871789769892 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.47014206410511505 + tmp_blending_op_31 * 0.059715871789769892 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_150 =
                      tmp_blending_op_0 * 0.33333333333333331 + tmp_blending_op_1 * 0.33333333333333331 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_151 = ( tmp_blending_op_150 * tmp_blending_op_150 );
                  const walberla::float64 tmp_blending_op_152 = -tmp_blending_op_150 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_153 =
                      tmp_blending_op_25 * 0.33333333333333331 + tmp_blending_op_26 * 0.33333333333333331 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_154 = -tmp_blending_op_153 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_155 =
                      tmp_blending_op_30 * 0.33333333333333331 + tmp_blending_op_31 * 0.33333333333333331 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_156 = -tmp_blending_op_13 - tmp_blending_op_155;
                  const walberla::float64 tmp_blending_op_157 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_154 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_152 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_152 -
                                             tmp_blending_op_154 * tmp_blending_op_19 - tmp_blending_op_156 * tmp_blending_op_20 +
                                             tmp_blending_op_156 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_158 = -tmp_blending_op_157;
                  const walberla::float64 tmp_blending_op_159 = ( tmp_blending_op_153 * tmp_blending_op_153 );
                  const walberla::float64 tmp_blending_op_160 = ( tmp_blending_op_155 * tmp_blending_op_155 );
                  const walberla::float64 tmp_blending_op_161 = tmp_blending_op_151 + tmp_blending_op_159 + tmp_blending_op_160;
                  const walberla::float64 tmp_blending_op_162 =
                      pow( tmp_blending_op_161, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_163 =
                      -tmp_blending_op_155 * tmp_blending_op_157 - tmp_blending_op_161 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_164 = tmp_blending_op_150 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_165 =
                      tmp_blending_op_153 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_166 =
                      tmp_blending_op_150 * tmp_blending_op_158 + tmp_blending_op_161 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_167 = tmp_blending_op_155 * tmp_blending_op_162;
                  const walberla::float64 tmp_blending_op_168 = tmp_blending_op_153 * tmp_blending_op_162;
                  const walberla::float64 jac_blending_2_2_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_6 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_6 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_6 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_6 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_6 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_6 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_6 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_6 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_151 * tmp_blending_op_158 +
                        tmp_blending_op_161 * ( tmp_blending_op_150 * tmp_blending_op_40 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_163 * tmp_blending_op_164;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_164 * tmp_blending_op_165;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_166 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_162 *
                      ( tmp_blending_op_158 * tmp_blending_op_160 +
                        tmp_blending_op_161 * ( tmp_blending_op_155 * tmp_blending_op_51 + tmp_blending_op_157 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_165 * tmp_blending_op_167;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_166 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_163 * tmp_blending_op_168;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_162 *
                      ( -tmp_blending_op_157 * tmp_blending_op_159 +
                        tmp_blending_op_161 * ( tmp_blending_op_153 * tmp_blending_op_53 + tmp_blending_op_157 ) );
                  const walberla::float64 k_dof_0 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_1 =
                      _data_kVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 k_dof_2 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_3 =
                      _data_kVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                        ( micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 k_dof_4 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_5 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                      ( micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_6 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_7 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                      ( micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_8 =
                      _data_kEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) )];
                  const walberla::float64 k_dof_9 =
                      _data_kEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                          ( micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  1];
                  const walberla::float64 tmp_kernel_op_0 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_1 = 0.1111111111111111;
                  const walberla::float64 tmp_kernel_op_2 = 0.1111111111111111;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_21 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_25 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_26 = k_dof_3 * tmp_kernel_op_25;
                  const walberla::float64 tmp_kernel_op_27 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_25 + 1.0;
                  const walberla::float64 tmp_kernel_op_30 =
                      ( k_dof_0 * ( tmp_kernel_op_20 + tmp_kernel_op_23 + tmp_kernel_op_24 + tmp_kernel_op_28 + tmp_kernel_op_29 -
                                    2.0 ) +
                        k_dof_1 * ( tmp_kernel_op_23 - 0.33333333333333331 ) +
                        k_dof_2 * ( tmp_kernel_op_24 - 0.33333333333333331 ) + k_dof_4 * tmp_kernel_op_20 +
                        k_dof_5 * tmp_kernel_op_21 + k_dof_6 * tmp_kernel_op_22 +
                        k_dof_7 * ( -tmp_kernel_op_20 - tmp_kernel_op_21 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_2 * -4.0 - tmp_kernel_op_20 - tmp_kernel_op_22 + 1.3333333333333333 ) +
                        k_dof_9 * ( tmp_kernel_op_1 * -4.0 - tmp_kernel_op_28 + 1.3333333333333333 ) + tmp_kernel_op_26 ) *
                      0.11250000000000003 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_12 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_13 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_18 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_19 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_18 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_19 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_12 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_13 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_30 * 16.0;
                  const walberla::float64 tmp_kernel_op_32 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_33 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_34 = 0.0035659853436122357;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_39 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_40 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_41 = jac_blending_0_0_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_42 = jac_blending_0_1_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_43 = jac_blending_0_2_q_1 * tmp_kernel_op_38 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_39 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_44 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_45 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_46 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_47 = jac_blending_0_0_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_blending_0_1_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_49 = jac_blending_0_2_q_1 * tmp_kernel_op_44 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_45 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_46;
                  const int64_t           tmp_kernel_op_50 = 0;
                  const walberla::float64 tmp_kernel_op_51 = 0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_52 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_52 + tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_57 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_51 + tmp_kernel_op_54 + tmp_kernel_op_55 + tmp_kernel_op_56 -
                                    1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_54 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_55 - 0.059715871789769892 ) + k_dof_4 * tmp_kernel_op_51 +
                        k_dof_5 * tmp_kernel_op_52 + k_dof_6 * tmp_kernel_op_53 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_51 - tmp_kernel_op_52 ) +
                        k_dof_8 * ( tmp_kernel_op_34 * -4.0 - tmp_kernel_op_51 - tmp_kernel_op_53 + 0.23886348715907957 ) +
                        k_dof_9 * ( tmp_kernel_op_33 * -4.0 - tmp_kernel_op_56 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_41 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_42 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_43 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_47 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_48 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_49 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_47 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_48 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_49 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_41 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_42 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_43 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 * 16.0;
                  const walberla::float64 tmp_kernel_op_59 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_60 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_61 = 0.63588979696931291;
                  const int64_t           tmp_kernel_op_62 = 0;
                  const int64_t           tmp_kernel_op_63 = 0;
                  const int64_t           tmp_kernel_op_64 = tmp_kernel_op_62 + tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_65 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_66 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_67 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_68 = jac_blending_0_0_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_69 = jac_blending_0_1_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_70 = jac_blending_0_2_q_2 * tmp_kernel_op_65 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_66 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_67;
                  const walberla::float64 tmp_kernel_op_71 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_72 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_73 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_74 = jac_blending_0_0_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_75 = jac_blending_0_1_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_76 = jac_blending_0_2_q_2 * tmp_kernel_op_71 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_72 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_77 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_78 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_79 = tmp_kernel_op_59 * 4.0;
                  const walberla::float64 tmp_kernel_op_80 = tmp_kernel_op_60 * 2.0;
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_61 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_78 + tmp_kernel_op_79;
                  const walberla::float64 tmp_kernel_op_83 =
                      ( k_dof_0 * ( tmp_kernel_op_29 + tmp_kernel_op_77 + tmp_kernel_op_80 + tmp_kernel_op_81 + tmp_kernel_op_82 -
                                    2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_80 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_81 - 0.79742698535308731 ) + k_dof_4 * tmp_kernel_op_77 +
                        k_dof_5 * tmp_kernel_op_78 + k_dof_6 * tmp_kernel_op_79 +
                        k_dof_7 * ( -tmp_kernel_op_27 - tmp_kernel_op_77 - tmp_kernel_op_78 ) +
                        k_dof_8 * ( tmp_kernel_op_61 * -4.0 - tmp_kernel_op_77 - tmp_kernel_op_79 + 3.1897079414123493 ) +
                        k_dof_9 * ( tmp_kernel_op_60 * -4.0 - tmp_kernel_op_82 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_68 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_69 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_70 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_74 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_75 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_76 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_74 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_75 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_76 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_68 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_69 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_70 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_83 * 16.0;
                  const walberla::float64 tmp_kernel_op_85 = 0.028074943223078828;
                  const walberla::float64 tmp_kernel_op_86 = 0.0035659853436122357;
                  const walberla::float64 tmp_kernel_op_87 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_88 = 0;
                  const int64_t           tmp_kernel_op_89 = 0;
                  const int64_t           tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_92 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_93 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_94 = jac_blending_0_0_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_95 = jac_blending_0_1_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_96 = jac_blending_0_2_q_3 * tmp_kernel_op_91 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_92 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_97 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_98 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_99 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_100 = jac_blending_0_0_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_0_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_0_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_101 = jac_blending_0_1_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_1_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_1_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_102 = jac_blending_0_2_q_3 * tmp_kernel_op_97 +
                                                              jac_blending_1_2_q_3 * tmp_kernel_op_98 +
                                                              jac_blending_2_2_q_3 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_103 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_104 =
                      0.059715871789769892 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_85 * 4.0;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_86 * 2.0;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_87 * 2.0;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_104 + tmp_kernel_op_105;
                  const walberla::float64 tmp_kernel_op_109 =
                      ( k_dof_0 * ( tmp_kernel_op_103 + tmp_kernel_op_106 + tmp_kernel_op_107 + tmp_kernel_op_108 +
                                    tmp_kernel_op_29 - 1.5895738076846548 ) +
                        k_dof_1 * ( tmp_kernel_op_106 - 0.059715871789769892 ) +
                        k_dof_2 * ( tmp_kernel_op_107 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_103 +
                        k_dof_5 * tmp_kernel_op_104 + k_dof_6 * tmp_kernel_op_105 +
                        k_dof_7 * ( -tmp_kernel_op_103 - tmp_kernel_op_104 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( -tmp_kernel_op_103 - tmp_kernel_op_105 + tmp_kernel_op_87 * -4.0 + 1.8805682564204602 ) +
                        k_dof_9 * ( -tmp_kernel_op_108 + tmp_kernel_op_86 * -4.0 + 0.23886348715907957 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_100 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_101 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_102 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_94 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_95 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_96 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_94 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_95 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_96 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_100 +
                                     jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_101 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_102 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_109 * 16.0;
                  const walberla::float64 tmp_kernel_op_111 = 0.080768594191887172;
                  const walberla::float64 tmp_kernel_op_112 = 0.63588979696931291;
                  const walberla::float64 tmp_kernel_op_113 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_114 = 0;
                  const int64_t           tmp_kernel_op_115 = 0;
                  const int64_t           tmp_kernel_op_116 = tmp_kernel_op_114 + tmp_kernel_op_115;
                  const walberla::float64 tmp_kernel_op_117 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_118 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_119 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_120 = jac_blending_0_0_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_121 = jac_blending_0_1_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_122 = jac_blending_0_2_q_4 * tmp_kernel_op_117 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_118 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_119;
                  const walberla::float64 tmp_kernel_op_123 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_124 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_125 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_126 = jac_blending_0_0_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_0_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_0_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_127 = jac_blending_0_1_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_1_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_1_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_128 = jac_blending_0_2_q_4 * tmp_kernel_op_123 +
                                                              jac_blending_1_2_q_4 * tmp_kernel_op_124 +
                                                              jac_blending_2_2_q_4 * tmp_kernel_op_125;
                  const walberla::float64 tmp_kernel_op_129 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_130 = 0.79742698535308731 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_111 * 4.0;
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_112 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_113 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_130 + tmp_kernel_op_131;
                  const walberla::float64 tmp_kernel_op_135 =
                      ( k_dof_0 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                    tmp_kernel_op_29 - 2.6961404780296307 ) +
                        k_dof_1 * ( tmp_kernel_op_132 - 0.79742698535308731 ) +
                        k_dof_2 * ( tmp_kernel_op_133 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_129 +
                        k_dof_5 * tmp_kernel_op_130 + k_dof_6 * tmp_kernel_op_131 +
                        k_dof_7 * ( -tmp_kernel_op_129 - tmp_kernel_op_130 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_113 * -4.0 - tmp_kernel_op_129 - tmp_kernel_op_131 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_112 * -4.0 - tmp_kernel_op_134 + 3.1897079414123493 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_120 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_121 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_122 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_126 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_127 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_128 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_126 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_127 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_128 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_120 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_121 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_122 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_135 * 16.0;
                  const walberla::float64 tmp_kernel_op_137 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_138 = 0.2210335604410181;
                  const walberla::float64 tmp_kernel_op_139 = 0.2210335604410181;
                  const int64_t           tmp_kernel_op_140 = 0;
                  const int64_t           tmp_kernel_op_141 = 0;
                  const int64_t           tmp_kernel_op_142 = tmp_kernel_op_140 + tmp_kernel_op_141;
                  const walberla::float64 tmp_kernel_op_143 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_144 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_145 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_146 = jac_blending_0_0_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_147 = jac_blending_0_1_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_148 = jac_blending_0_2_q_5 * tmp_kernel_op_143 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_144 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_145;
                  const walberla::float64 tmp_kernel_op_149 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_150 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_151 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_152 = jac_blending_0_0_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_153 = jac_blending_0_1_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_154 = jac_blending_0_2_q_5 * tmp_kernel_op_149 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_150 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_151;
                  const walberla::float64 tmp_kernel_op_155 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_156 = 0.47014206410511505 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_137 * 4.0;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_138 * 2.0;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_139 * 2.0;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_156 + tmp_kernel_op_157;
                  const walberla::float64 tmp_kernel_op_161 =
                      ( k_dof_0 * ( tmp_kernel_op_155 + tmp_kernel_op_158 + tmp_kernel_op_159 + tmp_kernel_op_160 +
                                    tmp_kernel_op_29 - 2.8208523846306903 ) +
                        k_dof_1 * ( tmp_kernel_op_158 - 0.47014206410511505 ) +
                        k_dof_2 * ( tmp_kernel_op_159 - 0.47014206410511505 ) + k_dof_4 * tmp_kernel_op_155 +
                        k_dof_5 * tmp_kernel_op_156 + k_dof_6 * tmp_kernel_op_157 +
                        k_dof_7 * ( -tmp_kernel_op_155 - tmp_kernel_op_156 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_139 * -4.0 - tmp_kernel_op_155 - tmp_kernel_op_157 + 1.8805682564204602 ) +
                        k_dof_9 * ( tmp_kernel_op_138 * -4.0 - tmp_kernel_op_160 + 1.8805682564204602 ) + tmp_kernel_op_26 ) *
                      0.066197076394253096 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_146 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_147 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_148 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_152 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_153 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_154 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_152 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_153 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_154 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_146 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_147 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_148 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_161 * 16.0;
                  const walberla::float64 tmp_kernel_op_163 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_164 = 0.01025895656578457;
                  const walberla::float64 tmp_kernel_op_165 = 0.01025895656578457;
                  const int64_t           tmp_kernel_op_166 = 0;
                  const int64_t           tmp_kernel_op_167 = 0;
                  const int64_t           tmp_kernel_op_168 = tmp_kernel_op_166 + tmp_kernel_op_167;
                  const walberla::float64 tmp_kernel_op_169 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_170 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_171 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_172 = jac_blending_0_0_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_173 = jac_blending_0_1_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_174 = jac_blending_0_2_q_6 * tmp_kernel_op_169 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_170 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_171;
                  const walberla::float64 tmp_kernel_op_175 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_6;
                  const walberla::float64 tmp_kernel_op_176 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_6;
                  const walberla::float64 tmp_kernel_op_177 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_6 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_6 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_6;
                  const walberla::float64 tmp_kernel_op_178 = jac_blending_0_0_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_0_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_0_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_179 = jac_blending_0_1_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_1_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_1_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_180 = jac_blending_0_2_q_6 * tmp_kernel_op_175 +
                                                              jac_blending_1_2_q_6 * tmp_kernel_op_176 +
                                                              jac_blending_2_2_q_6 * tmp_kernel_op_177;
                  const walberla::float64 tmp_kernel_op_181 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_182 = 0.10128650732345632 * ( ( walberla::float64 )( tmp_kernel_op_50 ) );
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_163 * 4.0;
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_164 * 2.0;
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_165 * 2.0;
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_182 + tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_187 =
                      ( k_dof_0 * ( tmp_kernel_op_181 + tmp_kernel_op_184 + tmp_kernel_op_185 + tmp_kernel_op_186 +
                                    tmp_kernel_op_29 - 0.60771904394073784 ) +
                        k_dof_1 * ( tmp_kernel_op_184 - 0.10128650732345632 ) +
                        k_dof_2 * ( tmp_kernel_op_185 - 0.10128650732345632 ) + k_dof_4 * tmp_kernel_op_181 +
                        k_dof_5 * tmp_kernel_op_182 + k_dof_6 * tmp_kernel_op_183 +
                        k_dof_7 * ( -tmp_kernel_op_181 - tmp_kernel_op_182 - tmp_kernel_op_27 ) +
                        k_dof_8 * ( tmp_kernel_op_165 * -4.0 - tmp_kernel_op_181 - tmp_kernel_op_183 + 0.40514602929382526 ) +
                        k_dof_9 * ( tmp_kernel_op_164 * -4.0 - tmp_kernel_op_186 + 0.40514602929382526 ) + tmp_kernel_op_26 ) *
                      0.062969590272413584 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_172 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_173 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_174 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_178 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_179 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_180 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_178 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_179 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_180 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_172 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_173 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_174 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_187 * 16.0;
                  const walberla::float64 tmp_kernel_op_189 = tmp_kernel_op_30 * 4.0;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_57 * 4.0;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_83 * 4.0;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_109 * 4.0;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_135 * 4.0;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_161 * 4.0;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_187 * 4.0;
                  const int64_t           tmp_kernel_op_196 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_58 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_84 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_110 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_136 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_162 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_203 = tmp_kernel_op_188 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_204 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_110 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_85 + tmp_kernel_op_86 * 0.5 + tmp_kernel_op_87 * 0.5 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 *
                          ( ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) *
                            ( tmp_kernel_op_111 + tmp_kernel_op_112 * 0.5 + tmp_kernel_op_113 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_116 ) ) ) ) +
                      tmp_kernel_op_162 *
                          ( ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) *
                            ( tmp_kernel_op_137 + tmp_kernel_op_138 * 0.5 + tmp_kernel_op_139 * 0.5 + tmp_kernel_op_7 -
                              0.70521309615767258 + ( ( walberla::float64 )( tmp_kernel_op_142 ) ) ) ) +
                      tmp_kernel_op_188 *
                          ( ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) *
                            ( tmp_kernel_op_163 + tmp_kernel_op_164 * 0.5 + tmp_kernel_op_165 * 0.5 + tmp_kernel_op_7 -
                              0.15192976098518446 + ( ( walberla::float64 )( tmp_kernel_op_168 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.5 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.39739345192116371 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 *
                          ( ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) *
                            ( tmp_kernel_op_59 + tmp_kernel_op_60 * 0.5 + tmp_kernel_op_61 * 0.5 + tmp_kernel_op_7 -
                              0.67403511950740769 + ( ( walberla::float64 )( tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_1 - 0.16666666666666666 ) * ( tmp_kernel_op_1 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_33 - 0.23507103205255753 ) * ( tmp_kernel_op_33 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_60 - 0.050643253661728158 ) * ( tmp_kernel_op_60 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_86 - 0.029857935894884946 ) * ( tmp_kernel_op_86 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_112 - 0.39871349267654366 ) * ( tmp_kernel_op_112 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_138 - 0.23507103205255753 ) * ( tmp_kernel_op_138 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_164 - 0.050643253661728158 ) * ( tmp_kernel_op_164 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_189 *
                          ( ( tmp_kernel_op_2 - 0.16666666666666666 ) * ( tmp_kernel_op_2 - 0.16666666666666666 ) ) +
                      tmp_kernel_op_190 *
                          ( ( tmp_kernel_op_34 - 0.029857935894884946 ) * ( tmp_kernel_op_34 - 0.029857935894884946 ) ) +
                      tmp_kernel_op_191 *
                          ( ( tmp_kernel_op_61 - 0.39871349267654366 ) * ( tmp_kernel_op_61 - 0.39871349267654366 ) ) +
                      tmp_kernel_op_192 *
                          ( ( tmp_kernel_op_87 - 0.23507103205255753 ) * ( tmp_kernel_op_87 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_193 *
                          ( ( tmp_kernel_op_113 - 0.050643253661728158 ) * ( tmp_kernel_op_113 - 0.050643253661728158 ) ) +
                      tmp_kernel_op_194 *
                          ( ( tmp_kernel_op_139 - 0.23507103205255753 ) * ( tmp_kernel_op_139 - 0.23507103205255753 ) ) +
                      tmp_kernel_op_195 *
                          ( ( tmp_kernel_op_165 - 0.050643253661728158 ) * ( tmp_kernel_op_165 - 0.050643253661728158 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_189 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_196 ) ) +
                                                        tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_196 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_113 * tmp_kernel_op_201 + tmp_kernel_op_139 * tmp_kernel_op_202 +
                      tmp_kernel_op_165 * tmp_kernel_op_203 + tmp_kernel_op_197 * tmp_kernel_op_2 +
                      tmp_kernel_op_198 * tmp_kernel_op_34 + tmp_kernel_op_199 * tmp_kernel_op_61 +
                      tmp_kernel_op_200 * tmp_kernel_op_87;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_197 + tmp_kernel_op_112 * tmp_kernel_op_201 +
                      tmp_kernel_op_138 * tmp_kernel_op_202 + tmp_kernel_op_164 * tmp_kernel_op_203 +
                      tmp_kernel_op_198 * tmp_kernel_op_33 + tmp_kernel_op_199 * tmp_kernel_op_60 +
                      tmp_kernel_op_200 * tmp_kernel_op_86;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_110 * tmp_kernel_op_86 * tmp_kernel_op_87 +
                                                        tmp_kernel_op_112 * tmp_kernel_op_113 * tmp_kernel_op_136 +
                                                        tmp_kernel_op_138 * tmp_kernel_op_139 * tmp_kernel_op_162 +
                                                        tmp_kernel_op_164 * tmp_kernel_op_165 * tmp_kernel_op_188 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_58 +
                                                        tmp_kernel_op_60 * tmp_kernel_op_61 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_110 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) *
                                                                     ( -tmp_kernel_op_204 - tmp_kernel_op_90 ) ) ) ) +
                      tmp_kernel_op_136 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_116 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_162 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_142 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_188 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) *
                                                                     ( -tmp_kernel_op_168 - tmp_kernel_op_204 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_58 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_84 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) *
                                                                    ( -tmp_kernel_op_204 - tmp_kernel_op_64 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_87 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_89 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_113 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_115 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_139 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_141 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_165 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_167 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_61 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_63 ) ) + 0.79742698535308731 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_110 * ( ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) *
                                            ( -tmp_kernel_op_85 - tmp_kernel_op_86 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_88 ) ) + 0.059715871789769892 ) ) +
                      tmp_kernel_op_136 * ( ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) *
                                            ( -tmp_kernel_op_111 - tmp_kernel_op_112 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_114 ) ) + 0.79742698535308731 ) ) +
                      tmp_kernel_op_162 * ( ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) *
                                            ( -tmp_kernel_op_137 - tmp_kernel_op_138 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_140 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_188 * ( ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) *
                                            ( -tmp_kernel_op_163 - tmp_kernel_op_164 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_166 ) ) + 0.10128650732345632 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.33333333333333331 ) ) +
                      tmp_kernel_op_58 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.47014206410511505 ) ) +
                      tmp_kernel_op_84 * ( ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) *
                                           ( -tmp_kernel_op_59 - tmp_kernel_op_60 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_62 ) ) + 0.10128650732345632 ) );
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
               }
      }
   }
}

} // namespace operatorgeneration

} // namespace hyteg
