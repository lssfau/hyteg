/*
* Copyright (c) 2017-2024 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG Operator Generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/

// Unfortunately, the inverse diagonal kernel wrapper triggers a GCC bug (maybe
// (related to) https://gcc.gnu.org/bugzilla/show_bug.cgi?id=107087) causing a
// warning in an internal standard library header (bits/stl_algobase.h). As a
// workaround, we disable the warning and include this header indirectly through
// a public header.
#include <waLBerlaDefinitions.h>
#ifdef WALBERLA_CXX_COMPILER_IS_GNU
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wnonnull"
#endif
#include <cmath>
#ifdef WALBERLA_CXX_COMPILER_IS_GNU
#pragma GCC diagnostic pop
#endif

#include "P2ElementwiseBoundaryMassIcosahedralShellMapOperator.hpp"

#define FUNC_PREFIX

namespace hyteg {

namespace operatorgeneration {

P2ElementwiseBoundaryMassIcosahedralShellMapOperator::P2ElementwiseBoundaryMassIcosahedralShellMapOperator(
    const std::shared_ptr< PrimitiveStorage >& storage,
    size_t                                     minLevel,
    size_t                                     maxLevel,
    BoundaryCondition                          boundaryCondition,
    BoundaryUID                                P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid )
: Operator( storage, minLevel, maxLevel )
, boundaryCondition_( boundaryCondition )
, P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_(
      P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid )
{}

void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::apply( const P2Function< walberla::float64 >& src,
                                                                  const P2Function< walberla::float64 >& dst,
                                                                  uint_t                                 level,
                                                                  DoFType                                flag,
                                                                  UpdateType                             updateType ) const
{
   this->startTiming( "apply" );

   // Make sure that halos are up-to-date
   this->timingTree_->start( "pre-communication" );
   if ( this->storage_->hasGlobalCells() )
   {
      // Note that the order of communication is important, since the face -> cell communication may overwrite
      // parts of the halos that carry the macro-vertex and macro-edge unknowns.
      src.communicate< Face, Cell >( level );
      src.communicate< Edge, Cell >( level );
      src.communicate< Vertex, Cell >( level );
   }
   else
   {
      WALBERLA_ABORT( "Not implemented." );
   }
   this->timingTree_->stop( "pre-communication" );

   if ( updateType == Replace )
   {
      // We need to zero the destination array (including halos).
      // However, we must not zero out anything that is not flagged with the specified BCs.
      // Therefore, we first zero out everything that flagged, and then, later,
      // the halos of the highest dim primitives.
      dst.interpolate( walberla::numeric_cast< walberla::float64 >( 0 ), level, flag );
   }

   if ( storage_->hasGlobalCells() )
   {
      for ( auto& it : storage_->getCells() )
      {
         Cell& cell = *it.second;

         // get hold of the actual numerical data in the functions
         walberla::float64* _data_srcVertex = cell.getData( src.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_srcEdge   = cell.getData( src.getEdgeDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_dstVertex = cell.getData( dst.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_dstEdge   = cell.getData( dst.getEdgeDoFFunction().getCellDataID() )->getPointer( level );

         // Zero out dst halos only
         //
         // This is also necessary when using update type == Add.
         // During additive comm we then skip zeroing the data on the lower-dim primitives.
         for ( const auto& idx : vertexdof::macrocell::Iterator( level ) )
         {
            if ( !vertexdof::macrocell::isOnCellFace( idx, level ).empty() )
            {
               auto arrayIdx             = vertexdof::macrocell::index( level, idx.x(), idx.y(), idx.z() );
               _data_dstVertex[arrayIdx] = walberla::float64( 0 );
            }
         }
         edgedof::macrocell::setBoundaryToZero( level, cell, dst.getEdgeDoFFunction().getCellDataID() );

         const auto micro_edges_per_macro_edge                = (int64_t) levelinfo::num_microedges_per_edge( level );
         const auto num_microfaces_per_face                   = (int64_t) levelinfo::num_microfaces_per_face( level );
         const auto micro_edges_per_macro_edge_float          = (walberla::float64) levelinfo::num_microedges_per_edge( level );
         const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) cell.getCoordinates()[0][0];
         const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) cell.getCoordinates()[0][1];
         const walberla::float64 macro_vertex_coord_id_0comp2 = (walberla::float64) cell.getCoordinates()[0][2];
         const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) cell.getCoordinates()[1][0];
         const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) cell.getCoordinates()[1][1];
         const walberla::float64 macro_vertex_coord_id_1comp2 = (walberla::float64) cell.getCoordinates()[1][2];
         const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) cell.getCoordinates()[2][0];
         const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) cell.getCoordinates()[2][1];
         const walberla::float64 macro_vertex_coord_id_2comp2 = (walberla::float64) cell.getCoordinates()[2][2];
         const walberla::float64 macro_vertex_coord_id_3comp0 = (walberla::float64) cell.getCoordinates()[3][0];
         const walberla::float64 macro_vertex_coord_id_3comp1 = (walberla::float64) cell.getCoordinates()[3][1];
         const walberla::float64 macro_vertex_coord_id_3comp2 = (walberla::float64) cell.getCoordinates()[3][2];
         WALBERLA_CHECK_NOT_NULLPTR(
             std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() ),
             "This operator requires the IcosahedralShellMap to be registered as GeometryMap on every macro-cell." )
         real_t radRefVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRefVertex();
         real_t radRayVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRayVertex();
         real_t refVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[0];
         real_t rayVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[0];
         real_t thrVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[0];
         real_t forVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[0];
         real_t refVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[1];
         real_t rayVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[1];
         real_t thrVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[1];
         real_t forVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[1];
         real_t refVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[2];
         real_t rayVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[2];
         real_t thrVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[2];
         real_t forVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[2];

         this->timingTree_->start( "kernel" );

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_0_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_1_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_2_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[3] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_3_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                forVertex_0,
                forVertex_1,
                forVertex_2,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float,
                radRayVertex,
                radRefVertex,
                rayVertex_0,
                rayVertex_1,
                rayVertex_2,
                refVertex_0,
                refVertex_1,
                refVertex_2,
                thrVertex_0,
                thrVertex_1,
                thrVertex_2 );
         }

         this->timingTree_->stop( "kernel" );
      }

      // Push result to lower-dimensional primitives
      //
      this->timingTree_->start( "post-communication" );
      // Note: We could avoid communication here by implementing the apply() also for the respective
      //       lower dimensional primitives!
      dst.getVertexDoFFunction().communicateAdditively< Cell, Face >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getVertexDoFFunction().communicateAdditively< Cell, Edge >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getVertexDoFFunction().communicateAdditively< Cell, Vertex >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getEdgeDoFFunction().communicateAdditively< Cell, Face >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getEdgeDoFFunction().communicateAdditively< Cell, Edge >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      this->timingTree_->stop( "post-communication" );
   }
   else
   {
      WALBERLA_ABORT( "Not implemented." );
   }

   this->stopTiming( "apply" );
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::computeInverseDiagonalOperatorValues()
{
   this->startTiming( "computeInverseDiagonalOperatorValues" );

   if ( invDiag_ == nullptr )
   {
      invDiag_ =
          std::make_shared< P2Function< walberla::float64 > >( "inverse diagonal entries", storage_, minLevel_, maxLevel_ );
   }

   for ( uint_t level = minLevel_; level <= maxLevel_; level++ )
   {
      invDiag_->setToZero( level );

      if ( storage_->hasGlobalCells() )
      {
         this->timingTree_->start( "pre-communication" );

         this->timingTree_->stop( "pre-communication" );

         for ( auto& it : storage_->getCells() )
         {
            Cell& cell = *it.second;

            // get hold of the actual numerical data
            walberla::float64* _data_invDiag_Vertex =
                cell.getData( ( *invDiag_ ).getVertexDoFFunction().getCellDataID() )->getPointer( level );
            walberla::float64* _data_invDiag_Edge =
                cell.getData( ( *invDiag_ ).getEdgeDoFFunction().getCellDataID() )->getPointer( level );

            const auto micro_edges_per_macro_edge       = (int64_t) levelinfo::num_microedges_per_edge( level );
            const auto num_microfaces_per_face          = (int64_t) levelinfo::num_microfaces_per_face( level );
            const auto micro_edges_per_macro_edge_float = (walberla::float64) levelinfo::num_microedges_per_edge( level );
            const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) cell.getCoordinates()[0][0];
            const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) cell.getCoordinates()[0][1];
            const walberla::float64 macro_vertex_coord_id_0comp2 = (walberla::float64) cell.getCoordinates()[0][2];
            const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) cell.getCoordinates()[1][0];
            const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) cell.getCoordinates()[1][1];
            const walberla::float64 macro_vertex_coord_id_1comp2 = (walberla::float64) cell.getCoordinates()[1][2];
            const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) cell.getCoordinates()[2][0];
            const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) cell.getCoordinates()[2][1];
            const walberla::float64 macro_vertex_coord_id_2comp2 = (walberla::float64) cell.getCoordinates()[2][2];
            const walberla::float64 macro_vertex_coord_id_3comp0 = (walberla::float64) cell.getCoordinates()[3][0];
            const walberla::float64 macro_vertex_coord_id_3comp1 = (walberla::float64) cell.getCoordinates()[3][1];
            const walberla::float64 macro_vertex_coord_id_3comp2 = (walberla::float64) cell.getCoordinates()[3][2];
            WALBERLA_CHECK_NOT_NULLPTR(
                std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() ),
                "This operator requires the IcosahedralShellMap to be registered as GeometryMap on every macro-cell." )
            real_t radRefVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRefVertex();
            real_t radRayVertex = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->radRayVertex();
            real_t refVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[0];
            real_t rayVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[0];
            real_t thrVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[0];
            real_t forVertex_0  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[0];
            real_t refVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[1];
            real_t rayVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[1];
            real_t thrVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[1];
            real_t forVertex_1  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[1];
            real_t refVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->refVertex()[2];
            real_t rayVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->rayVertex()[2];
            real_t thrVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->thrVertex()[2];
            real_t forVertex_2  = std::dynamic_pointer_cast< IcosahedralShellMap >( cell.getGeometryMap() )->forVertex()[2];

            this->timingTree_->start( "kernel" );

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_0_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   forVertex_0,
                   forVertex_1,
                   forVertex_2,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float,
                   radRayVertex,
                   radRefVertex,
                   rayVertex_0,
                   rayVertex_1,
                   rayVertex_2,
                   refVertex_0,
                   refVertex_1,
                   refVertex_2,
                   thrVertex_0,
                   thrVertex_1,
                   thrVertex_2 );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_1_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   forVertex_0,
                   forVertex_1,
                   forVertex_2,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float,
                   radRayVertex,
                   radRefVertex,
                   rayVertex_0,
                   rayVertex_1,
                   rayVertex_2,
                   refVertex_0,
                   refVertex_1,
                   refVertex_2,
                   thrVertex_0,
                   thrVertex_1,
                   thrVertex_2 );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_2_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   forVertex_0,
                   forVertex_1,
                   forVertex_2,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float,
                   radRayVertex,
                   radRefVertex,
                   rayVertex_0,
                   rayVertex_1,
                   rayVertex_2,
                   refVertex_0,
                   refVertex_1,
                   refVertex_2,
                   thrVertex_0,
                   thrVertex_1,
                   thrVertex_2 );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[3] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMassIcosahedralShellMapOperator_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_3_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   forVertex_0,
                   forVertex_1,
                   forVertex_2,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float,
                   radRayVertex,
                   radRefVertex,
                   rayVertex_0,
                   rayVertex_1,
                   rayVertex_2,
                   refVertex_0,
                   refVertex_1,
                   refVertex_2,
                   thrVertex_0,
                   thrVertex_1,
                   thrVertex_2 );
            }

            this->timingTree_->stop( "kernel" );
         }

         // Push result to lower-dimensional primitives
         //
         this->timingTree_->start( "post-communication" );
         // Note: We could avoid communication here by implementing the apply() also for the respective
         //       lower dimensional primitives!
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Face >( level );
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Edge >( level );
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Vertex >( level );
         ( *invDiag_ ).getEdgeDoFFunction().communicateAdditively< Cell, Face >( level );
         ( *invDiag_ ).getEdgeDoFFunction().communicateAdditively< Cell, Edge >( level );
         this->timingTree_->stop( "post-communication" );
         ( *invDiag_ ).invertElementwise( level );
      }
      else
      {
         this->timingTree_->start( "pre-communication" );

         this->timingTree_->stop( "pre-communication" );

         WALBERLA_ABORT( "Not implemented." );
         ( *invDiag_ ).invertElementwise( level );
      }
   }

   this->stopTiming( "computeInverseDiagonalOperatorValues" );
}
std::shared_ptr< P2Function< walberla::float64 > >
    P2ElementwiseBoundaryMassIcosahedralShellMapOperator::getInverseDiagonalValues() const
{
   return invDiag_;
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::
    apply_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_0_macro_3D(
        walberla::float64* RESTRICT _data_dstEdge,
        walberla::float64* RESTRICT _data_dstVertex,
        walberla::float64* RESTRICT _data_srcEdge,
        walberla::float64* RESTRICT _data_srcVertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_122 + tmp_kernel_op_126;
                  const walberla::float64 tmp_kernel_op_128 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_128 + 1.0;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_20 * ( tmp_kernel_op_123 + tmp_kernel_op_124 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                           tmp_kernel_op_129 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_131 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_26 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_23 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_24 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_22 * 4.0;
                  const walberla::float64 tmp_kernel_op_135 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_25 ) );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_131 + tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_137 =
                      tmp_kernel_op_40 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                           tmp_kernel_op_136 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_138 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_43 * 2.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_44 * 2.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_42 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_45 ) );
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_138 + tmp_kernel_op_142;
                  const walberla::float64 tmp_kernel_op_144 =
                      tmp_kernel_op_60 * ( tmp_kernel_op_129 + tmp_kernel_op_139 + tmp_kernel_op_140 + tmp_kernel_op_141 +
                                           tmp_kernel_op_143 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_145 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_63 * 2.0;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_64 * 2.0;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_149 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_65 ) );
                  const walberla::float64 tmp_kernel_op_150 = tmp_kernel_op_145 + tmp_kernel_op_149;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_80 * ( tmp_kernel_op_129 + tmp_kernel_op_146 + tmp_kernel_op_147 + tmp_kernel_op_148 +
                                           tmp_kernel_op_150 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_152 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_86 ) );
                  const walberla::float64 tmp_kernel_op_153 = tmp_kernel_op_83 * 2.0;
                  const walberla::float64 tmp_kernel_op_154 = tmp_kernel_op_84 * 2.0;
                  const walberla::float64 tmp_kernel_op_155 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_156 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_85 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_152 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_158 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_129 + tmp_kernel_op_153 + tmp_kernel_op_154 + tmp_kernel_op_155 +
                                            tmp_kernel_op_157 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_159 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_106 ) );
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_103 * 2.0;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_104 * 2.0;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_163 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_159 + tmp_kernel_op_163;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_120 * ( tmp_kernel_op_129 + tmp_kernel_op_160 + tmp_kernel_op_161 + tmp_kernel_op_162 +
                                            tmp_kernel_op_164 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_122 * tmp_kernel_op_130 + tmp_kernel_op_131 * tmp_kernel_op_137 +
                      tmp_kernel_op_138 * tmp_kernel_op_144 + tmp_kernel_op_145 * tmp_kernel_op_151 +
                      tmp_kernel_op_152 * tmp_kernel_op_158 + tmp_kernel_op_159 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_126 * tmp_kernel_op_130 + tmp_kernel_op_135 * tmp_kernel_op_137 +
                      tmp_kernel_op_142 * tmp_kernel_op_144 + tmp_kernel_op_149 * tmp_kernel_op_151 +
                      tmp_kernel_op_156 * tmp_kernel_op_158 + tmp_kernel_op_163 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_125 * tmp_kernel_op_130 + tmp_kernel_op_134 * tmp_kernel_op_137 +
                      tmp_kernel_op_141 * tmp_kernel_op_144 + tmp_kernel_op_148 * tmp_kernel_op_151 +
                      tmp_kernel_op_155 * tmp_kernel_op_158 + tmp_kernel_op_162 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_169 = tmp_kernel_op_123 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_170 = tmp_kernel_op_132 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_139 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_146 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_153 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_160 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_175 =
                      tmp_kernel_op_130 * tmp_kernel_op_169 + tmp_kernel_op_137 * tmp_kernel_op_170 +
                      tmp_kernel_op_144 * tmp_kernel_op_171 + tmp_kernel_op_151 * tmp_kernel_op_172 +
                      tmp_kernel_op_158 * tmp_kernel_op_173 + tmp_kernel_op_165 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_124 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_177 = tmp_kernel_op_133 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_178 = tmp_kernel_op_140 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_179 = tmp_kernel_op_147 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_180 = tmp_kernel_op_154 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_181 = tmp_kernel_op_161 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_176 + tmp_kernel_op_137 * tmp_kernel_op_177 +
                      tmp_kernel_op_144 * tmp_kernel_op_178 + tmp_kernel_op_151 * tmp_kernel_op_179 +
                      tmp_kernel_op_158 * tmp_kernel_op_180 + tmp_kernel_op_165 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_184 =
                      tmp_kernel_op_130 * tmp_kernel_op_183 + tmp_kernel_op_137 * tmp_kernel_op_183 +
                      tmp_kernel_op_144 * tmp_kernel_op_183 + tmp_kernel_op_151 * tmp_kernel_op_183 +
                      tmp_kernel_op_158 * tmp_kernel_op_183 + tmp_kernel_op_165 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_185 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = -tmp_kernel_op_127 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_187 = -tmp_kernel_op_136 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_188 = -tmp_kernel_op_143 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_189 = -tmp_kernel_op_150 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_190 = -tmp_kernel_op_157 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_191 = -tmp_kernel_op_164 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_192 =
                      tmp_kernel_op_130 * tmp_kernel_op_186 + tmp_kernel_op_137 * tmp_kernel_op_187 +
                      tmp_kernel_op_144 * tmp_kernel_op_188 + tmp_kernel_op_151 * tmp_kernel_op_189 +
                      tmp_kernel_op_158 * tmp_kernel_op_190 + tmp_kernel_op_165 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_193 =
                      -tmp_kernel_op_122 - tmp_kernel_op_125 + tmp_kernel_op_2 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_194 =
                      -tmp_kernel_op_131 - tmp_kernel_op_134 + tmp_kernel_op_24 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_195 =
                      -tmp_kernel_op_138 - tmp_kernel_op_141 + tmp_kernel_op_44 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_196 =
                      -tmp_kernel_op_145 - tmp_kernel_op_148 + tmp_kernel_op_64 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_197 =
                      -tmp_kernel_op_152 - tmp_kernel_op_155 + tmp_kernel_op_84 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_198 =
                      tmp_kernel_op_104 * -4.0 - tmp_kernel_op_159 - tmp_kernel_op_162 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_199 =
                      tmp_kernel_op_130 * tmp_kernel_op_193 + tmp_kernel_op_137 * tmp_kernel_op_194 +
                      tmp_kernel_op_144 * tmp_kernel_op_195 + tmp_kernel_op_151 * tmp_kernel_op_196 +
                      tmp_kernel_op_158 * tmp_kernel_op_197 + tmp_kernel_op_165 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_200 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_125 - tmp_kernel_op_126 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_201 =
                      -tmp_kernel_op_134 - tmp_kernel_op_135 + tmp_kernel_op_23 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_202 =
                      -tmp_kernel_op_141 - tmp_kernel_op_142 + tmp_kernel_op_43 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_203 =
                      -tmp_kernel_op_148 - tmp_kernel_op_149 + tmp_kernel_op_63 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_204 =
                      -tmp_kernel_op_155 - tmp_kernel_op_156 + tmp_kernel_op_83 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_205 =
                      tmp_kernel_op_103 * -4.0 - tmp_kernel_op_162 - tmp_kernel_op_163 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_206 =
                      tmp_kernel_op_130 * tmp_kernel_op_200 + tmp_kernel_op_137 * tmp_kernel_op_201 +
                      tmp_kernel_op_144 * tmp_kernel_op_202 + tmp_kernel_op_151 * tmp_kernel_op_203 +
                      tmp_kernel_op_158 * tmp_kernel_op_204 + tmp_kernel_op_165 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_210 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_120 * 4.0;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_169 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_170 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_171 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_172 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_217 = tmp_kernel_op_100 * tmp_kernel_op_173;
                  const walberla::float64 tmp_kernel_op_218 = tmp_kernel_op_120 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_122 * tmp_kernel_op_213 + tmp_kernel_op_131 * tmp_kernel_op_214 +
                      tmp_kernel_op_138 * tmp_kernel_op_215 + tmp_kernel_op_145 * tmp_kernel_op_216 +
                      tmp_kernel_op_152 * tmp_kernel_op_217 + tmp_kernel_op_159 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_126 * tmp_kernel_op_213 + tmp_kernel_op_135 * tmp_kernel_op_214 +
                      tmp_kernel_op_142 * tmp_kernel_op_215 + tmp_kernel_op_149 * tmp_kernel_op_216 +
                      tmp_kernel_op_156 * tmp_kernel_op_217 + tmp_kernel_op_163 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_125 * tmp_kernel_op_213 + tmp_kernel_op_134 * tmp_kernel_op_214 +
                      tmp_kernel_op_141 * tmp_kernel_op_215 + tmp_kernel_op_148 * tmp_kernel_op_216 +
                      tmp_kernel_op_155 * tmp_kernel_op_217 + tmp_kernel_op_162 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_176 * tmp_kernel_op_213 + tmp_kernel_op_177 * tmp_kernel_op_214 +
                      tmp_kernel_op_178 * tmp_kernel_op_215 + tmp_kernel_op_179 * tmp_kernel_op_216 +
                      tmp_kernel_op_180 * tmp_kernel_op_217 + tmp_kernel_op_181 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_183 * tmp_kernel_op_213 + tmp_kernel_op_183 * tmp_kernel_op_214 +
                      tmp_kernel_op_183 * tmp_kernel_op_215 + tmp_kernel_op_183 * tmp_kernel_op_216 +
                      tmp_kernel_op_183 * tmp_kernel_op_217 + tmp_kernel_op_183 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_186 * tmp_kernel_op_213 + tmp_kernel_op_187 * tmp_kernel_op_214 +
                      tmp_kernel_op_188 * tmp_kernel_op_215 + tmp_kernel_op_189 * tmp_kernel_op_216 +
                      tmp_kernel_op_190 * tmp_kernel_op_217 + tmp_kernel_op_191 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_225 =
                      tmp_kernel_op_193 * tmp_kernel_op_213 + tmp_kernel_op_194 * tmp_kernel_op_214 +
                      tmp_kernel_op_195 * tmp_kernel_op_215 + tmp_kernel_op_196 * tmp_kernel_op_216 +
                      tmp_kernel_op_197 * tmp_kernel_op_217 + tmp_kernel_op_198 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_200 * tmp_kernel_op_213 + tmp_kernel_op_201 * tmp_kernel_op_214 +
                      tmp_kernel_op_202 * tmp_kernel_op_215 + tmp_kernel_op_203 * tmp_kernel_op_216 +
                      tmp_kernel_op_204 * tmp_kernel_op_217 + tmp_kernel_op_205 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_176 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_177 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_178 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_230 = tmp_kernel_op_179 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_100 * tmp_kernel_op_180;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_120 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_233 =
                      tmp_kernel_op_122 * tmp_kernel_op_227 + tmp_kernel_op_131 * tmp_kernel_op_228 +
                      tmp_kernel_op_138 * tmp_kernel_op_229 + tmp_kernel_op_145 * tmp_kernel_op_230 +
                      tmp_kernel_op_152 * tmp_kernel_op_231 + tmp_kernel_op_159 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_234 =
                      tmp_kernel_op_126 * tmp_kernel_op_227 + tmp_kernel_op_135 * tmp_kernel_op_228 +
                      tmp_kernel_op_142 * tmp_kernel_op_229 + tmp_kernel_op_149 * tmp_kernel_op_230 +
                      tmp_kernel_op_156 * tmp_kernel_op_231 + tmp_kernel_op_163 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_235 =
                      tmp_kernel_op_125 * tmp_kernel_op_227 + tmp_kernel_op_134 * tmp_kernel_op_228 +
                      tmp_kernel_op_141 * tmp_kernel_op_229 + tmp_kernel_op_148 * tmp_kernel_op_230 +
                      tmp_kernel_op_155 * tmp_kernel_op_231 + tmp_kernel_op_162 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_236 =
                      tmp_kernel_op_183 * tmp_kernel_op_227 + tmp_kernel_op_183 * tmp_kernel_op_228 +
                      tmp_kernel_op_183 * tmp_kernel_op_229 + tmp_kernel_op_183 * tmp_kernel_op_230 +
                      tmp_kernel_op_183 * tmp_kernel_op_231 + tmp_kernel_op_183 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_237 =
                      tmp_kernel_op_186 * tmp_kernel_op_227 + tmp_kernel_op_187 * tmp_kernel_op_228 +
                      tmp_kernel_op_188 * tmp_kernel_op_229 + tmp_kernel_op_189 * tmp_kernel_op_230 +
                      tmp_kernel_op_190 * tmp_kernel_op_231 + tmp_kernel_op_191 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_238 =
                      tmp_kernel_op_193 * tmp_kernel_op_227 + tmp_kernel_op_194 * tmp_kernel_op_228 +
                      tmp_kernel_op_195 * tmp_kernel_op_229 + tmp_kernel_op_196 * tmp_kernel_op_230 +
                      tmp_kernel_op_197 * tmp_kernel_op_231 + tmp_kernel_op_198 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_200 * tmp_kernel_op_227 + tmp_kernel_op_201 * tmp_kernel_op_228 +
                      tmp_kernel_op_202 * tmp_kernel_op_229 + tmp_kernel_op_203 * tmp_kernel_op_230 +
                      tmp_kernel_op_204 * tmp_kernel_op_231 + tmp_kernel_op_205 * tmp_kernel_op_232;
                  const int64_t           tmp_kernel_op_240 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_241 = tmp_kernel_op_183 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_242 = tmp_kernel_op_183 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_243 = tmp_kernel_op_183 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_244 = tmp_kernel_op_183 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_245 = tmp_kernel_op_100 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_246 = tmp_kernel_op_120 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_122 * tmp_kernel_op_241 + tmp_kernel_op_131 * tmp_kernel_op_242 +
                      tmp_kernel_op_138 * tmp_kernel_op_243 + tmp_kernel_op_145 * tmp_kernel_op_244 +
                      tmp_kernel_op_152 * tmp_kernel_op_245 + tmp_kernel_op_159 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_248 =
                      tmp_kernel_op_126 * tmp_kernel_op_241 + tmp_kernel_op_135 * tmp_kernel_op_242 +
                      tmp_kernel_op_142 * tmp_kernel_op_243 + tmp_kernel_op_149 * tmp_kernel_op_244 +
                      tmp_kernel_op_156 * tmp_kernel_op_245 + tmp_kernel_op_163 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_249 =
                      tmp_kernel_op_125 * tmp_kernel_op_241 + tmp_kernel_op_134 * tmp_kernel_op_242 +
                      tmp_kernel_op_141 * tmp_kernel_op_243 + tmp_kernel_op_148 * tmp_kernel_op_244 +
                      tmp_kernel_op_155 * tmp_kernel_op_245 + tmp_kernel_op_162 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_250 =
                      tmp_kernel_op_186 * tmp_kernel_op_241 + tmp_kernel_op_187 * tmp_kernel_op_242 +
                      tmp_kernel_op_188 * tmp_kernel_op_243 + tmp_kernel_op_189 * tmp_kernel_op_244 +
                      tmp_kernel_op_190 * tmp_kernel_op_245 + tmp_kernel_op_191 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_251 =
                      tmp_kernel_op_193 * tmp_kernel_op_241 + tmp_kernel_op_194 * tmp_kernel_op_242 +
                      tmp_kernel_op_195 * tmp_kernel_op_243 + tmp_kernel_op_196 * tmp_kernel_op_244 +
                      tmp_kernel_op_197 * tmp_kernel_op_245 + tmp_kernel_op_198 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_252 =
                      tmp_kernel_op_200 * tmp_kernel_op_241 + tmp_kernel_op_201 * tmp_kernel_op_242 +
                      tmp_kernel_op_202 * tmp_kernel_op_243 + tmp_kernel_op_203 * tmp_kernel_op_244 +
                      tmp_kernel_op_204 * tmp_kernel_op_245 + tmp_kernel_op_205 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_259 =
                      tmp_kernel_op_0 * tmp_kernel_op_253 + tmp_kernel_op_102 * tmp_kernel_op_258 +
                      tmp_kernel_op_22 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_42 +
                      tmp_kernel_op_256 * tmp_kernel_op_62 + tmp_kernel_op_257 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_2 * tmp_kernel_op_21;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_24 * tmp_kernel_op_41;
                  const walberla::float64 tmp_kernel_op_262 = tmp_kernel_op_44 * tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_263 = tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_264 = tmp_kernel_op_101 * tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_265 = tmp_kernel_op_104 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_266 = tmp_kernel_op_260 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_261 * ( ( walberla::float64 )( tmp_kernel_op_25 ) ) +
                                                              tmp_kernel_op_262 * ( ( walberla::float64 )( tmp_kernel_op_45 ) ) +
                                                              tmp_kernel_op_263 * ( ( walberla::float64 )( tmp_kernel_op_65 ) ) +
                                                              tmp_kernel_op_264 * ( ( walberla::float64 )( tmp_kernel_op_85 ) ) +
                                                              tmp_kernel_op_265 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_267 = tmp_kernel_op_186 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_268 = tmp_kernel_op_187 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_269 = tmp_kernel_op_188 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_189 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_100 * tmp_kernel_op_190;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_120 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_273 =
                      tmp_kernel_op_122 * tmp_kernel_op_267 + tmp_kernel_op_131 * tmp_kernel_op_268 +
                      tmp_kernel_op_138 * tmp_kernel_op_269 + tmp_kernel_op_145 * tmp_kernel_op_270 +
                      tmp_kernel_op_152 * tmp_kernel_op_271 + tmp_kernel_op_159 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_193 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_194 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_195 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_277 = tmp_kernel_op_196 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_278 = tmp_kernel_op_100 * tmp_kernel_op_197;
                  const walberla::float64 tmp_kernel_op_279 = tmp_kernel_op_120 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_122 * tmp_kernel_op_274 + tmp_kernel_op_131 * tmp_kernel_op_275 +
                      tmp_kernel_op_138 * tmp_kernel_op_276 + tmp_kernel_op_145 * tmp_kernel_op_277 +
                      tmp_kernel_op_152 * tmp_kernel_op_278 + tmp_kernel_op_159 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_281 = tmp_kernel_op_20 * tmp_kernel_op_200;
                  const walberla::float64 tmp_kernel_op_282 = tmp_kernel_op_201 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_283 = tmp_kernel_op_202 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_284 = tmp_kernel_op_203 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_100 * tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_120 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_287 =
                      tmp_kernel_op_122 * tmp_kernel_op_281 + tmp_kernel_op_131 * tmp_kernel_op_282 +
                      tmp_kernel_op_138 * tmp_kernel_op_283 + tmp_kernel_op_145 * tmp_kernel_op_284 +
                      tmp_kernel_op_152 * tmp_kernel_op_285 + tmp_kernel_op_159 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_288 =
                      tmp_kernel_op_1 * tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_101 * tmp_kernel_op_83 * ( ( walberla::float64 )( tmp_kernel_op_86 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_106 ) ) +
                      tmp_kernel_op_23 * tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_26 ) ) +
                      tmp_kernel_op_43 * tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                      tmp_kernel_op_63 * tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_289 =
                      tmp_kernel_op_126 * tmp_kernel_op_267 + tmp_kernel_op_135 * tmp_kernel_op_268 +
                      tmp_kernel_op_142 * tmp_kernel_op_269 + tmp_kernel_op_149 * tmp_kernel_op_270 +
                      tmp_kernel_op_156 * tmp_kernel_op_271 + tmp_kernel_op_163 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_290 =
                      tmp_kernel_op_126 * tmp_kernel_op_274 + tmp_kernel_op_135 * tmp_kernel_op_275 +
                      tmp_kernel_op_142 * tmp_kernel_op_276 + tmp_kernel_op_149 * tmp_kernel_op_277 +
                      tmp_kernel_op_156 * tmp_kernel_op_278 + tmp_kernel_op_163 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_291 =
                      tmp_kernel_op_126 * tmp_kernel_op_281 + tmp_kernel_op_135 * tmp_kernel_op_282 +
                      tmp_kernel_op_142 * tmp_kernel_op_283 + tmp_kernel_op_149 * tmp_kernel_op_284 +
                      tmp_kernel_op_156 * tmp_kernel_op_285 + tmp_kernel_op_163 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_125 * tmp_kernel_op_267 + tmp_kernel_op_134 * tmp_kernel_op_268 +
                      tmp_kernel_op_141 * tmp_kernel_op_269 + tmp_kernel_op_148 * tmp_kernel_op_270 +
                      tmp_kernel_op_155 * tmp_kernel_op_271 + tmp_kernel_op_162 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_125 * tmp_kernel_op_274 + tmp_kernel_op_134 * tmp_kernel_op_275 +
                      tmp_kernel_op_141 * tmp_kernel_op_276 + tmp_kernel_op_148 * tmp_kernel_op_277 +
                      tmp_kernel_op_155 * tmp_kernel_op_278 + tmp_kernel_op_162 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_125 * tmp_kernel_op_281 + tmp_kernel_op_134 * tmp_kernel_op_282 +
                      tmp_kernel_op_141 * tmp_kernel_op_283 + tmp_kernel_op_148 * tmp_kernel_op_284 +
                      tmp_kernel_op_155 * tmp_kernel_op_285 + tmp_kernel_op_162 * tmp_kernel_op_286;
                  const int64_t           tmp_kernel_op_295 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_193 * tmp_kernel_op_267 + tmp_kernel_op_194 * tmp_kernel_op_268 +
                      tmp_kernel_op_195 * tmp_kernel_op_269 + tmp_kernel_op_196 * tmp_kernel_op_270 +
                      tmp_kernel_op_197 * tmp_kernel_op_271 + tmp_kernel_op_198 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_200 * tmp_kernel_op_267 + tmp_kernel_op_201 * tmp_kernel_op_268 +
                      tmp_kernel_op_202 * tmp_kernel_op_269 + tmp_kernel_op_203 * tmp_kernel_op_270 +
                      tmp_kernel_op_204 * tmp_kernel_op_271 + tmp_kernel_op_205 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_298 =
                      tmp_kernel_op_200 * tmp_kernel_op_274 + tmp_kernel_op_201 * tmp_kernel_op_275 +
                      tmp_kernel_op_202 * tmp_kernel_op_276 + tmp_kernel_op_203 * tmp_kernel_op_277 +
                      tmp_kernel_op_204 * tmp_kernel_op_278 + tmp_kernel_op_205 * tmp_kernel_op_279;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_101 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 *
                                ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                                  ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                            tmp_kernel_op_21 *
                                ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                  ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 *
                                ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                                  ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                            tmp_kernel_op_61 *
                                ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                                  ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 *
                                ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                                  ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_175 + src_dof_2 * tmp_kernel_op_182 + src_dof_3 * tmp_kernel_op_184 +
                      src_dof_4 * tmp_kernel_op_166 + src_dof_5 * tmp_kernel_op_167 + src_dof_6 * tmp_kernel_op_168 +
                      src_dof_7 * tmp_kernel_op_192 + src_dof_8 * tmp_kernel_op_199 + src_dof_9 * tmp_kernel_op_206;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_175 +
                      src_dof_1 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_103 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_103 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_222 + src_dof_3 * tmp_kernel_op_223 + src_dof_4 * tmp_kernel_op_219 +
                      src_dof_5 * tmp_kernel_op_220 + src_dof_6 * tmp_kernel_op_221 + src_dof_7 * tmp_kernel_op_224 +
                      src_dof_8 * tmp_kernel_op_225 + src_dof_9 * tmp_kernel_op_226;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_182 + src_dof_1 * tmp_kernel_op_222 +
                      src_dof_2 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_104 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_104 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_236 + src_dof_4 * tmp_kernel_op_233 + src_dof_5 * tmp_kernel_op_234 +
                      src_dof_6 * tmp_kernel_op_235 + src_dof_7 * tmp_kernel_op_237 + src_dof_8 * tmp_kernel_op_238 +
                      src_dof_9 * tmp_kernel_op_239;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_184 + src_dof_1 * tmp_kernel_op_223 + src_dof_2 * tmp_kernel_op_236 +
                      src_dof_3 * ( tmp_kernel_op_207 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_208 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_209 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_210 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_211 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_212 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) ) +
                      src_dof_4 * tmp_kernel_op_247 + src_dof_5 * tmp_kernel_op_248 + src_dof_6 * tmp_kernel_op_249 +
                      src_dof_7 * tmp_kernel_op_250 + src_dof_8 * tmp_kernel_op_251 + src_dof_9 * tmp_kernel_op_252;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_166 + src_dof_1 * tmp_kernel_op_219 + src_dof_2 * tmp_kernel_op_233 +
                      src_dof_3 * tmp_kernel_op_247 +
                      src_dof_4 * ( tmp_kernel_op_104 * tmp_kernel_op_258 + tmp_kernel_op_2 * tmp_kernel_op_253 +
                                    tmp_kernel_op_24 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_44 +
                                    tmp_kernel_op_256 * tmp_kernel_op_64 + tmp_kernel_op_257 * tmp_kernel_op_84 ) +
                      src_dof_5 * tmp_kernel_op_259 + src_dof_6 * tmp_kernel_op_266 + src_dof_7 * tmp_kernel_op_273 +
                      src_dof_8 * tmp_kernel_op_280 + src_dof_9 * tmp_kernel_op_287;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_167 + src_dof_1 * tmp_kernel_op_220 + src_dof_2 * tmp_kernel_op_234 +
                      src_dof_3 * tmp_kernel_op_248 + src_dof_4 * tmp_kernel_op_259 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_253 + tmp_kernel_op_103 * tmp_kernel_op_258 +
                                    tmp_kernel_op_23 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_43 +
                                    tmp_kernel_op_256 * tmp_kernel_op_63 + tmp_kernel_op_257 * tmp_kernel_op_83 ) +
                      src_dof_6 * tmp_kernel_op_288 + src_dof_7 * tmp_kernel_op_289 + src_dof_8 * tmp_kernel_op_290 +
                      src_dof_9 * tmp_kernel_op_291;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_168 + src_dof_1 * tmp_kernel_op_221 + src_dof_2 * tmp_kernel_op_235 +
                      src_dof_3 * tmp_kernel_op_249 + src_dof_4 * tmp_kernel_op_266 + src_dof_5 * tmp_kernel_op_288 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_260 + tmp_kernel_op_103 * tmp_kernel_op_265 +
                                    tmp_kernel_op_23 * tmp_kernel_op_261 + tmp_kernel_op_262 * tmp_kernel_op_43 +
                                    tmp_kernel_op_263 * tmp_kernel_op_63 + tmp_kernel_op_264 * tmp_kernel_op_83 ) +
                      src_dof_7 * tmp_kernel_op_292 + src_dof_8 * tmp_kernel_op_293 + src_dof_9 * tmp_kernel_op_294;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_192 + src_dof_1 * tmp_kernel_op_224 + src_dof_2 * tmp_kernel_op_237 +
                      src_dof_3 * tmp_kernel_op_250 + src_dof_4 * tmp_kernel_op_273 + src_dof_5 * tmp_kernel_op_289 +
                      src_dof_6 * tmp_kernel_op_292 +
                      src_dof_7 *
                          ( tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) *
                                                                           ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) *
                                                                           ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) *
                                                                          ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_199 + src_dof_1 * tmp_kernel_op_225 + src_dof_2 * tmp_kernel_op_238 +
                      src_dof_3 * tmp_kernel_op_251 + src_dof_4 * tmp_kernel_op_280 + src_dof_5 * tmp_kernel_op_290 +
                      src_dof_6 * tmp_kernel_op_293 + src_dof_7 * tmp_kernel_op_296 +
                      src_dof_8 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_298;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_206 + src_dof_1 * tmp_kernel_op_226 + src_dof_2 * tmp_kernel_op_239 +
                      src_dof_3 * tmp_kernel_op_252 + src_dof_4 * tmp_kernel_op_287 + src_dof_5 * tmp_kernel_op_291 +
                      src_dof_6 * tmp_kernel_op_294 + src_dof_7 * tmp_kernel_op_297 + src_dof_8 * tmp_kernel_op_298 +
                      src_dof_9 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_UP */
         const walberla::float64 tmp_coords_jac_0_BLUE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_6_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_3_0_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) +
             tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_3_1_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) +
             tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_3_2_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) +
             tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
         const walberla::float64 jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
         const walberla::float64 jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
         const walberla::float64 jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
         const walberla::float64 jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
         const walberla::float64 jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_31 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_37 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_37 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_31 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_51 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_57 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_57 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_51 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_71 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_77 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_77 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_71 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_91 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_97 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_97 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_91 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_111 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_117 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_117 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_111 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_122 + tmp_kernel_op_126;
                  const walberla::float64 tmp_kernel_op_128 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_128 + 1.0;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_20 * ( tmp_kernel_op_123 + tmp_kernel_op_124 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                           tmp_kernel_op_129 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_131 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_26 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_23 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_24 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_22 * 4.0;
                  const walberla::float64 tmp_kernel_op_135 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_25 ) );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_131 + tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_137 =
                      tmp_kernel_op_40 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                           tmp_kernel_op_136 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_138 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_43 * 2.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_44 * 2.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_42 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_45 ) );
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_138 + tmp_kernel_op_142;
                  const walberla::float64 tmp_kernel_op_144 =
                      tmp_kernel_op_60 * ( tmp_kernel_op_129 + tmp_kernel_op_139 + tmp_kernel_op_140 + tmp_kernel_op_141 +
                                           tmp_kernel_op_143 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_145 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_63 * 2.0;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_64 * 2.0;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_149 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_65 ) );
                  const walberla::float64 tmp_kernel_op_150 = tmp_kernel_op_145 + tmp_kernel_op_149;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_80 * ( tmp_kernel_op_129 + tmp_kernel_op_146 + tmp_kernel_op_147 + tmp_kernel_op_148 +
                                           tmp_kernel_op_150 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_152 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_86 ) );
                  const walberla::float64 tmp_kernel_op_153 = tmp_kernel_op_83 * 2.0;
                  const walberla::float64 tmp_kernel_op_154 = tmp_kernel_op_84 * 2.0;
                  const walberla::float64 tmp_kernel_op_155 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_156 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_85 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_152 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_158 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_129 + tmp_kernel_op_153 + tmp_kernel_op_154 + tmp_kernel_op_155 +
                                            tmp_kernel_op_157 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_159 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_106 ) );
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_103 * 2.0;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_104 * 2.0;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_163 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_159 + tmp_kernel_op_163;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_120 * ( tmp_kernel_op_129 + tmp_kernel_op_160 + tmp_kernel_op_161 + tmp_kernel_op_162 +
                                            tmp_kernel_op_164 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_122 * tmp_kernel_op_130 + tmp_kernel_op_131 * tmp_kernel_op_137 +
                      tmp_kernel_op_138 * tmp_kernel_op_144 + tmp_kernel_op_145 * tmp_kernel_op_151 +
                      tmp_kernel_op_152 * tmp_kernel_op_158 + tmp_kernel_op_159 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_126 * tmp_kernel_op_130 + tmp_kernel_op_135 * tmp_kernel_op_137 +
                      tmp_kernel_op_142 * tmp_kernel_op_144 + tmp_kernel_op_149 * tmp_kernel_op_151 +
                      tmp_kernel_op_156 * tmp_kernel_op_158 + tmp_kernel_op_163 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_125 * tmp_kernel_op_130 + tmp_kernel_op_134 * tmp_kernel_op_137 +
                      tmp_kernel_op_141 * tmp_kernel_op_144 + tmp_kernel_op_148 * tmp_kernel_op_151 +
                      tmp_kernel_op_155 * tmp_kernel_op_158 + tmp_kernel_op_162 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_169 = tmp_kernel_op_123 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_170 = tmp_kernel_op_132 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_139 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_146 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_153 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_160 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_175 =
                      tmp_kernel_op_130 * tmp_kernel_op_169 + tmp_kernel_op_137 * tmp_kernel_op_170 +
                      tmp_kernel_op_144 * tmp_kernel_op_171 + tmp_kernel_op_151 * tmp_kernel_op_172 +
                      tmp_kernel_op_158 * tmp_kernel_op_173 + tmp_kernel_op_165 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_124 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_177 = tmp_kernel_op_133 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_178 = tmp_kernel_op_140 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_179 = tmp_kernel_op_147 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_180 = tmp_kernel_op_154 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_181 = tmp_kernel_op_161 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_176 + tmp_kernel_op_137 * tmp_kernel_op_177 +
                      tmp_kernel_op_144 * tmp_kernel_op_178 + tmp_kernel_op_151 * tmp_kernel_op_179 +
                      tmp_kernel_op_158 * tmp_kernel_op_180 + tmp_kernel_op_165 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_184 =
                      tmp_kernel_op_130 * tmp_kernel_op_183 + tmp_kernel_op_137 * tmp_kernel_op_183 +
                      tmp_kernel_op_144 * tmp_kernel_op_183 + tmp_kernel_op_151 * tmp_kernel_op_183 +
                      tmp_kernel_op_158 * tmp_kernel_op_183 + tmp_kernel_op_165 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_185 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = -tmp_kernel_op_127 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_187 = -tmp_kernel_op_136 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_188 = -tmp_kernel_op_143 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_189 = -tmp_kernel_op_150 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_190 = -tmp_kernel_op_157 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_191 = -tmp_kernel_op_164 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_192 =
                      tmp_kernel_op_130 * tmp_kernel_op_186 + tmp_kernel_op_137 * tmp_kernel_op_187 +
                      tmp_kernel_op_144 * tmp_kernel_op_188 + tmp_kernel_op_151 * tmp_kernel_op_189 +
                      tmp_kernel_op_158 * tmp_kernel_op_190 + tmp_kernel_op_165 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_193 =
                      -tmp_kernel_op_122 - tmp_kernel_op_125 + tmp_kernel_op_2 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_194 =
                      -tmp_kernel_op_131 - tmp_kernel_op_134 + tmp_kernel_op_24 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_195 =
                      -tmp_kernel_op_138 - tmp_kernel_op_141 + tmp_kernel_op_44 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_196 =
                      -tmp_kernel_op_145 - tmp_kernel_op_148 + tmp_kernel_op_64 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_197 =
                      -tmp_kernel_op_152 - tmp_kernel_op_155 + tmp_kernel_op_84 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_198 =
                      tmp_kernel_op_104 * -4.0 - tmp_kernel_op_159 - tmp_kernel_op_162 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_199 =
                      tmp_kernel_op_130 * tmp_kernel_op_193 + tmp_kernel_op_137 * tmp_kernel_op_194 +
                      tmp_kernel_op_144 * tmp_kernel_op_195 + tmp_kernel_op_151 * tmp_kernel_op_196 +
                      tmp_kernel_op_158 * tmp_kernel_op_197 + tmp_kernel_op_165 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_200 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_125 - tmp_kernel_op_126 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_201 =
                      -tmp_kernel_op_134 - tmp_kernel_op_135 + tmp_kernel_op_23 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_202 =
                      -tmp_kernel_op_141 - tmp_kernel_op_142 + tmp_kernel_op_43 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_203 =
                      -tmp_kernel_op_148 - tmp_kernel_op_149 + tmp_kernel_op_63 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_204 =
                      -tmp_kernel_op_155 - tmp_kernel_op_156 + tmp_kernel_op_83 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_205 =
                      tmp_kernel_op_103 * -4.0 - tmp_kernel_op_162 - tmp_kernel_op_163 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_206 =
                      tmp_kernel_op_130 * tmp_kernel_op_200 + tmp_kernel_op_137 * tmp_kernel_op_201 +
                      tmp_kernel_op_144 * tmp_kernel_op_202 + tmp_kernel_op_151 * tmp_kernel_op_203 +
                      tmp_kernel_op_158 * tmp_kernel_op_204 + tmp_kernel_op_165 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_210 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_120 * 4.0;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_169 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_170 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_171 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_172 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_217 = tmp_kernel_op_100 * tmp_kernel_op_173;
                  const walberla::float64 tmp_kernel_op_218 = tmp_kernel_op_120 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_122 * tmp_kernel_op_213 + tmp_kernel_op_131 * tmp_kernel_op_214 +
                      tmp_kernel_op_138 * tmp_kernel_op_215 + tmp_kernel_op_145 * tmp_kernel_op_216 +
                      tmp_kernel_op_152 * tmp_kernel_op_217 + tmp_kernel_op_159 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_126 * tmp_kernel_op_213 + tmp_kernel_op_135 * tmp_kernel_op_214 +
                      tmp_kernel_op_142 * tmp_kernel_op_215 + tmp_kernel_op_149 * tmp_kernel_op_216 +
                      tmp_kernel_op_156 * tmp_kernel_op_217 + tmp_kernel_op_163 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_125 * tmp_kernel_op_213 + tmp_kernel_op_134 * tmp_kernel_op_214 +
                      tmp_kernel_op_141 * tmp_kernel_op_215 + tmp_kernel_op_148 * tmp_kernel_op_216 +
                      tmp_kernel_op_155 * tmp_kernel_op_217 + tmp_kernel_op_162 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_176 * tmp_kernel_op_213 + tmp_kernel_op_177 * tmp_kernel_op_214 +
                      tmp_kernel_op_178 * tmp_kernel_op_215 + tmp_kernel_op_179 * tmp_kernel_op_216 +
                      tmp_kernel_op_180 * tmp_kernel_op_217 + tmp_kernel_op_181 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_183 * tmp_kernel_op_213 + tmp_kernel_op_183 * tmp_kernel_op_214 +
                      tmp_kernel_op_183 * tmp_kernel_op_215 + tmp_kernel_op_183 * tmp_kernel_op_216 +
                      tmp_kernel_op_183 * tmp_kernel_op_217 + tmp_kernel_op_183 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_186 * tmp_kernel_op_213 + tmp_kernel_op_187 * tmp_kernel_op_214 +
                      tmp_kernel_op_188 * tmp_kernel_op_215 + tmp_kernel_op_189 * tmp_kernel_op_216 +
                      tmp_kernel_op_190 * tmp_kernel_op_217 + tmp_kernel_op_191 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_225 =
                      tmp_kernel_op_193 * tmp_kernel_op_213 + tmp_kernel_op_194 * tmp_kernel_op_214 +
                      tmp_kernel_op_195 * tmp_kernel_op_215 + tmp_kernel_op_196 * tmp_kernel_op_216 +
                      tmp_kernel_op_197 * tmp_kernel_op_217 + tmp_kernel_op_198 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_200 * tmp_kernel_op_213 + tmp_kernel_op_201 * tmp_kernel_op_214 +
                      tmp_kernel_op_202 * tmp_kernel_op_215 + tmp_kernel_op_203 * tmp_kernel_op_216 +
                      tmp_kernel_op_204 * tmp_kernel_op_217 + tmp_kernel_op_205 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_176 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_177 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_178 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_230 = tmp_kernel_op_179 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_100 * tmp_kernel_op_180;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_120 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_233 =
                      tmp_kernel_op_122 * tmp_kernel_op_227 + tmp_kernel_op_131 * tmp_kernel_op_228 +
                      tmp_kernel_op_138 * tmp_kernel_op_229 + tmp_kernel_op_145 * tmp_kernel_op_230 +
                      tmp_kernel_op_152 * tmp_kernel_op_231 + tmp_kernel_op_159 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_234 =
                      tmp_kernel_op_126 * tmp_kernel_op_227 + tmp_kernel_op_135 * tmp_kernel_op_228 +
                      tmp_kernel_op_142 * tmp_kernel_op_229 + tmp_kernel_op_149 * tmp_kernel_op_230 +
                      tmp_kernel_op_156 * tmp_kernel_op_231 + tmp_kernel_op_163 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_235 =
                      tmp_kernel_op_125 * tmp_kernel_op_227 + tmp_kernel_op_134 * tmp_kernel_op_228 +
                      tmp_kernel_op_141 * tmp_kernel_op_229 + tmp_kernel_op_148 * tmp_kernel_op_230 +
                      tmp_kernel_op_155 * tmp_kernel_op_231 + tmp_kernel_op_162 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_236 =
                      tmp_kernel_op_183 * tmp_kernel_op_227 + tmp_kernel_op_183 * tmp_kernel_op_228 +
                      tmp_kernel_op_183 * tmp_kernel_op_229 + tmp_kernel_op_183 * tmp_kernel_op_230 +
                      tmp_kernel_op_183 * tmp_kernel_op_231 + tmp_kernel_op_183 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_237 =
                      tmp_kernel_op_186 * tmp_kernel_op_227 + tmp_kernel_op_187 * tmp_kernel_op_228 +
                      tmp_kernel_op_188 * tmp_kernel_op_229 + tmp_kernel_op_189 * tmp_kernel_op_230 +
                      tmp_kernel_op_190 * tmp_kernel_op_231 + tmp_kernel_op_191 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_238 =
                      tmp_kernel_op_193 * tmp_kernel_op_227 + tmp_kernel_op_194 * tmp_kernel_op_228 +
                      tmp_kernel_op_195 * tmp_kernel_op_229 + tmp_kernel_op_196 * tmp_kernel_op_230 +
                      tmp_kernel_op_197 * tmp_kernel_op_231 + tmp_kernel_op_198 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_200 * tmp_kernel_op_227 + tmp_kernel_op_201 * tmp_kernel_op_228 +
                      tmp_kernel_op_202 * tmp_kernel_op_229 + tmp_kernel_op_203 * tmp_kernel_op_230 +
                      tmp_kernel_op_204 * tmp_kernel_op_231 + tmp_kernel_op_205 * tmp_kernel_op_232;
                  const int64_t           tmp_kernel_op_240 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_241 = tmp_kernel_op_183 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_242 = tmp_kernel_op_183 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_243 = tmp_kernel_op_183 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_244 = tmp_kernel_op_183 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_245 = tmp_kernel_op_100 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_246 = tmp_kernel_op_120 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_122 * tmp_kernel_op_241 + tmp_kernel_op_131 * tmp_kernel_op_242 +
                      tmp_kernel_op_138 * tmp_kernel_op_243 + tmp_kernel_op_145 * tmp_kernel_op_244 +
                      tmp_kernel_op_152 * tmp_kernel_op_245 + tmp_kernel_op_159 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_248 =
                      tmp_kernel_op_126 * tmp_kernel_op_241 + tmp_kernel_op_135 * tmp_kernel_op_242 +
                      tmp_kernel_op_142 * tmp_kernel_op_243 + tmp_kernel_op_149 * tmp_kernel_op_244 +
                      tmp_kernel_op_156 * tmp_kernel_op_245 + tmp_kernel_op_163 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_249 =
                      tmp_kernel_op_125 * tmp_kernel_op_241 + tmp_kernel_op_134 * tmp_kernel_op_242 +
                      tmp_kernel_op_141 * tmp_kernel_op_243 + tmp_kernel_op_148 * tmp_kernel_op_244 +
                      tmp_kernel_op_155 * tmp_kernel_op_245 + tmp_kernel_op_162 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_250 =
                      tmp_kernel_op_186 * tmp_kernel_op_241 + tmp_kernel_op_187 * tmp_kernel_op_242 +
                      tmp_kernel_op_188 * tmp_kernel_op_243 + tmp_kernel_op_189 * tmp_kernel_op_244 +
                      tmp_kernel_op_190 * tmp_kernel_op_245 + tmp_kernel_op_191 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_251 =
                      tmp_kernel_op_193 * tmp_kernel_op_241 + tmp_kernel_op_194 * tmp_kernel_op_242 +
                      tmp_kernel_op_195 * tmp_kernel_op_243 + tmp_kernel_op_196 * tmp_kernel_op_244 +
                      tmp_kernel_op_197 * tmp_kernel_op_245 + tmp_kernel_op_198 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_252 =
                      tmp_kernel_op_200 * tmp_kernel_op_241 + tmp_kernel_op_201 * tmp_kernel_op_242 +
                      tmp_kernel_op_202 * tmp_kernel_op_243 + tmp_kernel_op_203 * tmp_kernel_op_244 +
                      tmp_kernel_op_204 * tmp_kernel_op_245 + tmp_kernel_op_205 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_259 =
                      tmp_kernel_op_0 * tmp_kernel_op_253 + tmp_kernel_op_102 * tmp_kernel_op_258 +
                      tmp_kernel_op_22 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_42 +
                      tmp_kernel_op_256 * tmp_kernel_op_62 + tmp_kernel_op_257 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_2 * tmp_kernel_op_21;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_24 * tmp_kernel_op_41;
                  const walberla::float64 tmp_kernel_op_262 = tmp_kernel_op_44 * tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_263 = tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_264 = tmp_kernel_op_101 * tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_265 = tmp_kernel_op_104 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_266 = tmp_kernel_op_260 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_261 * ( ( walberla::float64 )( tmp_kernel_op_25 ) ) +
                                                              tmp_kernel_op_262 * ( ( walberla::float64 )( tmp_kernel_op_45 ) ) +
                                                              tmp_kernel_op_263 * ( ( walberla::float64 )( tmp_kernel_op_65 ) ) +
                                                              tmp_kernel_op_264 * ( ( walberla::float64 )( tmp_kernel_op_85 ) ) +
                                                              tmp_kernel_op_265 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_267 = tmp_kernel_op_186 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_268 = tmp_kernel_op_187 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_269 = tmp_kernel_op_188 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_189 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_100 * tmp_kernel_op_190;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_120 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_273 =
                      tmp_kernel_op_122 * tmp_kernel_op_267 + tmp_kernel_op_131 * tmp_kernel_op_268 +
                      tmp_kernel_op_138 * tmp_kernel_op_269 + tmp_kernel_op_145 * tmp_kernel_op_270 +
                      tmp_kernel_op_152 * tmp_kernel_op_271 + tmp_kernel_op_159 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_193 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_194 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_195 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_277 = tmp_kernel_op_196 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_278 = tmp_kernel_op_100 * tmp_kernel_op_197;
                  const walberla::float64 tmp_kernel_op_279 = tmp_kernel_op_120 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_122 * tmp_kernel_op_274 + tmp_kernel_op_131 * tmp_kernel_op_275 +
                      tmp_kernel_op_138 * tmp_kernel_op_276 + tmp_kernel_op_145 * tmp_kernel_op_277 +
                      tmp_kernel_op_152 * tmp_kernel_op_278 + tmp_kernel_op_159 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_281 = tmp_kernel_op_20 * tmp_kernel_op_200;
                  const walberla::float64 tmp_kernel_op_282 = tmp_kernel_op_201 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_283 = tmp_kernel_op_202 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_284 = tmp_kernel_op_203 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_100 * tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_120 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_287 =
                      tmp_kernel_op_122 * tmp_kernel_op_281 + tmp_kernel_op_131 * tmp_kernel_op_282 +
                      tmp_kernel_op_138 * tmp_kernel_op_283 + tmp_kernel_op_145 * tmp_kernel_op_284 +
                      tmp_kernel_op_152 * tmp_kernel_op_285 + tmp_kernel_op_159 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_288 =
                      tmp_kernel_op_1 * tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_101 * tmp_kernel_op_83 * ( ( walberla::float64 )( tmp_kernel_op_86 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_106 ) ) +
                      tmp_kernel_op_23 * tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_26 ) ) +
                      tmp_kernel_op_43 * tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                      tmp_kernel_op_63 * tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_289 =
                      tmp_kernel_op_126 * tmp_kernel_op_267 + tmp_kernel_op_135 * tmp_kernel_op_268 +
                      tmp_kernel_op_142 * tmp_kernel_op_269 + tmp_kernel_op_149 * tmp_kernel_op_270 +
                      tmp_kernel_op_156 * tmp_kernel_op_271 + tmp_kernel_op_163 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_290 =
                      tmp_kernel_op_126 * tmp_kernel_op_274 + tmp_kernel_op_135 * tmp_kernel_op_275 +
                      tmp_kernel_op_142 * tmp_kernel_op_276 + tmp_kernel_op_149 * tmp_kernel_op_277 +
                      tmp_kernel_op_156 * tmp_kernel_op_278 + tmp_kernel_op_163 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_291 =
                      tmp_kernel_op_126 * tmp_kernel_op_281 + tmp_kernel_op_135 * tmp_kernel_op_282 +
                      tmp_kernel_op_142 * tmp_kernel_op_283 + tmp_kernel_op_149 * tmp_kernel_op_284 +
                      tmp_kernel_op_156 * tmp_kernel_op_285 + tmp_kernel_op_163 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_125 * tmp_kernel_op_267 + tmp_kernel_op_134 * tmp_kernel_op_268 +
                      tmp_kernel_op_141 * tmp_kernel_op_269 + tmp_kernel_op_148 * tmp_kernel_op_270 +
                      tmp_kernel_op_155 * tmp_kernel_op_271 + tmp_kernel_op_162 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_125 * tmp_kernel_op_274 + tmp_kernel_op_134 * tmp_kernel_op_275 +
                      tmp_kernel_op_141 * tmp_kernel_op_276 + tmp_kernel_op_148 * tmp_kernel_op_277 +
                      tmp_kernel_op_155 * tmp_kernel_op_278 + tmp_kernel_op_162 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_125 * tmp_kernel_op_281 + tmp_kernel_op_134 * tmp_kernel_op_282 +
                      tmp_kernel_op_141 * tmp_kernel_op_283 + tmp_kernel_op_148 * tmp_kernel_op_284 +
                      tmp_kernel_op_155 * tmp_kernel_op_285 + tmp_kernel_op_162 * tmp_kernel_op_286;
                  const int64_t           tmp_kernel_op_295 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_193 * tmp_kernel_op_267 + tmp_kernel_op_194 * tmp_kernel_op_268 +
                      tmp_kernel_op_195 * tmp_kernel_op_269 + tmp_kernel_op_196 * tmp_kernel_op_270 +
                      tmp_kernel_op_197 * tmp_kernel_op_271 + tmp_kernel_op_198 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_200 * tmp_kernel_op_267 + tmp_kernel_op_201 * tmp_kernel_op_268 +
                      tmp_kernel_op_202 * tmp_kernel_op_269 + tmp_kernel_op_203 * tmp_kernel_op_270 +
                      tmp_kernel_op_204 * tmp_kernel_op_271 + tmp_kernel_op_205 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_298 =
                      tmp_kernel_op_200 * tmp_kernel_op_274 + tmp_kernel_op_201 * tmp_kernel_op_275 +
                      tmp_kernel_op_202 * tmp_kernel_op_276 + tmp_kernel_op_203 * tmp_kernel_op_277 +
                      tmp_kernel_op_204 * tmp_kernel_op_278 + tmp_kernel_op_205 * tmp_kernel_op_279;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_101 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 *
                                ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                                  ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                            tmp_kernel_op_21 *
                                ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                  ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 *
                                ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                                  ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                            tmp_kernel_op_61 *
                                ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                                  ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 *
                                ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                                  ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_175 + src_dof_2 * tmp_kernel_op_182 + src_dof_3 * tmp_kernel_op_184 +
                      src_dof_4 * tmp_kernel_op_166 + src_dof_5 * tmp_kernel_op_167 + src_dof_6 * tmp_kernel_op_168 +
                      src_dof_7 * tmp_kernel_op_192 + src_dof_8 * tmp_kernel_op_199 + src_dof_9 * tmp_kernel_op_206;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_175 +
                      src_dof_1 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_103 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_103 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_222 + src_dof_3 * tmp_kernel_op_223 + src_dof_4 * tmp_kernel_op_219 +
                      src_dof_5 * tmp_kernel_op_220 + src_dof_6 * tmp_kernel_op_221 + src_dof_7 * tmp_kernel_op_224 +
                      src_dof_8 * tmp_kernel_op_225 + src_dof_9 * tmp_kernel_op_226;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_182 + src_dof_1 * tmp_kernel_op_222 +
                      src_dof_2 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_104 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_104 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_236 + src_dof_4 * tmp_kernel_op_233 + src_dof_5 * tmp_kernel_op_234 +
                      src_dof_6 * tmp_kernel_op_235 + src_dof_7 * tmp_kernel_op_237 + src_dof_8 * tmp_kernel_op_238 +
                      src_dof_9 * tmp_kernel_op_239;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_184 + src_dof_1 * tmp_kernel_op_223 + src_dof_2 * tmp_kernel_op_236 +
                      src_dof_3 * ( tmp_kernel_op_207 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_208 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_209 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_210 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_211 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_212 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) ) +
                      src_dof_4 * tmp_kernel_op_247 + src_dof_5 * tmp_kernel_op_248 + src_dof_6 * tmp_kernel_op_249 +
                      src_dof_7 * tmp_kernel_op_250 + src_dof_8 * tmp_kernel_op_251 + src_dof_9 * tmp_kernel_op_252;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_166 + src_dof_1 * tmp_kernel_op_219 + src_dof_2 * tmp_kernel_op_233 +
                      src_dof_3 * tmp_kernel_op_247 +
                      src_dof_4 * ( tmp_kernel_op_104 * tmp_kernel_op_258 + tmp_kernel_op_2 * tmp_kernel_op_253 +
                                    tmp_kernel_op_24 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_44 +
                                    tmp_kernel_op_256 * tmp_kernel_op_64 + tmp_kernel_op_257 * tmp_kernel_op_84 ) +
                      src_dof_5 * tmp_kernel_op_259 + src_dof_6 * tmp_kernel_op_266 + src_dof_7 * tmp_kernel_op_273 +
                      src_dof_8 * tmp_kernel_op_280 + src_dof_9 * tmp_kernel_op_287;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_167 + src_dof_1 * tmp_kernel_op_220 + src_dof_2 * tmp_kernel_op_234 +
                      src_dof_3 * tmp_kernel_op_248 + src_dof_4 * tmp_kernel_op_259 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_253 + tmp_kernel_op_103 * tmp_kernel_op_258 +
                                    tmp_kernel_op_23 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_43 +
                                    tmp_kernel_op_256 * tmp_kernel_op_63 + tmp_kernel_op_257 * tmp_kernel_op_83 ) +
                      src_dof_6 * tmp_kernel_op_288 + src_dof_7 * tmp_kernel_op_289 + src_dof_8 * tmp_kernel_op_290 +
                      src_dof_9 * tmp_kernel_op_291;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_168 + src_dof_1 * tmp_kernel_op_221 + src_dof_2 * tmp_kernel_op_235 +
                      src_dof_3 * tmp_kernel_op_249 + src_dof_4 * tmp_kernel_op_266 + src_dof_5 * tmp_kernel_op_288 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_260 + tmp_kernel_op_103 * tmp_kernel_op_265 +
                                    tmp_kernel_op_23 * tmp_kernel_op_261 + tmp_kernel_op_262 * tmp_kernel_op_43 +
                                    tmp_kernel_op_263 * tmp_kernel_op_63 + tmp_kernel_op_264 * tmp_kernel_op_83 ) +
                      src_dof_7 * tmp_kernel_op_292 + src_dof_8 * tmp_kernel_op_293 + src_dof_9 * tmp_kernel_op_294;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_192 + src_dof_1 * tmp_kernel_op_224 + src_dof_2 * tmp_kernel_op_237 +
                      src_dof_3 * tmp_kernel_op_250 + src_dof_4 * tmp_kernel_op_273 + src_dof_5 * tmp_kernel_op_289 +
                      src_dof_6 * tmp_kernel_op_292 +
                      src_dof_7 *
                          ( tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) *
                                                                           ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) *
                                                                           ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) *
                                                                          ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_199 + src_dof_1 * tmp_kernel_op_225 + src_dof_2 * tmp_kernel_op_238 +
                      src_dof_3 * tmp_kernel_op_251 + src_dof_4 * tmp_kernel_op_280 + src_dof_5 * tmp_kernel_op_290 +
                      src_dof_6 * tmp_kernel_op_293 + src_dof_7 * tmp_kernel_op_296 +
                      src_dof_8 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_298;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_206 + src_dof_1 * tmp_kernel_op_226 + src_dof_2 * tmp_kernel_op_239 +
                      src_dof_3 * tmp_kernel_op_252 + src_dof_4 * tmp_kernel_op_287 + src_dof_5 * tmp_kernel_op_291 +
                      src_dof_6 * tmp_kernel_op_294 + src_dof_7 * tmp_kernel_op_297 + src_dof_8 * tmp_kernel_op_298 +
                      src_dof_9 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_2 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::
    apply_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_1_macro_3D(
        walberla::float64* RESTRICT _data_dstEdge,
        walberla::float64* RESTRICT _data_dstVertex,
        walberla::float64* RESTRICT _data_srcEdge,
        walberla::float64* RESTRICT _data_srcVertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_122 + tmp_kernel_op_126;
                  const walberla::float64 tmp_kernel_op_128 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_128 + 1.0;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_20 * ( tmp_kernel_op_123 + tmp_kernel_op_124 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                           tmp_kernel_op_129 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_131 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_26 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_23 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_24 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_22 * 4.0;
                  const walberla::float64 tmp_kernel_op_135 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_25 ) );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_131 + tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_137 =
                      tmp_kernel_op_40 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                           tmp_kernel_op_136 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_138 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_43 * 2.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_44 * 2.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_42 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_45 ) );
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_138 + tmp_kernel_op_142;
                  const walberla::float64 tmp_kernel_op_144 =
                      tmp_kernel_op_60 * ( tmp_kernel_op_129 + tmp_kernel_op_139 + tmp_kernel_op_140 + tmp_kernel_op_141 +
                                           tmp_kernel_op_143 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_145 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_63 * 2.0;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_64 * 2.0;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_149 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_65 ) );
                  const walberla::float64 tmp_kernel_op_150 = tmp_kernel_op_145 + tmp_kernel_op_149;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_80 * ( tmp_kernel_op_129 + tmp_kernel_op_146 + tmp_kernel_op_147 + tmp_kernel_op_148 +
                                           tmp_kernel_op_150 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_152 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_86 ) );
                  const walberla::float64 tmp_kernel_op_153 = tmp_kernel_op_83 * 2.0;
                  const walberla::float64 tmp_kernel_op_154 = tmp_kernel_op_84 * 2.0;
                  const walberla::float64 tmp_kernel_op_155 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_156 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_85 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_152 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_158 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_129 + tmp_kernel_op_153 + tmp_kernel_op_154 + tmp_kernel_op_155 +
                                            tmp_kernel_op_157 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_159 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_106 ) );
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_103 * 2.0;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_104 * 2.0;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_163 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_159 + tmp_kernel_op_163;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_120 * ( tmp_kernel_op_129 + tmp_kernel_op_160 + tmp_kernel_op_161 + tmp_kernel_op_162 +
                                            tmp_kernel_op_164 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_122 * tmp_kernel_op_130 + tmp_kernel_op_131 * tmp_kernel_op_137 +
                      tmp_kernel_op_138 * tmp_kernel_op_144 + tmp_kernel_op_145 * tmp_kernel_op_151 +
                      tmp_kernel_op_152 * tmp_kernel_op_158 + tmp_kernel_op_159 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_126 * tmp_kernel_op_130 + tmp_kernel_op_135 * tmp_kernel_op_137 +
                      tmp_kernel_op_142 * tmp_kernel_op_144 + tmp_kernel_op_149 * tmp_kernel_op_151 +
                      tmp_kernel_op_156 * tmp_kernel_op_158 + tmp_kernel_op_163 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_125 * tmp_kernel_op_130 + tmp_kernel_op_134 * tmp_kernel_op_137 +
                      tmp_kernel_op_141 * tmp_kernel_op_144 + tmp_kernel_op_148 * tmp_kernel_op_151 +
                      tmp_kernel_op_155 * tmp_kernel_op_158 + tmp_kernel_op_162 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_169 = tmp_kernel_op_123 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_170 = tmp_kernel_op_132 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_139 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_146 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_153 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_160 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_175 =
                      tmp_kernel_op_130 * tmp_kernel_op_169 + tmp_kernel_op_137 * tmp_kernel_op_170 +
                      tmp_kernel_op_144 * tmp_kernel_op_171 + tmp_kernel_op_151 * tmp_kernel_op_172 +
                      tmp_kernel_op_158 * tmp_kernel_op_173 + tmp_kernel_op_165 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_124 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_177 = tmp_kernel_op_133 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_178 = tmp_kernel_op_140 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_179 = tmp_kernel_op_147 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_180 = tmp_kernel_op_154 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_181 = tmp_kernel_op_161 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_176 + tmp_kernel_op_137 * tmp_kernel_op_177 +
                      tmp_kernel_op_144 * tmp_kernel_op_178 + tmp_kernel_op_151 * tmp_kernel_op_179 +
                      tmp_kernel_op_158 * tmp_kernel_op_180 + tmp_kernel_op_165 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_184 =
                      tmp_kernel_op_130 * tmp_kernel_op_183 + tmp_kernel_op_137 * tmp_kernel_op_183 +
                      tmp_kernel_op_144 * tmp_kernel_op_183 + tmp_kernel_op_151 * tmp_kernel_op_183 +
                      tmp_kernel_op_158 * tmp_kernel_op_183 + tmp_kernel_op_165 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_185 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = -tmp_kernel_op_127 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_187 = -tmp_kernel_op_136 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_188 = -tmp_kernel_op_143 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_189 = -tmp_kernel_op_150 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_190 = -tmp_kernel_op_157 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_191 = -tmp_kernel_op_164 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_192 =
                      tmp_kernel_op_130 * tmp_kernel_op_186 + tmp_kernel_op_137 * tmp_kernel_op_187 +
                      tmp_kernel_op_144 * tmp_kernel_op_188 + tmp_kernel_op_151 * tmp_kernel_op_189 +
                      tmp_kernel_op_158 * tmp_kernel_op_190 + tmp_kernel_op_165 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_193 =
                      -tmp_kernel_op_122 - tmp_kernel_op_125 + tmp_kernel_op_2 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_194 =
                      -tmp_kernel_op_131 - tmp_kernel_op_134 + tmp_kernel_op_24 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_195 =
                      -tmp_kernel_op_138 - tmp_kernel_op_141 + tmp_kernel_op_44 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_196 =
                      -tmp_kernel_op_145 - tmp_kernel_op_148 + tmp_kernel_op_64 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_197 =
                      -tmp_kernel_op_152 - tmp_kernel_op_155 + tmp_kernel_op_84 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_198 =
                      tmp_kernel_op_104 * -4.0 - tmp_kernel_op_159 - tmp_kernel_op_162 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_199 =
                      tmp_kernel_op_130 * tmp_kernel_op_193 + tmp_kernel_op_137 * tmp_kernel_op_194 +
                      tmp_kernel_op_144 * tmp_kernel_op_195 + tmp_kernel_op_151 * tmp_kernel_op_196 +
                      tmp_kernel_op_158 * tmp_kernel_op_197 + tmp_kernel_op_165 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_200 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_125 - tmp_kernel_op_126 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_201 =
                      -tmp_kernel_op_134 - tmp_kernel_op_135 + tmp_kernel_op_23 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_202 =
                      -tmp_kernel_op_141 - tmp_kernel_op_142 + tmp_kernel_op_43 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_203 =
                      -tmp_kernel_op_148 - tmp_kernel_op_149 + tmp_kernel_op_63 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_204 =
                      -tmp_kernel_op_155 - tmp_kernel_op_156 + tmp_kernel_op_83 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_205 =
                      tmp_kernel_op_103 * -4.0 - tmp_kernel_op_162 - tmp_kernel_op_163 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_206 =
                      tmp_kernel_op_130 * tmp_kernel_op_200 + tmp_kernel_op_137 * tmp_kernel_op_201 +
                      tmp_kernel_op_144 * tmp_kernel_op_202 + tmp_kernel_op_151 * tmp_kernel_op_203 +
                      tmp_kernel_op_158 * tmp_kernel_op_204 + tmp_kernel_op_165 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_210 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_120 * 4.0;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_169 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_170 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_171 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_172 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_217 = tmp_kernel_op_100 * tmp_kernel_op_173;
                  const walberla::float64 tmp_kernel_op_218 = tmp_kernel_op_120 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_122 * tmp_kernel_op_213 + tmp_kernel_op_131 * tmp_kernel_op_214 +
                      tmp_kernel_op_138 * tmp_kernel_op_215 + tmp_kernel_op_145 * tmp_kernel_op_216 +
                      tmp_kernel_op_152 * tmp_kernel_op_217 + tmp_kernel_op_159 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_126 * tmp_kernel_op_213 + tmp_kernel_op_135 * tmp_kernel_op_214 +
                      tmp_kernel_op_142 * tmp_kernel_op_215 + tmp_kernel_op_149 * tmp_kernel_op_216 +
                      tmp_kernel_op_156 * tmp_kernel_op_217 + tmp_kernel_op_163 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_125 * tmp_kernel_op_213 + tmp_kernel_op_134 * tmp_kernel_op_214 +
                      tmp_kernel_op_141 * tmp_kernel_op_215 + tmp_kernel_op_148 * tmp_kernel_op_216 +
                      tmp_kernel_op_155 * tmp_kernel_op_217 + tmp_kernel_op_162 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_176 * tmp_kernel_op_213 + tmp_kernel_op_177 * tmp_kernel_op_214 +
                      tmp_kernel_op_178 * tmp_kernel_op_215 + tmp_kernel_op_179 * tmp_kernel_op_216 +
                      tmp_kernel_op_180 * tmp_kernel_op_217 + tmp_kernel_op_181 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_183 * tmp_kernel_op_213 + tmp_kernel_op_183 * tmp_kernel_op_214 +
                      tmp_kernel_op_183 * tmp_kernel_op_215 + tmp_kernel_op_183 * tmp_kernel_op_216 +
                      tmp_kernel_op_183 * tmp_kernel_op_217 + tmp_kernel_op_183 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_186 * tmp_kernel_op_213 + tmp_kernel_op_187 * tmp_kernel_op_214 +
                      tmp_kernel_op_188 * tmp_kernel_op_215 + tmp_kernel_op_189 * tmp_kernel_op_216 +
                      tmp_kernel_op_190 * tmp_kernel_op_217 + tmp_kernel_op_191 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_225 =
                      tmp_kernel_op_193 * tmp_kernel_op_213 + tmp_kernel_op_194 * tmp_kernel_op_214 +
                      tmp_kernel_op_195 * tmp_kernel_op_215 + tmp_kernel_op_196 * tmp_kernel_op_216 +
                      tmp_kernel_op_197 * tmp_kernel_op_217 + tmp_kernel_op_198 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_200 * tmp_kernel_op_213 + tmp_kernel_op_201 * tmp_kernel_op_214 +
                      tmp_kernel_op_202 * tmp_kernel_op_215 + tmp_kernel_op_203 * tmp_kernel_op_216 +
                      tmp_kernel_op_204 * tmp_kernel_op_217 + tmp_kernel_op_205 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_176 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_177 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_178 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_230 = tmp_kernel_op_179 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_100 * tmp_kernel_op_180;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_120 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_233 =
                      tmp_kernel_op_122 * tmp_kernel_op_227 + tmp_kernel_op_131 * tmp_kernel_op_228 +
                      tmp_kernel_op_138 * tmp_kernel_op_229 + tmp_kernel_op_145 * tmp_kernel_op_230 +
                      tmp_kernel_op_152 * tmp_kernel_op_231 + tmp_kernel_op_159 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_234 =
                      tmp_kernel_op_126 * tmp_kernel_op_227 + tmp_kernel_op_135 * tmp_kernel_op_228 +
                      tmp_kernel_op_142 * tmp_kernel_op_229 + tmp_kernel_op_149 * tmp_kernel_op_230 +
                      tmp_kernel_op_156 * tmp_kernel_op_231 + tmp_kernel_op_163 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_235 =
                      tmp_kernel_op_125 * tmp_kernel_op_227 + tmp_kernel_op_134 * tmp_kernel_op_228 +
                      tmp_kernel_op_141 * tmp_kernel_op_229 + tmp_kernel_op_148 * tmp_kernel_op_230 +
                      tmp_kernel_op_155 * tmp_kernel_op_231 + tmp_kernel_op_162 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_236 =
                      tmp_kernel_op_183 * tmp_kernel_op_227 + tmp_kernel_op_183 * tmp_kernel_op_228 +
                      tmp_kernel_op_183 * tmp_kernel_op_229 + tmp_kernel_op_183 * tmp_kernel_op_230 +
                      tmp_kernel_op_183 * tmp_kernel_op_231 + tmp_kernel_op_183 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_237 =
                      tmp_kernel_op_186 * tmp_kernel_op_227 + tmp_kernel_op_187 * tmp_kernel_op_228 +
                      tmp_kernel_op_188 * tmp_kernel_op_229 + tmp_kernel_op_189 * tmp_kernel_op_230 +
                      tmp_kernel_op_190 * tmp_kernel_op_231 + tmp_kernel_op_191 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_238 =
                      tmp_kernel_op_193 * tmp_kernel_op_227 + tmp_kernel_op_194 * tmp_kernel_op_228 +
                      tmp_kernel_op_195 * tmp_kernel_op_229 + tmp_kernel_op_196 * tmp_kernel_op_230 +
                      tmp_kernel_op_197 * tmp_kernel_op_231 + tmp_kernel_op_198 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_200 * tmp_kernel_op_227 + tmp_kernel_op_201 * tmp_kernel_op_228 +
                      tmp_kernel_op_202 * tmp_kernel_op_229 + tmp_kernel_op_203 * tmp_kernel_op_230 +
                      tmp_kernel_op_204 * tmp_kernel_op_231 + tmp_kernel_op_205 * tmp_kernel_op_232;
                  const int64_t           tmp_kernel_op_240 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_241 = tmp_kernel_op_183 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_242 = tmp_kernel_op_183 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_243 = tmp_kernel_op_183 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_244 = tmp_kernel_op_183 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_245 = tmp_kernel_op_100 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_246 = tmp_kernel_op_120 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_122 * tmp_kernel_op_241 + tmp_kernel_op_131 * tmp_kernel_op_242 +
                      tmp_kernel_op_138 * tmp_kernel_op_243 + tmp_kernel_op_145 * tmp_kernel_op_244 +
                      tmp_kernel_op_152 * tmp_kernel_op_245 + tmp_kernel_op_159 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_248 =
                      tmp_kernel_op_126 * tmp_kernel_op_241 + tmp_kernel_op_135 * tmp_kernel_op_242 +
                      tmp_kernel_op_142 * tmp_kernel_op_243 + tmp_kernel_op_149 * tmp_kernel_op_244 +
                      tmp_kernel_op_156 * tmp_kernel_op_245 + tmp_kernel_op_163 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_249 =
                      tmp_kernel_op_125 * tmp_kernel_op_241 + tmp_kernel_op_134 * tmp_kernel_op_242 +
                      tmp_kernel_op_141 * tmp_kernel_op_243 + tmp_kernel_op_148 * tmp_kernel_op_244 +
                      tmp_kernel_op_155 * tmp_kernel_op_245 + tmp_kernel_op_162 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_250 =
                      tmp_kernel_op_186 * tmp_kernel_op_241 + tmp_kernel_op_187 * tmp_kernel_op_242 +
                      tmp_kernel_op_188 * tmp_kernel_op_243 + tmp_kernel_op_189 * tmp_kernel_op_244 +
                      tmp_kernel_op_190 * tmp_kernel_op_245 + tmp_kernel_op_191 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_251 =
                      tmp_kernel_op_193 * tmp_kernel_op_241 + tmp_kernel_op_194 * tmp_kernel_op_242 +
                      tmp_kernel_op_195 * tmp_kernel_op_243 + tmp_kernel_op_196 * tmp_kernel_op_244 +
                      tmp_kernel_op_197 * tmp_kernel_op_245 + tmp_kernel_op_198 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_252 =
                      tmp_kernel_op_200 * tmp_kernel_op_241 + tmp_kernel_op_201 * tmp_kernel_op_242 +
                      tmp_kernel_op_202 * tmp_kernel_op_243 + tmp_kernel_op_203 * tmp_kernel_op_244 +
                      tmp_kernel_op_204 * tmp_kernel_op_245 + tmp_kernel_op_205 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_259 =
                      tmp_kernel_op_0 * tmp_kernel_op_253 + tmp_kernel_op_102 * tmp_kernel_op_258 +
                      tmp_kernel_op_22 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_42 +
                      tmp_kernel_op_256 * tmp_kernel_op_62 + tmp_kernel_op_257 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_2 * tmp_kernel_op_21;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_24 * tmp_kernel_op_41;
                  const walberla::float64 tmp_kernel_op_262 = tmp_kernel_op_44 * tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_263 = tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_264 = tmp_kernel_op_101 * tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_265 = tmp_kernel_op_104 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_266 = tmp_kernel_op_260 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_261 * ( ( walberla::float64 )( tmp_kernel_op_25 ) ) +
                                                              tmp_kernel_op_262 * ( ( walberla::float64 )( tmp_kernel_op_45 ) ) +
                                                              tmp_kernel_op_263 * ( ( walberla::float64 )( tmp_kernel_op_65 ) ) +
                                                              tmp_kernel_op_264 * ( ( walberla::float64 )( tmp_kernel_op_85 ) ) +
                                                              tmp_kernel_op_265 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_267 = tmp_kernel_op_186 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_268 = tmp_kernel_op_187 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_269 = tmp_kernel_op_188 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_189 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_100 * tmp_kernel_op_190;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_120 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_273 =
                      tmp_kernel_op_122 * tmp_kernel_op_267 + tmp_kernel_op_131 * tmp_kernel_op_268 +
                      tmp_kernel_op_138 * tmp_kernel_op_269 + tmp_kernel_op_145 * tmp_kernel_op_270 +
                      tmp_kernel_op_152 * tmp_kernel_op_271 + tmp_kernel_op_159 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_193 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_194 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_195 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_277 = tmp_kernel_op_196 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_278 = tmp_kernel_op_100 * tmp_kernel_op_197;
                  const walberla::float64 tmp_kernel_op_279 = tmp_kernel_op_120 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_122 * tmp_kernel_op_274 + tmp_kernel_op_131 * tmp_kernel_op_275 +
                      tmp_kernel_op_138 * tmp_kernel_op_276 + tmp_kernel_op_145 * tmp_kernel_op_277 +
                      tmp_kernel_op_152 * tmp_kernel_op_278 + tmp_kernel_op_159 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_281 = tmp_kernel_op_20 * tmp_kernel_op_200;
                  const walberla::float64 tmp_kernel_op_282 = tmp_kernel_op_201 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_283 = tmp_kernel_op_202 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_284 = tmp_kernel_op_203 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_100 * tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_120 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_287 =
                      tmp_kernel_op_122 * tmp_kernel_op_281 + tmp_kernel_op_131 * tmp_kernel_op_282 +
                      tmp_kernel_op_138 * tmp_kernel_op_283 + tmp_kernel_op_145 * tmp_kernel_op_284 +
                      tmp_kernel_op_152 * tmp_kernel_op_285 + tmp_kernel_op_159 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_288 =
                      tmp_kernel_op_1 * tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_101 * tmp_kernel_op_83 * ( ( walberla::float64 )( tmp_kernel_op_86 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_106 ) ) +
                      tmp_kernel_op_23 * tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_26 ) ) +
                      tmp_kernel_op_43 * tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                      tmp_kernel_op_63 * tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_289 =
                      tmp_kernel_op_126 * tmp_kernel_op_267 + tmp_kernel_op_135 * tmp_kernel_op_268 +
                      tmp_kernel_op_142 * tmp_kernel_op_269 + tmp_kernel_op_149 * tmp_kernel_op_270 +
                      tmp_kernel_op_156 * tmp_kernel_op_271 + tmp_kernel_op_163 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_290 =
                      tmp_kernel_op_126 * tmp_kernel_op_274 + tmp_kernel_op_135 * tmp_kernel_op_275 +
                      tmp_kernel_op_142 * tmp_kernel_op_276 + tmp_kernel_op_149 * tmp_kernel_op_277 +
                      tmp_kernel_op_156 * tmp_kernel_op_278 + tmp_kernel_op_163 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_291 =
                      tmp_kernel_op_126 * tmp_kernel_op_281 + tmp_kernel_op_135 * tmp_kernel_op_282 +
                      tmp_kernel_op_142 * tmp_kernel_op_283 + tmp_kernel_op_149 * tmp_kernel_op_284 +
                      tmp_kernel_op_156 * tmp_kernel_op_285 + tmp_kernel_op_163 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_125 * tmp_kernel_op_267 + tmp_kernel_op_134 * tmp_kernel_op_268 +
                      tmp_kernel_op_141 * tmp_kernel_op_269 + tmp_kernel_op_148 * tmp_kernel_op_270 +
                      tmp_kernel_op_155 * tmp_kernel_op_271 + tmp_kernel_op_162 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_125 * tmp_kernel_op_274 + tmp_kernel_op_134 * tmp_kernel_op_275 +
                      tmp_kernel_op_141 * tmp_kernel_op_276 + tmp_kernel_op_148 * tmp_kernel_op_277 +
                      tmp_kernel_op_155 * tmp_kernel_op_278 + tmp_kernel_op_162 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_125 * tmp_kernel_op_281 + tmp_kernel_op_134 * tmp_kernel_op_282 +
                      tmp_kernel_op_141 * tmp_kernel_op_283 + tmp_kernel_op_148 * tmp_kernel_op_284 +
                      tmp_kernel_op_155 * tmp_kernel_op_285 + tmp_kernel_op_162 * tmp_kernel_op_286;
                  const int64_t           tmp_kernel_op_295 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_193 * tmp_kernel_op_267 + tmp_kernel_op_194 * tmp_kernel_op_268 +
                      tmp_kernel_op_195 * tmp_kernel_op_269 + tmp_kernel_op_196 * tmp_kernel_op_270 +
                      tmp_kernel_op_197 * tmp_kernel_op_271 + tmp_kernel_op_198 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_200 * tmp_kernel_op_267 + tmp_kernel_op_201 * tmp_kernel_op_268 +
                      tmp_kernel_op_202 * tmp_kernel_op_269 + tmp_kernel_op_203 * tmp_kernel_op_270 +
                      tmp_kernel_op_204 * tmp_kernel_op_271 + tmp_kernel_op_205 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_298 =
                      tmp_kernel_op_200 * tmp_kernel_op_274 + tmp_kernel_op_201 * tmp_kernel_op_275 +
                      tmp_kernel_op_202 * tmp_kernel_op_276 + tmp_kernel_op_203 * tmp_kernel_op_277 +
                      tmp_kernel_op_204 * tmp_kernel_op_278 + tmp_kernel_op_205 * tmp_kernel_op_279;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_101 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 *
                                ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                                  ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                            tmp_kernel_op_21 *
                                ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                  ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 *
                                ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                                  ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                            tmp_kernel_op_61 *
                                ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                                  ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 *
                                ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                                  ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_175 + src_dof_2 * tmp_kernel_op_182 + src_dof_3 * tmp_kernel_op_184 +
                      src_dof_4 * tmp_kernel_op_166 + src_dof_5 * tmp_kernel_op_167 + src_dof_6 * tmp_kernel_op_168 +
                      src_dof_7 * tmp_kernel_op_192 + src_dof_8 * tmp_kernel_op_199 + src_dof_9 * tmp_kernel_op_206;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_175 +
                      src_dof_1 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_103 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_103 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_222 + src_dof_3 * tmp_kernel_op_223 + src_dof_4 * tmp_kernel_op_219 +
                      src_dof_5 * tmp_kernel_op_220 + src_dof_6 * tmp_kernel_op_221 + src_dof_7 * tmp_kernel_op_224 +
                      src_dof_8 * tmp_kernel_op_225 + src_dof_9 * tmp_kernel_op_226;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_182 + src_dof_1 * tmp_kernel_op_222 +
                      src_dof_2 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_104 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_104 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_236 + src_dof_4 * tmp_kernel_op_233 + src_dof_5 * tmp_kernel_op_234 +
                      src_dof_6 * tmp_kernel_op_235 + src_dof_7 * tmp_kernel_op_237 + src_dof_8 * tmp_kernel_op_238 +
                      src_dof_9 * tmp_kernel_op_239;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_184 + src_dof_1 * tmp_kernel_op_223 + src_dof_2 * tmp_kernel_op_236 +
                      src_dof_3 * ( tmp_kernel_op_207 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_208 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_209 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_210 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_211 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_212 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) ) +
                      src_dof_4 * tmp_kernel_op_247 + src_dof_5 * tmp_kernel_op_248 + src_dof_6 * tmp_kernel_op_249 +
                      src_dof_7 * tmp_kernel_op_250 + src_dof_8 * tmp_kernel_op_251 + src_dof_9 * tmp_kernel_op_252;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_166 + src_dof_1 * tmp_kernel_op_219 + src_dof_2 * tmp_kernel_op_233 +
                      src_dof_3 * tmp_kernel_op_247 +
                      src_dof_4 * ( tmp_kernel_op_104 * tmp_kernel_op_258 + tmp_kernel_op_2 * tmp_kernel_op_253 +
                                    tmp_kernel_op_24 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_44 +
                                    tmp_kernel_op_256 * tmp_kernel_op_64 + tmp_kernel_op_257 * tmp_kernel_op_84 ) +
                      src_dof_5 * tmp_kernel_op_259 + src_dof_6 * tmp_kernel_op_266 + src_dof_7 * tmp_kernel_op_273 +
                      src_dof_8 * tmp_kernel_op_280 + src_dof_9 * tmp_kernel_op_287;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_167 + src_dof_1 * tmp_kernel_op_220 + src_dof_2 * tmp_kernel_op_234 +
                      src_dof_3 * tmp_kernel_op_248 + src_dof_4 * tmp_kernel_op_259 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_253 + tmp_kernel_op_103 * tmp_kernel_op_258 +
                                    tmp_kernel_op_23 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_43 +
                                    tmp_kernel_op_256 * tmp_kernel_op_63 + tmp_kernel_op_257 * tmp_kernel_op_83 ) +
                      src_dof_6 * tmp_kernel_op_288 + src_dof_7 * tmp_kernel_op_289 + src_dof_8 * tmp_kernel_op_290 +
                      src_dof_9 * tmp_kernel_op_291;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_168 + src_dof_1 * tmp_kernel_op_221 + src_dof_2 * tmp_kernel_op_235 +
                      src_dof_3 * tmp_kernel_op_249 + src_dof_4 * tmp_kernel_op_266 + src_dof_5 * tmp_kernel_op_288 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_260 + tmp_kernel_op_103 * tmp_kernel_op_265 +
                                    tmp_kernel_op_23 * tmp_kernel_op_261 + tmp_kernel_op_262 * tmp_kernel_op_43 +
                                    tmp_kernel_op_263 * tmp_kernel_op_63 + tmp_kernel_op_264 * tmp_kernel_op_83 ) +
                      src_dof_7 * tmp_kernel_op_292 + src_dof_8 * tmp_kernel_op_293 + src_dof_9 * tmp_kernel_op_294;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_192 + src_dof_1 * tmp_kernel_op_224 + src_dof_2 * tmp_kernel_op_237 +
                      src_dof_3 * tmp_kernel_op_250 + src_dof_4 * tmp_kernel_op_273 + src_dof_5 * tmp_kernel_op_289 +
                      src_dof_6 * tmp_kernel_op_292 +
                      src_dof_7 *
                          ( tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) *
                                                                           ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) *
                                                                           ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) *
                                                                          ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_199 + src_dof_1 * tmp_kernel_op_225 + src_dof_2 * tmp_kernel_op_238 +
                      src_dof_3 * tmp_kernel_op_251 + src_dof_4 * tmp_kernel_op_280 + src_dof_5 * tmp_kernel_op_290 +
                      src_dof_6 * tmp_kernel_op_293 + src_dof_7 * tmp_kernel_op_296 +
                      src_dof_8 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_298;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_206 + src_dof_1 * tmp_kernel_op_226 + src_dof_2 * tmp_kernel_op_239 +
                      src_dof_3 * tmp_kernel_op_252 + src_dof_4 * tmp_kernel_op_287 + src_dof_5 * tmp_kernel_op_291 +
                      src_dof_6 * tmp_kernel_op_294 + src_dof_7 * tmp_kernel_op_297 + src_dof_8 * tmp_kernel_op_298 +
                      src_dof_9 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_UP */
         const walberla::float64 tmp_coords_jac_0_GREEN_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_6_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
         const walberla::float64 p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
         const walberla::float64 p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
         const walberla::float64 p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_2_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_2_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_2_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_3_0_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
         const walberla::float64 jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
         const walberla::float64 jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
         const walberla::float64 jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
         const walberla::float64 jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
         const walberla::float64 jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_31 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_37 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_37 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_31 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_51 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_57 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_57 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_51 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_71 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_77 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_77 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_71 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_91 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_97 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_97 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_91 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_111 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_117 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_117 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_111 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_122 + tmp_kernel_op_126;
                  const walberla::float64 tmp_kernel_op_128 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_128 + 1.0;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_20 * ( tmp_kernel_op_123 + tmp_kernel_op_124 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                           tmp_kernel_op_129 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_131 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_26 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_23 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_24 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_22 * 4.0;
                  const walberla::float64 tmp_kernel_op_135 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_25 ) );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_131 + tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_137 =
                      tmp_kernel_op_40 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                           tmp_kernel_op_136 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_138 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_43 * 2.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_44 * 2.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_42 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_45 ) );
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_138 + tmp_kernel_op_142;
                  const walberla::float64 tmp_kernel_op_144 =
                      tmp_kernel_op_60 * ( tmp_kernel_op_129 + tmp_kernel_op_139 + tmp_kernel_op_140 + tmp_kernel_op_141 +
                                           tmp_kernel_op_143 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_145 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_63 * 2.0;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_64 * 2.0;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_149 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_65 ) );
                  const walberla::float64 tmp_kernel_op_150 = tmp_kernel_op_145 + tmp_kernel_op_149;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_80 * ( tmp_kernel_op_129 + tmp_kernel_op_146 + tmp_kernel_op_147 + tmp_kernel_op_148 +
                                           tmp_kernel_op_150 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_152 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_86 ) );
                  const walberla::float64 tmp_kernel_op_153 = tmp_kernel_op_83 * 2.0;
                  const walberla::float64 tmp_kernel_op_154 = tmp_kernel_op_84 * 2.0;
                  const walberla::float64 tmp_kernel_op_155 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_156 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_85 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_152 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_158 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_129 + tmp_kernel_op_153 + tmp_kernel_op_154 + tmp_kernel_op_155 +
                                            tmp_kernel_op_157 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_159 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_106 ) );
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_103 * 2.0;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_104 * 2.0;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_163 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_159 + tmp_kernel_op_163;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_120 * ( tmp_kernel_op_129 + tmp_kernel_op_160 + tmp_kernel_op_161 + tmp_kernel_op_162 +
                                            tmp_kernel_op_164 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_122 * tmp_kernel_op_130 + tmp_kernel_op_131 * tmp_kernel_op_137 +
                      tmp_kernel_op_138 * tmp_kernel_op_144 + tmp_kernel_op_145 * tmp_kernel_op_151 +
                      tmp_kernel_op_152 * tmp_kernel_op_158 + tmp_kernel_op_159 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_126 * tmp_kernel_op_130 + tmp_kernel_op_135 * tmp_kernel_op_137 +
                      tmp_kernel_op_142 * tmp_kernel_op_144 + tmp_kernel_op_149 * tmp_kernel_op_151 +
                      tmp_kernel_op_156 * tmp_kernel_op_158 + tmp_kernel_op_163 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_125 * tmp_kernel_op_130 + tmp_kernel_op_134 * tmp_kernel_op_137 +
                      tmp_kernel_op_141 * tmp_kernel_op_144 + tmp_kernel_op_148 * tmp_kernel_op_151 +
                      tmp_kernel_op_155 * tmp_kernel_op_158 + tmp_kernel_op_162 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_169 = tmp_kernel_op_123 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_170 = tmp_kernel_op_132 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_139 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_146 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_153 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_160 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_175 =
                      tmp_kernel_op_130 * tmp_kernel_op_169 + tmp_kernel_op_137 * tmp_kernel_op_170 +
                      tmp_kernel_op_144 * tmp_kernel_op_171 + tmp_kernel_op_151 * tmp_kernel_op_172 +
                      tmp_kernel_op_158 * tmp_kernel_op_173 + tmp_kernel_op_165 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_124 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_177 = tmp_kernel_op_133 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_178 = tmp_kernel_op_140 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_179 = tmp_kernel_op_147 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_180 = tmp_kernel_op_154 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_181 = tmp_kernel_op_161 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_176 + tmp_kernel_op_137 * tmp_kernel_op_177 +
                      tmp_kernel_op_144 * tmp_kernel_op_178 + tmp_kernel_op_151 * tmp_kernel_op_179 +
                      tmp_kernel_op_158 * tmp_kernel_op_180 + tmp_kernel_op_165 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_184 =
                      tmp_kernel_op_130 * tmp_kernel_op_183 + tmp_kernel_op_137 * tmp_kernel_op_183 +
                      tmp_kernel_op_144 * tmp_kernel_op_183 + tmp_kernel_op_151 * tmp_kernel_op_183 +
                      tmp_kernel_op_158 * tmp_kernel_op_183 + tmp_kernel_op_165 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_185 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = -tmp_kernel_op_127 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_187 = -tmp_kernel_op_136 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_188 = -tmp_kernel_op_143 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_189 = -tmp_kernel_op_150 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_190 = -tmp_kernel_op_157 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_191 = -tmp_kernel_op_164 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_192 =
                      tmp_kernel_op_130 * tmp_kernel_op_186 + tmp_kernel_op_137 * tmp_kernel_op_187 +
                      tmp_kernel_op_144 * tmp_kernel_op_188 + tmp_kernel_op_151 * tmp_kernel_op_189 +
                      tmp_kernel_op_158 * tmp_kernel_op_190 + tmp_kernel_op_165 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_193 =
                      -tmp_kernel_op_122 - tmp_kernel_op_125 + tmp_kernel_op_2 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_194 =
                      -tmp_kernel_op_131 - tmp_kernel_op_134 + tmp_kernel_op_24 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_195 =
                      -tmp_kernel_op_138 - tmp_kernel_op_141 + tmp_kernel_op_44 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_196 =
                      -tmp_kernel_op_145 - tmp_kernel_op_148 + tmp_kernel_op_64 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_197 =
                      -tmp_kernel_op_152 - tmp_kernel_op_155 + tmp_kernel_op_84 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_198 =
                      tmp_kernel_op_104 * -4.0 - tmp_kernel_op_159 - tmp_kernel_op_162 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_199 =
                      tmp_kernel_op_130 * tmp_kernel_op_193 + tmp_kernel_op_137 * tmp_kernel_op_194 +
                      tmp_kernel_op_144 * tmp_kernel_op_195 + tmp_kernel_op_151 * tmp_kernel_op_196 +
                      tmp_kernel_op_158 * tmp_kernel_op_197 + tmp_kernel_op_165 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_200 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_125 - tmp_kernel_op_126 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_201 =
                      -tmp_kernel_op_134 - tmp_kernel_op_135 + tmp_kernel_op_23 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_202 =
                      -tmp_kernel_op_141 - tmp_kernel_op_142 + tmp_kernel_op_43 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_203 =
                      -tmp_kernel_op_148 - tmp_kernel_op_149 + tmp_kernel_op_63 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_204 =
                      -tmp_kernel_op_155 - tmp_kernel_op_156 + tmp_kernel_op_83 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_205 =
                      tmp_kernel_op_103 * -4.0 - tmp_kernel_op_162 - tmp_kernel_op_163 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_206 =
                      tmp_kernel_op_130 * tmp_kernel_op_200 + tmp_kernel_op_137 * tmp_kernel_op_201 +
                      tmp_kernel_op_144 * tmp_kernel_op_202 + tmp_kernel_op_151 * tmp_kernel_op_203 +
                      tmp_kernel_op_158 * tmp_kernel_op_204 + tmp_kernel_op_165 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_210 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_120 * 4.0;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_169 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_170 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_171 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_172 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_217 = tmp_kernel_op_100 * tmp_kernel_op_173;
                  const walberla::float64 tmp_kernel_op_218 = tmp_kernel_op_120 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_122 * tmp_kernel_op_213 + tmp_kernel_op_131 * tmp_kernel_op_214 +
                      tmp_kernel_op_138 * tmp_kernel_op_215 + tmp_kernel_op_145 * tmp_kernel_op_216 +
                      tmp_kernel_op_152 * tmp_kernel_op_217 + tmp_kernel_op_159 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_126 * tmp_kernel_op_213 + tmp_kernel_op_135 * tmp_kernel_op_214 +
                      tmp_kernel_op_142 * tmp_kernel_op_215 + tmp_kernel_op_149 * tmp_kernel_op_216 +
                      tmp_kernel_op_156 * tmp_kernel_op_217 + tmp_kernel_op_163 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_125 * tmp_kernel_op_213 + tmp_kernel_op_134 * tmp_kernel_op_214 +
                      tmp_kernel_op_141 * tmp_kernel_op_215 + tmp_kernel_op_148 * tmp_kernel_op_216 +
                      tmp_kernel_op_155 * tmp_kernel_op_217 + tmp_kernel_op_162 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_176 * tmp_kernel_op_213 + tmp_kernel_op_177 * tmp_kernel_op_214 +
                      tmp_kernel_op_178 * tmp_kernel_op_215 + tmp_kernel_op_179 * tmp_kernel_op_216 +
                      tmp_kernel_op_180 * tmp_kernel_op_217 + tmp_kernel_op_181 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_183 * tmp_kernel_op_213 + tmp_kernel_op_183 * tmp_kernel_op_214 +
                      tmp_kernel_op_183 * tmp_kernel_op_215 + tmp_kernel_op_183 * tmp_kernel_op_216 +
                      tmp_kernel_op_183 * tmp_kernel_op_217 + tmp_kernel_op_183 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_186 * tmp_kernel_op_213 + tmp_kernel_op_187 * tmp_kernel_op_214 +
                      tmp_kernel_op_188 * tmp_kernel_op_215 + tmp_kernel_op_189 * tmp_kernel_op_216 +
                      tmp_kernel_op_190 * tmp_kernel_op_217 + tmp_kernel_op_191 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_225 =
                      tmp_kernel_op_193 * tmp_kernel_op_213 + tmp_kernel_op_194 * tmp_kernel_op_214 +
                      tmp_kernel_op_195 * tmp_kernel_op_215 + tmp_kernel_op_196 * tmp_kernel_op_216 +
                      tmp_kernel_op_197 * tmp_kernel_op_217 + tmp_kernel_op_198 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_200 * tmp_kernel_op_213 + tmp_kernel_op_201 * tmp_kernel_op_214 +
                      tmp_kernel_op_202 * tmp_kernel_op_215 + tmp_kernel_op_203 * tmp_kernel_op_216 +
                      tmp_kernel_op_204 * tmp_kernel_op_217 + tmp_kernel_op_205 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_176 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_177 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_178 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_230 = tmp_kernel_op_179 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_100 * tmp_kernel_op_180;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_120 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_233 =
                      tmp_kernel_op_122 * tmp_kernel_op_227 + tmp_kernel_op_131 * tmp_kernel_op_228 +
                      tmp_kernel_op_138 * tmp_kernel_op_229 + tmp_kernel_op_145 * tmp_kernel_op_230 +
                      tmp_kernel_op_152 * tmp_kernel_op_231 + tmp_kernel_op_159 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_234 =
                      tmp_kernel_op_126 * tmp_kernel_op_227 + tmp_kernel_op_135 * tmp_kernel_op_228 +
                      tmp_kernel_op_142 * tmp_kernel_op_229 + tmp_kernel_op_149 * tmp_kernel_op_230 +
                      tmp_kernel_op_156 * tmp_kernel_op_231 + tmp_kernel_op_163 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_235 =
                      tmp_kernel_op_125 * tmp_kernel_op_227 + tmp_kernel_op_134 * tmp_kernel_op_228 +
                      tmp_kernel_op_141 * tmp_kernel_op_229 + tmp_kernel_op_148 * tmp_kernel_op_230 +
                      tmp_kernel_op_155 * tmp_kernel_op_231 + tmp_kernel_op_162 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_236 =
                      tmp_kernel_op_183 * tmp_kernel_op_227 + tmp_kernel_op_183 * tmp_kernel_op_228 +
                      tmp_kernel_op_183 * tmp_kernel_op_229 + tmp_kernel_op_183 * tmp_kernel_op_230 +
                      tmp_kernel_op_183 * tmp_kernel_op_231 + tmp_kernel_op_183 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_237 =
                      tmp_kernel_op_186 * tmp_kernel_op_227 + tmp_kernel_op_187 * tmp_kernel_op_228 +
                      tmp_kernel_op_188 * tmp_kernel_op_229 + tmp_kernel_op_189 * tmp_kernel_op_230 +
                      tmp_kernel_op_190 * tmp_kernel_op_231 + tmp_kernel_op_191 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_238 =
                      tmp_kernel_op_193 * tmp_kernel_op_227 + tmp_kernel_op_194 * tmp_kernel_op_228 +
                      tmp_kernel_op_195 * tmp_kernel_op_229 + tmp_kernel_op_196 * tmp_kernel_op_230 +
                      tmp_kernel_op_197 * tmp_kernel_op_231 + tmp_kernel_op_198 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_200 * tmp_kernel_op_227 + tmp_kernel_op_201 * tmp_kernel_op_228 +
                      tmp_kernel_op_202 * tmp_kernel_op_229 + tmp_kernel_op_203 * tmp_kernel_op_230 +
                      tmp_kernel_op_204 * tmp_kernel_op_231 + tmp_kernel_op_205 * tmp_kernel_op_232;
                  const int64_t           tmp_kernel_op_240 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_241 = tmp_kernel_op_183 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_242 = tmp_kernel_op_183 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_243 = tmp_kernel_op_183 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_244 = tmp_kernel_op_183 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_245 = tmp_kernel_op_100 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_246 = tmp_kernel_op_120 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_122 * tmp_kernel_op_241 + tmp_kernel_op_131 * tmp_kernel_op_242 +
                      tmp_kernel_op_138 * tmp_kernel_op_243 + tmp_kernel_op_145 * tmp_kernel_op_244 +
                      tmp_kernel_op_152 * tmp_kernel_op_245 + tmp_kernel_op_159 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_248 =
                      tmp_kernel_op_126 * tmp_kernel_op_241 + tmp_kernel_op_135 * tmp_kernel_op_242 +
                      tmp_kernel_op_142 * tmp_kernel_op_243 + tmp_kernel_op_149 * tmp_kernel_op_244 +
                      tmp_kernel_op_156 * tmp_kernel_op_245 + tmp_kernel_op_163 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_249 =
                      tmp_kernel_op_125 * tmp_kernel_op_241 + tmp_kernel_op_134 * tmp_kernel_op_242 +
                      tmp_kernel_op_141 * tmp_kernel_op_243 + tmp_kernel_op_148 * tmp_kernel_op_244 +
                      tmp_kernel_op_155 * tmp_kernel_op_245 + tmp_kernel_op_162 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_250 =
                      tmp_kernel_op_186 * tmp_kernel_op_241 + tmp_kernel_op_187 * tmp_kernel_op_242 +
                      tmp_kernel_op_188 * tmp_kernel_op_243 + tmp_kernel_op_189 * tmp_kernel_op_244 +
                      tmp_kernel_op_190 * tmp_kernel_op_245 + tmp_kernel_op_191 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_251 =
                      tmp_kernel_op_193 * tmp_kernel_op_241 + tmp_kernel_op_194 * tmp_kernel_op_242 +
                      tmp_kernel_op_195 * tmp_kernel_op_243 + tmp_kernel_op_196 * tmp_kernel_op_244 +
                      tmp_kernel_op_197 * tmp_kernel_op_245 + tmp_kernel_op_198 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_252 =
                      tmp_kernel_op_200 * tmp_kernel_op_241 + tmp_kernel_op_201 * tmp_kernel_op_242 +
                      tmp_kernel_op_202 * tmp_kernel_op_243 + tmp_kernel_op_203 * tmp_kernel_op_244 +
                      tmp_kernel_op_204 * tmp_kernel_op_245 + tmp_kernel_op_205 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_259 =
                      tmp_kernel_op_0 * tmp_kernel_op_253 + tmp_kernel_op_102 * tmp_kernel_op_258 +
                      tmp_kernel_op_22 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_42 +
                      tmp_kernel_op_256 * tmp_kernel_op_62 + tmp_kernel_op_257 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_2 * tmp_kernel_op_21;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_24 * tmp_kernel_op_41;
                  const walberla::float64 tmp_kernel_op_262 = tmp_kernel_op_44 * tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_263 = tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_264 = tmp_kernel_op_101 * tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_265 = tmp_kernel_op_104 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_266 = tmp_kernel_op_260 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_261 * ( ( walberla::float64 )( tmp_kernel_op_25 ) ) +
                                                              tmp_kernel_op_262 * ( ( walberla::float64 )( tmp_kernel_op_45 ) ) +
                                                              tmp_kernel_op_263 * ( ( walberla::float64 )( tmp_kernel_op_65 ) ) +
                                                              tmp_kernel_op_264 * ( ( walberla::float64 )( tmp_kernel_op_85 ) ) +
                                                              tmp_kernel_op_265 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_267 = tmp_kernel_op_186 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_268 = tmp_kernel_op_187 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_269 = tmp_kernel_op_188 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_189 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_100 * tmp_kernel_op_190;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_120 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_273 =
                      tmp_kernel_op_122 * tmp_kernel_op_267 + tmp_kernel_op_131 * tmp_kernel_op_268 +
                      tmp_kernel_op_138 * tmp_kernel_op_269 + tmp_kernel_op_145 * tmp_kernel_op_270 +
                      tmp_kernel_op_152 * tmp_kernel_op_271 + tmp_kernel_op_159 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_193 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_194 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_195 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_277 = tmp_kernel_op_196 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_278 = tmp_kernel_op_100 * tmp_kernel_op_197;
                  const walberla::float64 tmp_kernel_op_279 = tmp_kernel_op_120 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_122 * tmp_kernel_op_274 + tmp_kernel_op_131 * tmp_kernel_op_275 +
                      tmp_kernel_op_138 * tmp_kernel_op_276 + tmp_kernel_op_145 * tmp_kernel_op_277 +
                      tmp_kernel_op_152 * tmp_kernel_op_278 + tmp_kernel_op_159 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_281 = tmp_kernel_op_20 * tmp_kernel_op_200;
                  const walberla::float64 tmp_kernel_op_282 = tmp_kernel_op_201 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_283 = tmp_kernel_op_202 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_284 = tmp_kernel_op_203 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_100 * tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_120 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_287 =
                      tmp_kernel_op_122 * tmp_kernel_op_281 + tmp_kernel_op_131 * tmp_kernel_op_282 +
                      tmp_kernel_op_138 * tmp_kernel_op_283 + tmp_kernel_op_145 * tmp_kernel_op_284 +
                      tmp_kernel_op_152 * tmp_kernel_op_285 + tmp_kernel_op_159 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_288 =
                      tmp_kernel_op_1 * tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_101 * tmp_kernel_op_83 * ( ( walberla::float64 )( tmp_kernel_op_86 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_106 ) ) +
                      tmp_kernel_op_23 * tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_26 ) ) +
                      tmp_kernel_op_43 * tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                      tmp_kernel_op_63 * tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_289 =
                      tmp_kernel_op_126 * tmp_kernel_op_267 + tmp_kernel_op_135 * tmp_kernel_op_268 +
                      tmp_kernel_op_142 * tmp_kernel_op_269 + tmp_kernel_op_149 * tmp_kernel_op_270 +
                      tmp_kernel_op_156 * tmp_kernel_op_271 + tmp_kernel_op_163 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_290 =
                      tmp_kernel_op_126 * tmp_kernel_op_274 + tmp_kernel_op_135 * tmp_kernel_op_275 +
                      tmp_kernel_op_142 * tmp_kernel_op_276 + tmp_kernel_op_149 * tmp_kernel_op_277 +
                      tmp_kernel_op_156 * tmp_kernel_op_278 + tmp_kernel_op_163 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_291 =
                      tmp_kernel_op_126 * tmp_kernel_op_281 + tmp_kernel_op_135 * tmp_kernel_op_282 +
                      tmp_kernel_op_142 * tmp_kernel_op_283 + tmp_kernel_op_149 * tmp_kernel_op_284 +
                      tmp_kernel_op_156 * tmp_kernel_op_285 + tmp_kernel_op_163 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_125 * tmp_kernel_op_267 + tmp_kernel_op_134 * tmp_kernel_op_268 +
                      tmp_kernel_op_141 * tmp_kernel_op_269 + tmp_kernel_op_148 * tmp_kernel_op_270 +
                      tmp_kernel_op_155 * tmp_kernel_op_271 + tmp_kernel_op_162 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_125 * tmp_kernel_op_274 + tmp_kernel_op_134 * tmp_kernel_op_275 +
                      tmp_kernel_op_141 * tmp_kernel_op_276 + tmp_kernel_op_148 * tmp_kernel_op_277 +
                      tmp_kernel_op_155 * tmp_kernel_op_278 + tmp_kernel_op_162 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_125 * tmp_kernel_op_281 + tmp_kernel_op_134 * tmp_kernel_op_282 +
                      tmp_kernel_op_141 * tmp_kernel_op_283 + tmp_kernel_op_148 * tmp_kernel_op_284 +
                      tmp_kernel_op_155 * tmp_kernel_op_285 + tmp_kernel_op_162 * tmp_kernel_op_286;
                  const int64_t           tmp_kernel_op_295 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_193 * tmp_kernel_op_267 + tmp_kernel_op_194 * tmp_kernel_op_268 +
                      tmp_kernel_op_195 * tmp_kernel_op_269 + tmp_kernel_op_196 * tmp_kernel_op_270 +
                      tmp_kernel_op_197 * tmp_kernel_op_271 + tmp_kernel_op_198 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_200 * tmp_kernel_op_267 + tmp_kernel_op_201 * tmp_kernel_op_268 +
                      tmp_kernel_op_202 * tmp_kernel_op_269 + tmp_kernel_op_203 * tmp_kernel_op_270 +
                      tmp_kernel_op_204 * tmp_kernel_op_271 + tmp_kernel_op_205 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_298 =
                      tmp_kernel_op_200 * tmp_kernel_op_274 + tmp_kernel_op_201 * tmp_kernel_op_275 +
                      tmp_kernel_op_202 * tmp_kernel_op_276 + tmp_kernel_op_203 * tmp_kernel_op_277 +
                      tmp_kernel_op_204 * tmp_kernel_op_278 + tmp_kernel_op_205 * tmp_kernel_op_279;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_101 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 *
                                ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                                  ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                            tmp_kernel_op_21 *
                                ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                  ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 *
                                ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                                  ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                            tmp_kernel_op_61 *
                                ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                                  ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 *
                                ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                                  ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_175 + src_dof_2 * tmp_kernel_op_182 + src_dof_3 * tmp_kernel_op_184 +
                      src_dof_4 * tmp_kernel_op_166 + src_dof_5 * tmp_kernel_op_167 + src_dof_6 * tmp_kernel_op_168 +
                      src_dof_7 * tmp_kernel_op_192 + src_dof_8 * tmp_kernel_op_199 + src_dof_9 * tmp_kernel_op_206;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_175 +
                      src_dof_1 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_103 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_103 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_222 + src_dof_3 * tmp_kernel_op_223 + src_dof_4 * tmp_kernel_op_219 +
                      src_dof_5 * tmp_kernel_op_220 + src_dof_6 * tmp_kernel_op_221 + src_dof_7 * tmp_kernel_op_224 +
                      src_dof_8 * tmp_kernel_op_225 + src_dof_9 * tmp_kernel_op_226;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_182 + src_dof_1 * tmp_kernel_op_222 +
                      src_dof_2 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_104 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_104 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_236 + src_dof_4 * tmp_kernel_op_233 + src_dof_5 * tmp_kernel_op_234 +
                      src_dof_6 * tmp_kernel_op_235 + src_dof_7 * tmp_kernel_op_237 + src_dof_8 * tmp_kernel_op_238 +
                      src_dof_9 * tmp_kernel_op_239;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_184 + src_dof_1 * tmp_kernel_op_223 + src_dof_2 * tmp_kernel_op_236 +
                      src_dof_3 * ( tmp_kernel_op_207 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_208 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_209 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_210 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_211 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_212 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) ) +
                      src_dof_4 * tmp_kernel_op_247 + src_dof_5 * tmp_kernel_op_248 + src_dof_6 * tmp_kernel_op_249 +
                      src_dof_7 * tmp_kernel_op_250 + src_dof_8 * tmp_kernel_op_251 + src_dof_9 * tmp_kernel_op_252;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_166 + src_dof_1 * tmp_kernel_op_219 + src_dof_2 * tmp_kernel_op_233 +
                      src_dof_3 * tmp_kernel_op_247 +
                      src_dof_4 * ( tmp_kernel_op_104 * tmp_kernel_op_258 + tmp_kernel_op_2 * tmp_kernel_op_253 +
                                    tmp_kernel_op_24 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_44 +
                                    tmp_kernel_op_256 * tmp_kernel_op_64 + tmp_kernel_op_257 * tmp_kernel_op_84 ) +
                      src_dof_5 * tmp_kernel_op_259 + src_dof_6 * tmp_kernel_op_266 + src_dof_7 * tmp_kernel_op_273 +
                      src_dof_8 * tmp_kernel_op_280 + src_dof_9 * tmp_kernel_op_287;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_167 + src_dof_1 * tmp_kernel_op_220 + src_dof_2 * tmp_kernel_op_234 +
                      src_dof_3 * tmp_kernel_op_248 + src_dof_4 * tmp_kernel_op_259 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_253 + tmp_kernel_op_103 * tmp_kernel_op_258 +
                                    tmp_kernel_op_23 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_43 +
                                    tmp_kernel_op_256 * tmp_kernel_op_63 + tmp_kernel_op_257 * tmp_kernel_op_83 ) +
                      src_dof_6 * tmp_kernel_op_288 + src_dof_7 * tmp_kernel_op_289 + src_dof_8 * tmp_kernel_op_290 +
                      src_dof_9 * tmp_kernel_op_291;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_168 + src_dof_1 * tmp_kernel_op_221 + src_dof_2 * tmp_kernel_op_235 +
                      src_dof_3 * tmp_kernel_op_249 + src_dof_4 * tmp_kernel_op_266 + src_dof_5 * tmp_kernel_op_288 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_260 + tmp_kernel_op_103 * tmp_kernel_op_265 +
                                    tmp_kernel_op_23 * tmp_kernel_op_261 + tmp_kernel_op_262 * tmp_kernel_op_43 +
                                    tmp_kernel_op_263 * tmp_kernel_op_63 + tmp_kernel_op_264 * tmp_kernel_op_83 ) +
                      src_dof_7 * tmp_kernel_op_292 + src_dof_8 * tmp_kernel_op_293 + src_dof_9 * tmp_kernel_op_294;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_192 + src_dof_1 * tmp_kernel_op_224 + src_dof_2 * tmp_kernel_op_237 +
                      src_dof_3 * tmp_kernel_op_250 + src_dof_4 * tmp_kernel_op_273 + src_dof_5 * tmp_kernel_op_289 +
                      src_dof_6 * tmp_kernel_op_292 +
                      src_dof_7 *
                          ( tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) *
                                                                           ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) *
                                                                           ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) *
                                                                          ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_199 + src_dof_1 * tmp_kernel_op_225 + src_dof_2 * tmp_kernel_op_238 +
                      src_dof_3 * tmp_kernel_op_251 + src_dof_4 * tmp_kernel_op_280 + src_dof_5 * tmp_kernel_op_290 +
                      src_dof_6 * tmp_kernel_op_293 + src_dof_7 * tmp_kernel_op_296 +
                      src_dof_8 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_298;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_206 + src_dof_1 * tmp_kernel_op_226 + src_dof_2 * tmp_kernel_op_239 +
                      src_dof_3 * tmp_kernel_op_252 + src_dof_4 * tmp_kernel_op_287 + src_dof_5 * tmp_kernel_op_291 +
                      src_dof_6 * tmp_kernel_op_294 + src_dof_7 * tmp_kernel_op_297 + src_dof_8 * tmp_kernel_op_298 +
                      src_dof_9 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::
    apply_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_2_macro_3D(
        walberla::float64* RESTRICT _data_dstEdge,
        walberla::float64* RESTRICT _data_dstVertex,
        walberla::float64* RESTRICT _data_srcEdge,
        walberla::float64* RESTRICT _data_srcVertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_122 + tmp_kernel_op_126;
                  const walberla::float64 tmp_kernel_op_128 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_128 + 1.0;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_20 * ( tmp_kernel_op_123 + tmp_kernel_op_124 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                           tmp_kernel_op_129 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_131 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_26 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_23 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_24 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_22 * 4.0;
                  const walberla::float64 tmp_kernel_op_135 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_25 ) );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_131 + tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_137 =
                      tmp_kernel_op_40 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                           tmp_kernel_op_136 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_138 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_43 * 2.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_44 * 2.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_42 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_45 ) );
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_138 + tmp_kernel_op_142;
                  const walberla::float64 tmp_kernel_op_144 =
                      tmp_kernel_op_60 * ( tmp_kernel_op_129 + tmp_kernel_op_139 + tmp_kernel_op_140 + tmp_kernel_op_141 +
                                           tmp_kernel_op_143 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_145 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_63 * 2.0;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_64 * 2.0;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_149 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_65 ) );
                  const walberla::float64 tmp_kernel_op_150 = tmp_kernel_op_145 + tmp_kernel_op_149;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_80 * ( tmp_kernel_op_129 + tmp_kernel_op_146 + tmp_kernel_op_147 + tmp_kernel_op_148 +
                                           tmp_kernel_op_150 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_152 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_86 ) );
                  const walberla::float64 tmp_kernel_op_153 = tmp_kernel_op_83 * 2.0;
                  const walberla::float64 tmp_kernel_op_154 = tmp_kernel_op_84 * 2.0;
                  const walberla::float64 tmp_kernel_op_155 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_156 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_85 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_152 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_158 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_129 + tmp_kernel_op_153 + tmp_kernel_op_154 + tmp_kernel_op_155 +
                                            tmp_kernel_op_157 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_159 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_106 ) );
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_103 * 2.0;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_104 * 2.0;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_163 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_159 + tmp_kernel_op_163;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_120 * ( tmp_kernel_op_129 + tmp_kernel_op_160 + tmp_kernel_op_161 + tmp_kernel_op_162 +
                                            tmp_kernel_op_164 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_122 * tmp_kernel_op_130 + tmp_kernel_op_131 * tmp_kernel_op_137 +
                      tmp_kernel_op_138 * tmp_kernel_op_144 + tmp_kernel_op_145 * tmp_kernel_op_151 +
                      tmp_kernel_op_152 * tmp_kernel_op_158 + tmp_kernel_op_159 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_126 * tmp_kernel_op_130 + tmp_kernel_op_135 * tmp_kernel_op_137 +
                      tmp_kernel_op_142 * tmp_kernel_op_144 + tmp_kernel_op_149 * tmp_kernel_op_151 +
                      tmp_kernel_op_156 * tmp_kernel_op_158 + tmp_kernel_op_163 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_125 * tmp_kernel_op_130 + tmp_kernel_op_134 * tmp_kernel_op_137 +
                      tmp_kernel_op_141 * tmp_kernel_op_144 + tmp_kernel_op_148 * tmp_kernel_op_151 +
                      tmp_kernel_op_155 * tmp_kernel_op_158 + tmp_kernel_op_162 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_169 = tmp_kernel_op_123 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_170 = tmp_kernel_op_132 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_139 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_146 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_153 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_160 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_175 =
                      tmp_kernel_op_130 * tmp_kernel_op_169 + tmp_kernel_op_137 * tmp_kernel_op_170 +
                      tmp_kernel_op_144 * tmp_kernel_op_171 + tmp_kernel_op_151 * tmp_kernel_op_172 +
                      tmp_kernel_op_158 * tmp_kernel_op_173 + tmp_kernel_op_165 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_124 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_177 = tmp_kernel_op_133 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_178 = tmp_kernel_op_140 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_179 = tmp_kernel_op_147 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_180 = tmp_kernel_op_154 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_181 = tmp_kernel_op_161 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_176 + tmp_kernel_op_137 * tmp_kernel_op_177 +
                      tmp_kernel_op_144 * tmp_kernel_op_178 + tmp_kernel_op_151 * tmp_kernel_op_179 +
                      tmp_kernel_op_158 * tmp_kernel_op_180 + tmp_kernel_op_165 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_184 =
                      tmp_kernel_op_130 * tmp_kernel_op_183 + tmp_kernel_op_137 * tmp_kernel_op_183 +
                      tmp_kernel_op_144 * tmp_kernel_op_183 + tmp_kernel_op_151 * tmp_kernel_op_183 +
                      tmp_kernel_op_158 * tmp_kernel_op_183 + tmp_kernel_op_165 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_185 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = -tmp_kernel_op_127 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_187 = -tmp_kernel_op_136 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_188 = -tmp_kernel_op_143 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_189 = -tmp_kernel_op_150 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_190 = -tmp_kernel_op_157 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_191 = -tmp_kernel_op_164 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_192 =
                      tmp_kernel_op_130 * tmp_kernel_op_186 + tmp_kernel_op_137 * tmp_kernel_op_187 +
                      tmp_kernel_op_144 * tmp_kernel_op_188 + tmp_kernel_op_151 * tmp_kernel_op_189 +
                      tmp_kernel_op_158 * tmp_kernel_op_190 + tmp_kernel_op_165 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_193 =
                      -tmp_kernel_op_122 - tmp_kernel_op_125 + tmp_kernel_op_2 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_194 =
                      -tmp_kernel_op_131 - tmp_kernel_op_134 + tmp_kernel_op_24 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_195 =
                      -tmp_kernel_op_138 - tmp_kernel_op_141 + tmp_kernel_op_44 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_196 =
                      -tmp_kernel_op_145 - tmp_kernel_op_148 + tmp_kernel_op_64 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_197 =
                      -tmp_kernel_op_152 - tmp_kernel_op_155 + tmp_kernel_op_84 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_198 =
                      tmp_kernel_op_104 * -4.0 - tmp_kernel_op_159 - tmp_kernel_op_162 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_199 =
                      tmp_kernel_op_130 * tmp_kernel_op_193 + tmp_kernel_op_137 * tmp_kernel_op_194 +
                      tmp_kernel_op_144 * tmp_kernel_op_195 + tmp_kernel_op_151 * tmp_kernel_op_196 +
                      tmp_kernel_op_158 * tmp_kernel_op_197 + tmp_kernel_op_165 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_200 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_125 - tmp_kernel_op_126 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_201 =
                      -tmp_kernel_op_134 - tmp_kernel_op_135 + tmp_kernel_op_23 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_202 =
                      -tmp_kernel_op_141 - tmp_kernel_op_142 + tmp_kernel_op_43 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_203 =
                      -tmp_kernel_op_148 - tmp_kernel_op_149 + tmp_kernel_op_63 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_204 =
                      -tmp_kernel_op_155 - tmp_kernel_op_156 + tmp_kernel_op_83 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_205 =
                      tmp_kernel_op_103 * -4.0 - tmp_kernel_op_162 - tmp_kernel_op_163 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_206 =
                      tmp_kernel_op_130 * tmp_kernel_op_200 + tmp_kernel_op_137 * tmp_kernel_op_201 +
                      tmp_kernel_op_144 * tmp_kernel_op_202 + tmp_kernel_op_151 * tmp_kernel_op_203 +
                      tmp_kernel_op_158 * tmp_kernel_op_204 + tmp_kernel_op_165 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_210 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_120 * 4.0;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_169 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_170 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_171 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_172 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_217 = tmp_kernel_op_100 * tmp_kernel_op_173;
                  const walberla::float64 tmp_kernel_op_218 = tmp_kernel_op_120 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_122 * tmp_kernel_op_213 + tmp_kernel_op_131 * tmp_kernel_op_214 +
                      tmp_kernel_op_138 * tmp_kernel_op_215 + tmp_kernel_op_145 * tmp_kernel_op_216 +
                      tmp_kernel_op_152 * tmp_kernel_op_217 + tmp_kernel_op_159 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_126 * tmp_kernel_op_213 + tmp_kernel_op_135 * tmp_kernel_op_214 +
                      tmp_kernel_op_142 * tmp_kernel_op_215 + tmp_kernel_op_149 * tmp_kernel_op_216 +
                      tmp_kernel_op_156 * tmp_kernel_op_217 + tmp_kernel_op_163 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_125 * tmp_kernel_op_213 + tmp_kernel_op_134 * tmp_kernel_op_214 +
                      tmp_kernel_op_141 * tmp_kernel_op_215 + tmp_kernel_op_148 * tmp_kernel_op_216 +
                      tmp_kernel_op_155 * tmp_kernel_op_217 + tmp_kernel_op_162 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_176 * tmp_kernel_op_213 + tmp_kernel_op_177 * tmp_kernel_op_214 +
                      tmp_kernel_op_178 * tmp_kernel_op_215 + tmp_kernel_op_179 * tmp_kernel_op_216 +
                      tmp_kernel_op_180 * tmp_kernel_op_217 + tmp_kernel_op_181 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_183 * tmp_kernel_op_213 + tmp_kernel_op_183 * tmp_kernel_op_214 +
                      tmp_kernel_op_183 * tmp_kernel_op_215 + tmp_kernel_op_183 * tmp_kernel_op_216 +
                      tmp_kernel_op_183 * tmp_kernel_op_217 + tmp_kernel_op_183 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_186 * tmp_kernel_op_213 + tmp_kernel_op_187 * tmp_kernel_op_214 +
                      tmp_kernel_op_188 * tmp_kernel_op_215 + tmp_kernel_op_189 * tmp_kernel_op_216 +
                      tmp_kernel_op_190 * tmp_kernel_op_217 + tmp_kernel_op_191 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_225 =
                      tmp_kernel_op_193 * tmp_kernel_op_213 + tmp_kernel_op_194 * tmp_kernel_op_214 +
                      tmp_kernel_op_195 * tmp_kernel_op_215 + tmp_kernel_op_196 * tmp_kernel_op_216 +
                      tmp_kernel_op_197 * tmp_kernel_op_217 + tmp_kernel_op_198 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_200 * tmp_kernel_op_213 + tmp_kernel_op_201 * tmp_kernel_op_214 +
                      tmp_kernel_op_202 * tmp_kernel_op_215 + tmp_kernel_op_203 * tmp_kernel_op_216 +
                      tmp_kernel_op_204 * tmp_kernel_op_217 + tmp_kernel_op_205 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_176 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_177 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_178 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_230 = tmp_kernel_op_179 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_100 * tmp_kernel_op_180;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_120 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_233 =
                      tmp_kernel_op_122 * tmp_kernel_op_227 + tmp_kernel_op_131 * tmp_kernel_op_228 +
                      tmp_kernel_op_138 * tmp_kernel_op_229 + tmp_kernel_op_145 * tmp_kernel_op_230 +
                      tmp_kernel_op_152 * tmp_kernel_op_231 + tmp_kernel_op_159 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_234 =
                      tmp_kernel_op_126 * tmp_kernel_op_227 + tmp_kernel_op_135 * tmp_kernel_op_228 +
                      tmp_kernel_op_142 * tmp_kernel_op_229 + tmp_kernel_op_149 * tmp_kernel_op_230 +
                      tmp_kernel_op_156 * tmp_kernel_op_231 + tmp_kernel_op_163 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_235 =
                      tmp_kernel_op_125 * tmp_kernel_op_227 + tmp_kernel_op_134 * tmp_kernel_op_228 +
                      tmp_kernel_op_141 * tmp_kernel_op_229 + tmp_kernel_op_148 * tmp_kernel_op_230 +
                      tmp_kernel_op_155 * tmp_kernel_op_231 + tmp_kernel_op_162 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_236 =
                      tmp_kernel_op_183 * tmp_kernel_op_227 + tmp_kernel_op_183 * tmp_kernel_op_228 +
                      tmp_kernel_op_183 * tmp_kernel_op_229 + tmp_kernel_op_183 * tmp_kernel_op_230 +
                      tmp_kernel_op_183 * tmp_kernel_op_231 + tmp_kernel_op_183 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_237 =
                      tmp_kernel_op_186 * tmp_kernel_op_227 + tmp_kernel_op_187 * tmp_kernel_op_228 +
                      tmp_kernel_op_188 * tmp_kernel_op_229 + tmp_kernel_op_189 * tmp_kernel_op_230 +
                      tmp_kernel_op_190 * tmp_kernel_op_231 + tmp_kernel_op_191 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_238 =
                      tmp_kernel_op_193 * tmp_kernel_op_227 + tmp_kernel_op_194 * tmp_kernel_op_228 +
                      tmp_kernel_op_195 * tmp_kernel_op_229 + tmp_kernel_op_196 * tmp_kernel_op_230 +
                      tmp_kernel_op_197 * tmp_kernel_op_231 + tmp_kernel_op_198 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_200 * tmp_kernel_op_227 + tmp_kernel_op_201 * tmp_kernel_op_228 +
                      tmp_kernel_op_202 * tmp_kernel_op_229 + tmp_kernel_op_203 * tmp_kernel_op_230 +
                      tmp_kernel_op_204 * tmp_kernel_op_231 + tmp_kernel_op_205 * tmp_kernel_op_232;
                  const int64_t           tmp_kernel_op_240 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_241 = tmp_kernel_op_183 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_242 = tmp_kernel_op_183 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_243 = tmp_kernel_op_183 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_244 = tmp_kernel_op_183 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_245 = tmp_kernel_op_100 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_246 = tmp_kernel_op_120 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_122 * tmp_kernel_op_241 + tmp_kernel_op_131 * tmp_kernel_op_242 +
                      tmp_kernel_op_138 * tmp_kernel_op_243 + tmp_kernel_op_145 * tmp_kernel_op_244 +
                      tmp_kernel_op_152 * tmp_kernel_op_245 + tmp_kernel_op_159 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_248 =
                      tmp_kernel_op_126 * tmp_kernel_op_241 + tmp_kernel_op_135 * tmp_kernel_op_242 +
                      tmp_kernel_op_142 * tmp_kernel_op_243 + tmp_kernel_op_149 * tmp_kernel_op_244 +
                      tmp_kernel_op_156 * tmp_kernel_op_245 + tmp_kernel_op_163 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_249 =
                      tmp_kernel_op_125 * tmp_kernel_op_241 + tmp_kernel_op_134 * tmp_kernel_op_242 +
                      tmp_kernel_op_141 * tmp_kernel_op_243 + tmp_kernel_op_148 * tmp_kernel_op_244 +
                      tmp_kernel_op_155 * tmp_kernel_op_245 + tmp_kernel_op_162 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_250 =
                      tmp_kernel_op_186 * tmp_kernel_op_241 + tmp_kernel_op_187 * tmp_kernel_op_242 +
                      tmp_kernel_op_188 * tmp_kernel_op_243 + tmp_kernel_op_189 * tmp_kernel_op_244 +
                      tmp_kernel_op_190 * tmp_kernel_op_245 + tmp_kernel_op_191 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_251 =
                      tmp_kernel_op_193 * tmp_kernel_op_241 + tmp_kernel_op_194 * tmp_kernel_op_242 +
                      tmp_kernel_op_195 * tmp_kernel_op_243 + tmp_kernel_op_196 * tmp_kernel_op_244 +
                      tmp_kernel_op_197 * tmp_kernel_op_245 + tmp_kernel_op_198 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_252 =
                      tmp_kernel_op_200 * tmp_kernel_op_241 + tmp_kernel_op_201 * tmp_kernel_op_242 +
                      tmp_kernel_op_202 * tmp_kernel_op_243 + tmp_kernel_op_203 * tmp_kernel_op_244 +
                      tmp_kernel_op_204 * tmp_kernel_op_245 + tmp_kernel_op_205 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_259 =
                      tmp_kernel_op_0 * tmp_kernel_op_253 + tmp_kernel_op_102 * tmp_kernel_op_258 +
                      tmp_kernel_op_22 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_42 +
                      tmp_kernel_op_256 * tmp_kernel_op_62 + tmp_kernel_op_257 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_2 * tmp_kernel_op_21;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_24 * tmp_kernel_op_41;
                  const walberla::float64 tmp_kernel_op_262 = tmp_kernel_op_44 * tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_263 = tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_264 = tmp_kernel_op_101 * tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_265 = tmp_kernel_op_104 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_266 = tmp_kernel_op_260 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_261 * ( ( walberla::float64 )( tmp_kernel_op_25 ) ) +
                                                              tmp_kernel_op_262 * ( ( walberla::float64 )( tmp_kernel_op_45 ) ) +
                                                              tmp_kernel_op_263 * ( ( walberla::float64 )( tmp_kernel_op_65 ) ) +
                                                              tmp_kernel_op_264 * ( ( walberla::float64 )( tmp_kernel_op_85 ) ) +
                                                              tmp_kernel_op_265 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_267 = tmp_kernel_op_186 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_268 = tmp_kernel_op_187 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_269 = tmp_kernel_op_188 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_189 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_100 * tmp_kernel_op_190;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_120 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_273 =
                      tmp_kernel_op_122 * tmp_kernel_op_267 + tmp_kernel_op_131 * tmp_kernel_op_268 +
                      tmp_kernel_op_138 * tmp_kernel_op_269 + tmp_kernel_op_145 * tmp_kernel_op_270 +
                      tmp_kernel_op_152 * tmp_kernel_op_271 + tmp_kernel_op_159 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_193 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_194 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_195 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_277 = tmp_kernel_op_196 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_278 = tmp_kernel_op_100 * tmp_kernel_op_197;
                  const walberla::float64 tmp_kernel_op_279 = tmp_kernel_op_120 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_122 * tmp_kernel_op_274 + tmp_kernel_op_131 * tmp_kernel_op_275 +
                      tmp_kernel_op_138 * tmp_kernel_op_276 + tmp_kernel_op_145 * tmp_kernel_op_277 +
                      tmp_kernel_op_152 * tmp_kernel_op_278 + tmp_kernel_op_159 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_281 = tmp_kernel_op_20 * tmp_kernel_op_200;
                  const walberla::float64 tmp_kernel_op_282 = tmp_kernel_op_201 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_283 = tmp_kernel_op_202 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_284 = tmp_kernel_op_203 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_100 * tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_120 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_287 =
                      tmp_kernel_op_122 * tmp_kernel_op_281 + tmp_kernel_op_131 * tmp_kernel_op_282 +
                      tmp_kernel_op_138 * tmp_kernel_op_283 + tmp_kernel_op_145 * tmp_kernel_op_284 +
                      tmp_kernel_op_152 * tmp_kernel_op_285 + tmp_kernel_op_159 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_288 =
                      tmp_kernel_op_1 * tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_101 * tmp_kernel_op_83 * ( ( walberla::float64 )( tmp_kernel_op_86 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_106 ) ) +
                      tmp_kernel_op_23 * tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_26 ) ) +
                      tmp_kernel_op_43 * tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                      tmp_kernel_op_63 * tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_289 =
                      tmp_kernel_op_126 * tmp_kernel_op_267 + tmp_kernel_op_135 * tmp_kernel_op_268 +
                      tmp_kernel_op_142 * tmp_kernel_op_269 + tmp_kernel_op_149 * tmp_kernel_op_270 +
                      tmp_kernel_op_156 * tmp_kernel_op_271 + tmp_kernel_op_163 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_290 =
                      tmp_kernel_op_126 * tmp_kernel_op_274 + tmp_kernel_op_135 * tmp_kernel_op_275 +
                      tmp_kernel_op_142 * tmp_kernel_op_276 + tmp_kernel_op_149 * tmp_kernel_op_277 +
                      tmp_kernel_op_156 * tmp_kernel_op_278 + tmp_kernel_op_163 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_291 =
                      tmp_kernel_op_126 * tmp_kernel_op_281 + tmp_kernel_op_135 * tmp_kernel_op_282 +
                      tmp_kernel_op_142 * tmp_kernel_op_283 + tmp_kernel_op_149 * tmp_kernel_op_284 +
                      tmp_kernel_op_156 * tmp_kernel_op_285 + tmp_kernel_op_163 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_125 * tmp_kernel_op_267 + tmp_kernel_op_134 * tmp_kernel_op_268 +
                      tmp_kernel_op_141 * tmp_kernel_op_269 + tmp_kernel_op_148 * tmp_kernel_op_270 +
                      tmp_kernel_op_155 * tmp_kernel_op_271 + tmp_kernel_op_162 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_125 * tmp_kernel_op_274 + tmp_kernel_op_134 * tmp_kernel_op_275 +
                      tmp_kernel_op_141 * tmp_kernel_op_276 + tmp_kernel_op_148 * tmp_kernel_op_277 +
                      tmp_kernel_op_155 * tmp_kernel_op_278 + tmp_kernel_op_162 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_125 * tmp_kernel_op_281 + tmp_kernel_op_134 * tmp_kernel_op_282 +
                      tmp_kernel_op_141 * tmp_kernel_op_283 + tmp_kernel_op_148 * tmp_kernel_op_284 +
                      tmp_kernel_op_155 * tmp_kernel_op_285 + tmp_kernel_op_162 * tmp_kernel_op_286;
                  const int64_t           tmp_kernel_op_295 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_193 * tmp_kernel_op_267 + tmp_kernel_op_194 * tmp_kernel_op_268 +
                      tmp_kernel_op_195 * tmp_kernel_op_269 + tmp_kernel_op_196 * tmp_kernel_op_270 +
                      tmp_kernel_op_197 * tmp_kernel_op_271 + tmp_kernel_op_198 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_200 * tmp_kernel_op_267 + tmp_kernel_op_201 * tmp_kernel_op_268 +
                      tmp_kernel_op_202 * tmp_kernel_op_269 + tmp_kernel_op_203 * tmp_kernel_op_270 +
                      tmp_kernel_op_204 * tmp_kernel_op_271 + tmp_kernel_op_205 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_298 =
                      tmp_kernel_op_200 * tmp_kernel_op_274 + tmp_kernel_op_201 * tmp_kernel_op_275 +
                      tmp_kernel_op_202 * tmp_kernel_op_276 + tmp_kernel_op_203 * tmp_kernel_op_277 +
                      tmp_kernel_op_204 * tmp_kernel_op_278 + tmp_kernel_op_205 * tmp_kernel_op_279;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_101 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 *
                                ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                                  ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                            tmp_kernel_op_21 *
                                ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                  ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 *
                                ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                                  ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                            tmp_kernel_op_61 *
                                ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                                  ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 *
                                ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                                  ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_175 + src_dof_2 * tmp_kernel_op_182 + src_dof_3 * tmp_kernel_op_184 +
                      src_dof_4 * tmp_kernel_op_166 + src_dof_5 * tmp_kernel_op_167 + src_dof_6 * tmp_kernel_op_168 +
                      src_dof_7 * tmp_kernel_op_192 + src_dof_8 * tmp_kernel_op_199 + src_dof_9 * tmp_kernel_op_206;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_175 +
                      src_dof_1 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_103 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_103 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_222 + src_dof_3 * tmp_kernel_op_223 + src_dof_4 * tmp_kernel_op_219 +
                      src_dof_5 * tmp_kernel_op_220 + src_dof_6 * tmp_kernel_op_221 + src_dof_7 * tmp_kernel_op_224 +
                      src_dof_8 * tmp_kernel_op_225 + src_dof_9 * tmp_kernel_op_226;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_182 + src_dof_1 * tmp_kernel_op_222 +
                      src_dof_2 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_104 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_104 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_236 + src_dof_4 * tmp_kernel_op_233 + src_dof_5 * tmp_kernel_op_234 +
                      src_dof_6 * tmp_kernel_op_235 + src_dof_7 * tmp_kernel_op_237 + src_dof_8 * tmp_kernel_op_238 +
                      src_dof_9 * tmp_kernel_op_239;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_184 + src_dof_1 * tmp_kernel_op_223 + src_dof_2 * tmp_kernel_op_236 +
                      src_dof_3 * ( tmp_kernel_op_207 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_208 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_209 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_210 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_211 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_212 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) ) +
                      src_dof_4 * tmp_kernel_op_247 + src_dof_5 * tmp_kernel_op_248 + src_dof_6 * tmp_kernel_op_249 +
                      src_dof_7 * tmp_kernel_op_250 + src_dof_8 * tmp_kernel_op_251 + src_dof_9 * tmp_kernel_op_252;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_166 + src_dof_1 * tmp_kernel_op_219 + src_dof_2 * tmp_kernel_op_233 +
                      src_dof_3 * tmp_kernel_op_247 +
                      src_dof_4 * ( tmp_kernel_op_104 * tmp_kernel_op_258 + tmp_kernel_op_2 * tmp_kernel_op_253 +
                                    tmp_kernel_op_24 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_44 +
                                    tmp_kernel_op_256 * tmp_kernel_op_64 + tmp_kernel_op_257 * tmp_kernel_op_84 ) +
                      src_dof_5 * tmp_kernel_op_259 + src_dof_6 * tmp_kernel_op_266 + src_dof_7 * tmp_kernel_op_273 +
                      src_dof_8 * tmp_kernel_op_280 + src_dof_9 * tmp_kernel_op_287;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_167 + src_dof_1 * tmp_kernel_op_220 + src_dof_2 * tmp_kernel_op_234 +
                      src_dof_3 * tmp_kernel_op_248 + src_dof_4 * tmp_kernel_op_259 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_253 + tmp_kernel_op_103 * tmp_kernel_op_258 +
                                    tmp_kernel_op_23 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_43 +
                                    tmp_kernel_op_256 * tmp_kernel_op_63 + tmp_kernel_op_257 * tmp_kernel_op_83 ) +
                      src_dof_6 * tmp_kernel_op_288 + src_dof_7 * tmp_kernel_op_289 + src_dof_8 * tmp_kernel_op_290 +
                      src_dof_9 * tmp_kernel_op_291;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_168 + src_dof_1 * tmp_kernel_op_221 + src_dof_2 * tmp_kernel_op_235 +
                      src_dof_3 * tmp_kernel_op_249 + src_dof_4 * tmp_kernel_op_266 + src_dof_5 * tmp_kernel_op_288 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_260 + tmp_kernel_op_103 * tmp_kernel_op_265 +
                                    tmp_kernel_op_23 * tmp_kernel_op_261 + tmp_kernel_op_262 * tmp_kernel_op_43 +
                                    tmp_kernel_op_263 * tmp_kernel_op_63 + tmp_kernel_op_264 * tmp_kernel_op_83 ) +
                      src_dof_7 * tmp_kernel_op_292 + src_dof_8 * tmp_kernel_op_293 + src_dof_9 * tmp_kernel_op_294;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_192 + src_dof_1 * tmp_kernel_op_224 + src_dof_2 * tmp_kernel_op_237 +
                      src_dof_3 * tmp_kernel_op_250 + src_dof_4 * tmp_kernel_op_273 + src_dof_5 * tmp_kernel_op_289 +
                      src_dof_6 * tmp_kernel_op_292 +
                      src_dof_7 *
                          ( tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) *
                                                                           ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) *
                                                                           ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) *
                                                                          ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_199 + src_dof_1 * tmp_kernel_op_225 + src_dof_2 * tmp_kernel_op_238 +
                      src_dof_3 * tmp_kernel_op_251 + src_dof_4 * tmp_kernel_op_280 + src_dof_5 * tmp_kernel_op_290 +
                      src_dof_6 * tmp_kernel_op_293 + src_dof_7 * tmp_kernel_op_296 +
                      src_dof_8 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_298;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_206 + src_dof_1 * tmp_kernel_op_226 + src_dof_2 * tmp_kernel_op_239 +
                      src_dof_3 * tmp_kernel_op_252 + src_dof_4 * tmp_kernel_op_287 + src_dof_5 * tmp_kernel_op_291 +
                      src_dof_6 * tmp_kernel_op_294 + src_dof_7 * tmp_kernel_op_297 + src_dof_8 * tmp_kernel_op_298 +
                      src_dof_9 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_DOWN */
         const walberla::float64 tmp_coords_jac_0_BLUE_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_6_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_8_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 tmp_coords_jac_9_BLUE_DOWN   = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_0_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) +
             tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_1_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) +
             tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_2_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) +
             tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
         const walberla::float64 jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
         const walberla::float64 jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
         const walberla::float64 jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
         const walberla::float64 jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
         const walberla::float64 jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 src_dof_0 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_31 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_32 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_37 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_38 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_37 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_38 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_31 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_32 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_51 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_52 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_57 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_58 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_57 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_58 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_51 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_52 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_71 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_72 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_77 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_78 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_77 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_78 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_71 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_72 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_91 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_92 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_97 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_98 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_97 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_98 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_91 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_92 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_111 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_112 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_113 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_117 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_118 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_119 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_117 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_118 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_119 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_111 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_112 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_113 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_122 + tmp_kernel_op_126;
                  const walberla::float64 tmp_kernel_op_128 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_128 + 1.0;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_20 * ( tmp_kernel_op_123 + tmp_kernel_op_124 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                           tmp_kernel_op_129 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_131 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_26 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_23 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_24 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_22 * 4.0;
                  const walberla::float64 tmp_kernel_op_135 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_25 ) );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_131 + tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_137 =
                      tmp_kernel_op_40 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                           tmp_kernel_op_136 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_138 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_43 * 2.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_44 * 2.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_42 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_45 ) );
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_138 + tmp_kernel_op_142;
                  const walberla::float64 tmp_kernel_op_144 =
                      tmp_kernel_op_60 * ( tmp_kernel_op_129 + tmp_kernel_op_139 + tmp_kernel_op_140 + tmp_kernel_op_141 +
                                           tmp_kernel_op_143 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_145 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_63 * 2.0;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_64 * 2.0;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_149 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_65 ) );
                  const walberla::float64 tmp_kernel_op_150 = tmp_kernel_op_145 + tmp_kernel_op_149;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_80 * ( tmp_kernel_op_129 + tmp_kernel_op_146 + tmp_kernel_op_147 + tmp_kernel_op_148 +
                                           tmp_kernel_op_150 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_152 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_86 ) );
                  const walberla::float64 tmp_kernel_op_153 = tmp_kernel_op_83 * 2.0;
                  const walberla::float64 tmp_kernel_op_154 = tmp_kernel_op_84 * 2.0;
                  const walberla::float64 tmp_kernel_op_155 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_156 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_85 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_152 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_158 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_129 + tmp_kernel_op_153 + tmp_kernel_op_154 + tmp_kernel_op_155 +
                                            tmp_kernel_op_157 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_159 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_106 ) );
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_103 * 2.0;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_104 * 2.0;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_163 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_159 + tmp_kernel_op_163;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_120 * ( tmp_kernel_op_129 + tmp_kernel_op_160 + tmp_kernel_op_161 + tmp_kernel_op_162 +
                                            tmp_kernel_op_164 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_122 * tmp_kernel_op_130 + tmp_kernel_op_131 * tmp_kernel_op_137 +
                      tmp_kernel_op_138 * tmp_kernel_op_144 + tmp_kernel_op_145 * tmp_kernel_op_151 +
                      tmp_kernel_op_152 * tmp_kernel_op_158 + tmp_kernel_op_159 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_126 * tmp_kernel_op_130 + tmp_kernel_op_135 * tmp_kernel_op_137 +
                      tmp_kernel_op_142 * tmp_kernel_op_144 + tmp_kernel_op_149 * tmp_kernel_op_151 +
                      tmp_kernel_op_156 * tmp_kernel_op_158 + tmp_kernel_op_163 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_125 * tmp_kernel_op_130 + tmp_kernel_op_134 * tmp_kernel_op_137 +
                      tmp_kernel_op_141 * tmp_kernel_op_144 + tmp_kernel_op_148 * tmp_kernel_op_151 +
                      tmp_kernel_op_155 * tmp_kernel_op_158 + tmp_kernel_op_162 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_169 = tmp_kernel_op_123 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_170 = tmp_kernel_op_132 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_139 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_146 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_153 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_160 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_175 =
                      tmp_kernel_op_130 * tmp_kernel_op_169 + tmp_kernel_op_137 * tmp_kernel_op_170 +
                      tmp_kernel_op_144 * tmp_kernel_op_171 + tmp_kernel_op_151 * tmp_kernel_op_172 +
                      tmp_kernel_op_158 * tmp_kernel_op_173 + tmp_kernel_op_165 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_124 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_177 = tmp_kernel_op_133 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_178 = tmp_kernel_op_140 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_179 = tmp_kernel_op_147 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_180 = tmp_kernel_op_154 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_181 = tmp_kernel_op_161 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_176 + tmp_kernel_op_137 * tmp_kernel_op_177 +
                      tmp_kernel_op_144 * tmp_kernel_op_178 + tmp_kernel_op_151 * tmp_kernel_op_179 +
                      tmp_kernel_op_158 * tmp_kernel_op_180 + tmp_kernel_op_165 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_184 =
                      tmp_kernel_op_130 * tmp_kernel_op_183 + tmp_kernel_op_137 * tmp_kernel_op_183 +
                      tmp_kernel_op_144 * tmp_kernel_op_183 + tmp_kernel_op_151 * tmp_kernel_op_183 +
                      tmp_kernel_op_158 * tmp_kernel_op_183 + tmp_kernel_op_165 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_185 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = -tmp_kernel_op_127 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_187 = -tmp_kernel_op_136 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_188 = -tmp_kernel_op_143 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_189 = -tmp_kernel_op_150 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_190 = -tmp_kernel_op_157 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_191 = -tmp_kernel_op_164 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_192 =
                      tmp_kernel_op_130 * tmp_kernel_op_186 + tmp_kernel_op_137 * tmp_kernel_op_187 +
                      tmp_kernel_op_144 * tmp_kernel_op_188 + tmp_kernel_op_151 * tmp_kernel_op_189 +
                      tmp_kernel_op_158 * tmp_kernel_op_190 + tmp_kernel_op_165 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_193 =
                      -tmp_kernel_op_122 - tmp_kernel_op_125 + tmp_kernel_op_2 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_194 =
                      -tmp_kernel_op_131 - tmp_kernel_op_134 + tmp_kernel_op_24 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_195 =
                      -tmp_kernel_op_138 - tmp_kernel_op_141 + tmp_kernel_op_44 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_196 =
                      -tmp_kernel_op_145 - tmp_kernel_op_148 + tmp_kernel_op_64 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_197 =
                      -tmp_kernel_op_152 - tmp_kernel_op_155 + tmp_kernel_op_84 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_198 =
                      tmp_kernel_op_104 * -4.0 - tmp_kernel_op_159 - tmp_kernel_op_162 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_199 =
                      tmp_kernel_op_130 * tmp_kernel_op_193 + tmp_kernel_op_137 * tmp_kernel_op_194 +
                      tmp_kernel_op_144 * tmp_kernel_op_195 + tmp_kernel_op_151 * tmp_kernel_op_196 +
                      tmp_kernel_op_158 * tmp_kernel_op_197 + tmp_kernel_op_165 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_200 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_125 - tmp_kernel_op_126 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_201 =
                      -tmp_kernel_op_134 - tmp_kernel_op_135 + tmp_kernel_op_23 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_202 =
                      -tmp_kernel_op_141 - tmp_kernel_op_142 + tmp_kernel_op_43 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_203 =
                      -tmp_kernel_op_148 - tmp_kernel_op_149 + tmp_kernel_op_63 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_204 =
                      -tmp_kernel_op_155 - tmp_kernel_op_156 + tmp_kernel_op_83 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_205 =
                      tmp_kernel_op_103 * -4.0 - tmp_kernel_op_162 - tmp_kernel_op_163 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_206 =
                      tmp_kernel_op_130 * tmp_kernel_op_200 + tmp_kernel_op_137 * tmp_kernel_op_201 +
                      tmp_kernel_op_144 * tmp_kernel_op_202 + tmp_kernel_op_151 * tmp_kernel_op_203 +
                      tmp_kernel_op_158 * tmp_kernel_op_204 + tmp_kernel_op_165 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_210 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_120 * 4.0;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_169 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_170 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_171 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_172 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_217 = tmp_kernel_op_100 * tmp_kernel_op_173;
                  const walberla::float64 tmp_kernel_op_218 = tmp_kernel_op_120 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_122 * tmp_kernel_op_213 + tmp_kernel_op_131 * tmp_kernel_op_214 +
                      tmp_kernel_op_138 * tmp_kernel_op_215 + tmp_kernel_op_145 * tmp_kernel_op_216 +
                      tmp_kernel_op_152 * tmp_kernel_op_217 + tmp_kernel_op_159 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_126 * tmp_kernel_op_213 + tmp_kernel_op_135 * tmp_kernel_op_214 +
                      tmp_kernel_op_142 * tmp_kernel_op_215 + tmp_kernel_op_149 * tmp_kernel_op_216 +
                      tmp_kernel_op_156 * tmp_kernel_op_217 + tmp_kernel_op_163 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_125 * tmp_kernel_op_213 + tmp_kernel_op_134 * tmp_kernel_op_214 +
                      tmp_kernel_op_141 * tmp_kernel_op_215 + tmp_kernel_op_148 * tmp_kernel_op_216 +
                      tmp_kernel_op_155 * tmp_kernel_op_217 + tmp_kernel_op_162 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_176 * tmp_kernel_op_213 + tmp_kernel_op_177 * tmp_kernel_op_214 +
                      tmp_kernel_op_178 * tmp_kernel_op_215 + tmp_kernel_op_179 * tmp_kernel_op_216 +
                      tmp_kernel_op_180 * tmp_kernel_op_217 + tmp_kernel_op_181 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_183 * tmp_kernel_op_213 + tmp_kernel_op_183 * tmp_kernel_op_214 +
                      tmp_kernel_op_183 * tmp_kernel_op_215 + tmp_kernel_op_183 * tmp_kernel_op_216 +
                      tmp_kernel_op_183 * tmp_kernel_op_217 + tmp_kernel_op_183 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_186 * tmp_kernel_op_213 + tmp_kernel_op_187 * tmp_kernel_op_214 +
                      tmp_kernel_op_188 * tmp_kernel_op_215 + tmp_kernel_op_189 * tmp_kernel_op_216 +
                      tmp_kernel_op_190 * tmp_kernel_op_217 + tmp_kernel_op_191 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_225 =
                      tmp_kernel_op_193 * tmp_kernel_op_213 + tmp_kernel_op_194 * tmp_kernel_op_214 +
                      tmp_kernel_op_195 * tmp_kernel_op_215 + tmp_kernel_op_196 * tmp_kernel_op_216 +
                      tmp_kernel_op_197 * tmp_kernel_op_217 + tmp_kernel_op_198 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_200 * tmp_kernel_op_213 + tmp_kernel_op_201 * tmp_kernel_op_214 +
                      tmp_kernel_op_202 * tmp_kernel_op_215 + tmp_kernel_op_203 * tmp_kernel_op_216 +
                      tmp_kernel_op_204 * tmp_kernel_op_217 + tmp_kernel_op_205 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_176 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_177 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_178 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_230 = tmp_kernel_op_179 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_100 * tmp_kernel_op_180;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_120 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_233 =
                      tmp_kernel_op_122 * tmp_kernel_op_227 + tmp_kernel_op_131 * tmp_kernel_op_228 +
                      tmp_kernel_op_138 * tmp_kernel_op_229 + tmp_kernel_op_145 * tmp_kernel_op_230 +
                      tmp_kernel_op_152 * tmp_kernel_op_231 + tmp_kernel_op_159 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_234 =
                      tmp_kernel_op_126 * tmp_kernel_op_227 + tmp_kernel_op_135 * tmp_kernel_op_228 +
                      tmp_kernel_op_142 * tmp_kernel_op_229 + tmp_kernel_op_149 * tmp_kernel_op_230 +
                      tmp_kernel_op_156 * tmp_kernel_op_231 + tmp_kernel_op_163 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_235 =
                      tmp_kernel_op_125 * tmp_kernel_op_227 + tmp_kernel_op_134 * tmp_kernel_op_228 +
                      tmp_kernel_op_141 * tmp_kernel_op_229 + tmp_kernel_op_148 * tmp_kernel_op_230 +
                      tmp_kernel_op_155 * tmp_kernel_op_231 + tmp_kernel_op_162 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_236 =
                      tmp_kernel_op_183 * tmp_kernel_op_227 + tmp_kernel_op_183 * tmp_kernel_op_228 +
                      tmp_kernel_op_183 * tmp_kernel_op_229 + tmp_kernel_op_183 * tmp_kernel_op_230 +
                      tmp_kernel_op_183 * tmp_kernel_op_231 + tmp_kernel_op_183 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_237 =
                      tmp_kernel_op_186 * tmp_kernel_op_227 + tmp_kernel_op_187 * tmp_kernel_op_228 +
                      tmp_kernel_op_188 * tmp_kernel_op_229 + tmp_kernel_op_189 * tmp_kernel_op_230 +
                      tmp_kernel_op_190 * tmp_kernel_op_231 + tmp_kernel_op_191 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_238 =
                      tmp_kernel_op_193 * tmp_kernel_op_227 + tmp_kernel_op_194 * tmp_kernel_op_228 +
                      tmp_kernel_op_195 * tmp_kernel_op_229 + tmp_kernel_op_196 * tmp_kernel_op_230 +
                      tmp_kernel_op_197 * tmp_kernel_op_231 + tmp_kernel_op_198 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_200 * tmp_kernel_op_227 + tmp_kernel_op_201 * tmp_kernel_op_228 +
                      tmp_kernel_op_202 * tmp_kernel_op_229 + tmp_kernel_op_203 * tmp_kernel_op_230 +
                      tmp_kernel_op_204 * tmp_kernel_op_231 + tmp_kernel_op_205 * tmp_kernel_op_232;
                  const int64_t           tmp_kernel_op_240 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_241 = tmp_kernel_op_183 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_242 = tmp_kernel_op_183 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_243 = tmp_kernel_op_183 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_244 = tmp_kernel_op_183 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_245 = tmp_kernel_op_100 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_246 = tmp_kernel_op_120 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_122 * tmp_kernel_op_241 + tmp_kernel_op_131 * tmp_kernel_op_242 +
                      tmp_kernel_op_138 * tmp_kernel_op_243 + tmp_kernel_op_145 * tmp_kernel_op_244 +
                      tmp_kernel_op_152 * tmp_kernel_op_245 + tmp_kernel_op_159 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_248 =
                      tmp_kernel_op_126 * tmp_kernel_op_241 + tmp_kernel_op_135 * tmp_kernel_op_242 +
                      tmp_kernel_op_142 * tmp_kernel_op_243 + tmp_kernel_op_149 * tmp_kernel_op_244 +
                      tmp_kernel_op_156 * tmp_kernel_op_245 + tmp_kernel_op_163 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_249 =
                      tmp_kernel_op_125 * tmp_kernel_op_241 + tmp_kernel_op_134 * tmp_kernel_op_242 +
                      tmp_kernel_op_141 * tmp_kernel_op_243 + tmp_kernel_op_148 * tmp_kernel_op_244 +
                      tmp_kernel_op_155 * tmp_kernel_op_245 + tmp_kernel_op_162 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_250 =
                      tmp_kernel_op_186 * tmp_kernel_op_241 + tmp_kernel_op_187 * tmp_kernel_op_242 +
                      tmp_kernel_op_188 * tmp_kernel_op_243 + tmp_kernel_op_189 * tmp_kernel_op_244 +
                      tmp_kernel_op_190 * tmp_kernel_op_245 + tmp_kernel_op_191 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_251 =
                      tmp_kernel_op_193 * tmp_kernel_op_241 + tmp_kernel_op_194 * tmp_kernel_op_242 +
                      tmp_kernel_op_195 * tmp_kernel_op_243 + tmp_kernel_op_196 * tmp_kernel_op_244 +
                      tmp_kernel_op_197 * tmp_kernel_op_245 + tmp_kernel_op_198 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_252 =
                      tmp_kernel_op_200 * tmp_kernel_op_241 + tmp_kernel_op_201 * tmp_kernel_op_242 +
                      tmp_kernel_op_202 * tmp_kernel_op_243 + tmp_kernel_op_203 * tmp_kernel_op_244 +
                      tmp_kernel_op_204 * tmp_kernel_op_245 + tmp_kernel_op_205 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_259 =
                      tmp_kernel_op_0 * tmp_kernel_op_253 + tmp_kernel_op_102 * tmp_kernel_op_258 +
                      tmp_kernel_op_22 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_42 +
                      tmp_kernel_op_256 * tmp_kernel_op_62 + tmp_kernel_op_257 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_2 * tmp_kernel_op_21;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_24 * tmp_kernel_op_41;
                  const walberla::float64 tmp_kernel_op_262 = tmp_kernel_op_44 * tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_263 = tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_264 = tmp_kernel_op_101 * tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_265 = tmp_kernel_op_104 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_266 = tmp_kernel_op_260 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_261 * ( ( walberla::float64 )( tmp_kernel_op_25 ) ) +
                                                              tmp_kernel_op_262 * ( ( walberla::float64 )( tmp_kernel_op_45 ) ) +
                                                              tmp_kernel_op_263 * ( ( walberla::float64 )( tmp_kernel_op_65 ) ) +
                                                              tmp_kernel_op_264 * ( ( walberla::float64 )( tmp_kernel_op_85 ) ) +
                                                              tmp_kernel_op_265 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_267 = tmp_kernel_op_186 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_268 = tmp_kernel_op_187 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_269 = tmp_kernel_op_188 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_189 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_100 * tmp_kernel_op_190;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_120 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_273 =
                      tmp_kernel_op_122 * tmp_kernel_op_267 + tmp_kernel_op_131 * tmp_kernel_op_268 +
                      tmp_kernel_op_138 * tmp_kernel_op_269 + tmp_kernel_op_145 * tmp_kernel_op_270 +
                      tmp_kernel_op_152 * tmp_kernel_op_271 + tmp_kernel_op_159 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_193 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_194 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_195 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_277 = tmp_kernel_op_196 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_278 = tmp_kernel_op_100 * tmp_kernel_op_197;
                  const walberla::float64 tmp_kernel_op_279 = tmp_kernel_op_120 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_122 * tmp_kernel_op_274 + tmp_kernel_op_131 * tmp_kernel_op_275 +
                      tmp_kernel_op_138 * tmp_kernel_op_276 + tmp_kernel_op_145 * tmp_kernel_op_277 +
                      tmp_kernel_op_152 * tmp_kernel_op_278 + tmp_kernel_op_159 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_281 = tmp_kernel_op_20 * tmp_kernel_op_200;
                  const walberla::float64 tmp_kernel_op_282 = tmp_kernel_op_201 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_283 = tmp_kernel_op_202 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_284 = tmp_kernel_op_203 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_100 * tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_120 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_287 =
                      tmp_kernel_op_122 * tmp_kernel_op_281 + tmp_kernel_op_131 * tmp_kernel_op_282 +
                      tmp_kernel_op_138 * tmp_kernel_op_283 + tmp_kernel_op_145 * tmp_kernel_op_284 +
                      tmp_kernel_op_152 * tmp_kernel_op_285 + tmp_kernel_op_159 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_288 =
                      tmp_kernel_op_1 * tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_101 * tmp_kernel_op_83 * ( ( walberla::float64 )( tmp_kernel_op_86 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_106 ) ) +
                      tmp_kernel_op_23 * tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_26 ) ) +
                      tmp_kernel_op_43 * tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                      tmp_kernel_op_63 * tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_289 =
                      tmp_kernel_op_126 * tmp_kernel_op_267 + tmp_kernel_op_135 * tmp_kernel_op_268 +
                      tmp_kernel_op_142 * tmp_kernel_op_269 + tmp_kernel_op_149 * tmp_kernel_op_270 +
                      tmp_kernel_op_156 * tmp_kernel_op_271 + tmp_kernel_op_163 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_290 =
                      tmp_kernel_op_126 * tmp_kernel_op_274 + tmp_kernel_op_135 * tmp_kernel_op_275 +
                      tmp_kernel_op_142 * tmp_kernel_op_276 + tmp_kernel_op_149 * tmp_kernel_op_277 +
                      tmp_kernel_op_156 * tmp_kernel_op_278 + tmp_kernel_op_163 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_291 =
                      tmp_kernel_op_126 * tmp_kernel_op_281 + tmp_kernel_op_135 * tmp_kernel_op_282 +
                      tmp_kernel_op_142 * tmp_kernel_op_283 + tmp_kernel_op_149 * tmp_kernel_op_284 +
                      tmp_kernel_op_156 * tmp_kernel_op_285 + tmp_kernel_op_163 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_125 * tmp_kernel_op_267 + tmp_kernel_op_134 * tmp_kernel_op_268 +
                      tmp_kernel_op_141 * tmp_kernel_op_269 + tmp_kernel_op_148 * tmp_kernel_op_270 +
                      tmp_kernel_op_155 * tmp_kernel_op_271 + tmp_kernel_op_162 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_125 * tmp_kernel_op_274 + tmp_kernel_op_134 * tmp_kernel_op_275 +
                      tmp_kernel_op_141 * tmp_kernel_op_276 + tmp_kernel_op_148 * tmp_kernel_op_277 +
                      tmp_kernel_op_155 * tmp_kernel_op_278 + tmp_kernel_op_162 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_125 * tmp_kernel_op_281 + tmp_kernel_op_134 * tmp_kernel_op_282 +
                      tmp_kernel_op_141 * tmp_kernel_op_283 + tmp_kernel_op_148 * tmp_kernel_op_284 +
                      tmp_kernel_op_155 * tmp_kernel_op_285 + tmp_kernel_op_162 * tmp_kernel_op_286;
                  const int64_t           tmp_kernel_op_295 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_193 * tmp_kernel_op_267 + tmp_kernel_op_194 * tmp_kernel_op_268 +
                      tmp_kernel_op_195 * tmp_kernel_op_269 + tmp_kernel_op_196 * tmp_kernel_op_270 +
                      tmp_kernel_op_197 * tmp_kernel_op_271 + tmp_kernel_op_198 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_200 * tmp_kernel_op_267 + tmp_kernel_op_201 * tmp_kernel_op_268 +
                      tmp_kernel_op_202 * tmp_kernel_op_269 + tmp_kernel_op_203 * tmp_kernel_op_270 +
                      tmp_kernel_op_204 * tmp_kernel_op_271 + tmp_kernel_op_205 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_298 =
                      tmp_kernel_op_200 * tmp_kernel_op_274 + tmp_kernel_op_201 * tmp_kernel_op_275 +
                      tmp_kernel_op_202 * tmp_kernel_op_276 + tmp_kernel_op_203 * tmp_kernel_op_277 +
                      tmp_kernel_op_204 * tmp_kernel_op_278 + tmp_kernel_op_205 * tmp_kernel_op_279;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_101 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 *
                                ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                                  ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                            tmp_kernel_op_21 *
                                ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                  ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 *
                                ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                                  ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                            tmp_kernel_op_61 *
                                ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                                  ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 *
                                ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                                  ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_175 + src_dof_2 * tmp_kernel_op_182 + src_dof_3 * tmp_kernel_op_184 +
                      src_dof_4 * tmp_kernel_op_166 + src_dof_5 * tmp_kernel_op_167 + src_dof_6 * tmp_kernel_op_168 +
                      src_dof_7 * tmp_kernel_op_192 + src_dof_8 * tmp_kernel_op_199 + src_dof_9 * tmp_kernel_op_206;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_175 +
                      src_dof_1 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_103 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_103 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_222 + src_dof_3 * tmp_kernel_op_223 + src_dof_4 * tmp_kernel_op_219 +
                      src_dof_5 * tmp_kernel_op_220 + src_dof_6 * tmp_kernel_op_221 + src_dof_7 * tmp_kernel_op_224 +
                      src_dof_8 * tmp_kernel_op_225 + src_dof_9 * tmp_kernel_op_226;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_182 + src_dof_1 * tmp_kernel_op_222 +
                      src_dof_2 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_104 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_104 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_236 + src_dof_4 * tmp_kernel_op_233 + src_dof_5 * tmp_kernel_op_234 +
                      src_dof_6 * tmp_kernel_op_235 + src_dof_7 * tmp_kernel_op_237 + src_dof_8 * tmp_kernel_op_238 +
                      src_dof_9 * tmp_kernel_op_239;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_184 + src_dof_1 * tmp_kernel_op_223 + src_dof_2 * tmp_kernel_op_236 +
                      src_dof_3 * ( tmp_kernel_op_207 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_208 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_209 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_210 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_211 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_212 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) ) +
                      src_dof_4 * tmp_kernel_op_247 + src_dof_5 * tmp_kernel_op_248 + src_dof_6 * tmp_kernel_op_249 +
                      src_dof_7 * tmp_kernel_op_250 + src_dof_8 * tmp_kernel_op_251 + src_dof_9 * tmp_kernel_op_252;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_166 + src_dof_1 * tmp_kernel_op_219 + src_dof_2 * tmp_kernel_op_233 +
                      src_dof_3 * tmp_kernel_op_247 +
                      src_dof_4 * ( tmp_kernel_op_104 * tmp_kernel_op_258 + tmp_kernel_op_2 * tmp_kernel_op_253 +
                                    tmp_kernel_op_24 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_44 +
                                    tmp_kernel_op_256 * tmp_kernel_op_64 + tmp_kernel_op_257 * tmp_kernel_op_84 ) +
                      src_dof_5 * tmp_kernel_op_259 + src_dof_6 * tmp_kernel_op_266 + src_dof_7 * tmp_kernel_op_273 +
                      src_dof_8 * tmp_kernel_op_280 + src_dof_9 * tmp_kernel_op_287;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_167 + src_dof_1 * tmp_kernel_op_220 + src_dof_2 * tmp_kernel_op_234 +
                      src_dof_3 * tmp_kernel_op_248 + src_dof_4 * tmp_kernel_op_259 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_253 + tmp_kernel_op_103 * tmp_kernel_op_258 +
                                    tmp_kernel_op_23 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_43 +
                                    tmp_kernel_op_256 * tmp_kernel_op_63 + tmp_kernel_op_257 * tmp_kernel_op_83 ) +
                      src_dof_6 * tmp_kernel_op_288 + src_dof_7 * tmp_kernel_op_289 + src_dof_8 * tmp_kernel_op_290 +
                      src_dof_9 * tmp_kernel_op_291;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_168 + src_dof_1 * tmp_kernel_op_221 + src_dof_2 * tmp_kernel_op_235 +
                      src_dof_3 * tmp_kernel_op_249 + src_dof_4 * tmp_kernel_op_266 + src_dof_5 * tmp_kernel_op_288 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_260 + tmp_kernel_op_103 * tmp_kernel_op_265 +
                                    tmp_kernel_op_23 * tmp_kernel_op_261 + tmp_kernel_op_262 * tmp_kernel_op_43 +
                                    tmp_kernel_op_263 * tmp_kernel_op_63 + tmp_kernel_op_264 * tmp_kernel_op_83 ) +
                      src_dof_7 * tmp_kernel_op_292 + src_dof_8 * tmp_kernel_op_293 + src_dof_9 * tmp_kernel_op_294;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_192 + src_dof_1 * tmp_kernel_op_224 + src_dof_2 * tmp_kernel_op_237 +
                      src_dof_3 * tmp_kernel_op_250 + src_dof_4 * tmp_kernel_op_273 + src_dof_5 * tmp_kernel_op_289 +
                      src_dof_6 * tmp_kernel_op_292 +
                      src_dof_7 *
                          ( tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) *
                                                                           ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) *
                                                                           ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) *
                                                                          ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_199 + src_dof_1 * tmp_kernel_op_225 + src_dof_2 * tmp_kernel_op_238 +
                      src_dof_3 * tmp_kernel_op_251 + src_dof_4 * tmp_kernel_op_280 + src_dof_5 * tmp_kernel_op_290 +
                      src_dof_6 * tmp_kernel_op_293 + src_dof_7 * tmp_kernel_op_296 +
                      src_dof_8 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_298;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_206 + src_dof_1 * tmp_kernel_op_226 + src_dof_2 * tmp_kernel_op_239 +
                      src_dof_3 * tmp_kernel_op_252 + src_dof_4 * tmp_kernel_op_287 + src_dof_5 * tmp_kernel_op_291 +
                      src_dof_6 * tmp_kernel_op_294 + src_dof_7 * tmp_kernel_op_297 + src_dof_8 * tmp_kernel_op_298 +
                      src_dof_9 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) ) );
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::
    apply_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_3_macro_3D(
        walberla::float64* RESTRICT _data_dstEdge,
        walberla::float64* RESTRICT _data_dstVertex,
        walberla::float64* RESTRICT _data_srcEdge,
        walberla::float64* RESTRICT _data_srcVertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_0_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 jac_affine_0_0_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_122 + tmp_kernel_op_126;
                  const walberla::float64 tmp_kernel_op_128 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_128 + 1.0;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_20 * ( tmp_kernel_op_123 + tmp_kernel_op_124 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                           tmp_kernel_op_129 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_131 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_26 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_23 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_24 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_22 * 4.0;
                  const walberla::float64 tmp_kernel_op_135 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_25 ) );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_131 + tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_137 =
                      tmp_kernel_op_40 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                           tmp_kernel_op_136 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_138 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_43 * 2.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_44 * 2.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_42 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_45 ) );
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_138 + tmp_kernel_op_142;
                  const walberla::float64 tmp_kernel_op_144 =
                      tmp_kernel_op_60 * ( tmp_kernel_op_129 + tmp_kernel_op_139 + tmp_kernel_op_140 + tmp_kernel_op_141 +
                                           tmp_kernel_op_143 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_145 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_63 * 2.0;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_64 * 2.0;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_149 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_65 ) );
                  const walberla::float64 tmp_kernel_op_150 = tmp_kernel_op_145 + tmp_kernel_op_149;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_80 * ( tmp_kernel_op_129 + tmp_kernel_op_146 + tmp_kernel_op_147 + tmp_kernel_op_148 +
                                           tmp_kernel_op_150 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_152 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_86 ) );
                  const walberla::float64 tmp_kernel_op_153 = tmp_kernel_op_83 * 2.0;
                  const walberla::float64 tmp_kernel_op_154 = tmp_kernel_op_84 * 2.0;
                  const walberla::float64 tmp_kernel_op_155 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_156 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_85 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_152 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_158 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_129 + tmp_kernel_op_153 + tmp_kernel_op_154 + tmp_kernel_op_155 +
                                            tmp_kernel_op_157 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_159 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_106 ) );
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_103 * 2.0;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_104 * 2.0;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_163 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_159 + tmp_kernel_op_163;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_120 * ( tmp_kernel_op_129 + tmp_kernel_op_160 + tmp_kernel_op_161 + tmp_kernel_op_162 +
                                            tmp_kernel_op_164 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_122 * tmp_kernel_op_130 + tmp_kernel_op_131 * tmp_kernel_op_137 +
                      tmp_kernel_op_138 * tmp_kernel_op_144 + tmp_kernel_op_145 * tmp_kernel_op_151 +
                      tmp_kernel_op_152 * tmp_kernel_op_158 + tmp_kernel_op_159 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_126 * tmp_kernel_op_130 + tmp_kernel_op_135 * tmp_kernel_op_137 +
                      tmp_kernel_op_142 * tmp_kernel_op_144 + tmp_kernel_op_149 * tmp_kernel_op_151 +
                      tmp_kernel_op_156 * tmp_kernel_op_158 + tmp_kernel_op_163 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_125 * tmp_kernel_op_130 + tmp_kernel_op_134 * tmp_kernel_op_137 +
                      tmp_kernel_op_141 * tmp_kernel_op_144 + tmp_kernel_op_148 * tmp_kernel_op_151 +
                      tmp_kernel_op_155 * tmp_kernel_op_158 + tmp_kernel_op_162 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_169 = tmp_kernel_op_123 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_170 = tmp_kernel_op_132 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_139 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_146 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_153 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_160 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_175 =
                      tmp_kernel_op_130 * tmp_kernel_op_169 + tmp_kernel_op_137 * tmp_kernel_op_170 +
                      tmp_kernel_op_144 * tmp_kernel_op_171 + tmp_kernel_op_151 * tmp_kernel_op_172 +
                      tmp_kernel_op_158 * tmp_kernel_op_173 + tmp_kernel_op_165 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_124 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_177 = tmp_kernel_op_133 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_178 = tmp_kernel_op_140 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_179 = tmp_kernel_op_147 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_180 = tmp_kernel_op_154 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_181 = tmp_kernel_op_161 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_176 + tmp_kernel_op_137 * tmp_kernel_op_177 +
                      tmp_kernel_op_144 * tmp_kernel_op_178 + tmp_kernel_op_151 * tmp_kernel_op_179 +
                      tmp_kernel_op_158 * tmp_kernel_op_180 + tmp_kernel_op_165 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_184 =
                      tmp_kernel_op_130 * tmp_kernel_op_183 + tmp_kernel_op_137 * tmp_kernel_op_183 +
                      tmp_kernel_op_144 * tmp_kernel_op_183 + tmp_kernel_op_151 * tmp_kernel_op_183 +
                      tmp_kernel_op_158 * tmp_kernel_op_183 + tmp_kernel_op_165 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_185 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = -tmp_kernel_op_127 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_187 = -tmp_kernel_op_136 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_188 = -tmp_kernel_op_143 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_189 = -tmp_kernel_op_150 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_190 = -tmp_kernel_op_157 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_191 = -tmp_kernel_op_164 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_192 =
                      tmp_kernel_op_130 * tmp_kernel_op_186 + tmp_kernel_op_137 * tmp_kernel_op_187 +
                      tmp_kernel_op_144 * tmp_kernel_op_188 + tmp_kernel_op_151 * tmp_kernel_op_189 +
                      tmp_kernel_op_158 * tmp_kernel_op_190 + tmp_kernel_op_165 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_193 =
                      -tmp_kernel_op_122 - tmp_kernel_op_125 + tmp_kernel_op_2 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_194 =
                      -tmp_kernel_op_131 - tmp_kernel_op_134 + tmp_kernel_op_24 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_195 =
                      -tmp_kernel_op_138 - tmp_kernel_op_141 + tmp_kernel_op_44 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_196 =
                      -tmp_kernel_op_145 - tmp_kernel_op_148 + tmp_kernel_op_64 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_197 =
                      -tmp_kernel_op_152 - tmp_kernel_op_155 + tmp_kernel_op_84 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_198 =
                      tmp_kernel_op_104 * -4.0 - tmp_kernel_op_159 - tmp_kernel_op_162 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_199 =
                      tmp_kernel_op_130 * tmp_kernel_op_193 + tmp_kernel_op_137 * tmp_kernel_op_194 +
                      tmp_kernel_op_144 * tmp_kernel_op_195 + tmp_kernel_op_151 * tmp_kernel_op_196 +
                      tmp_kernel_op_158 * tmp_kernel_op_197 + tmp_kernel_op_165 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_200 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_125 - tmp_kernel_op_126 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_201 =
                      -tmp_kernel_op_134 - tmp_kernel_op_135 + tmp_kernel_op_23 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_202 =
                      -tmp_kernel_op_141 - tmp_kernel_op_142 + tmp_kernel_op_43 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_203 =
                      -tmp_kernel_op_148 - tmp_kernel_op_149 + tmp_kernel_op_63 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_204 =
                      -tmp_kernel_op_155 - tmp_kernel_op_156 + tmp_kernel_op_83 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_205 =
                      tmp_kernel_op_103 * -4.0 - tmp_kernel_op_162 - tmp_kernel_op_163 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_206 =
                      tmp_kernel_op_130 * tmp_kernel_op_200 + tmp_kernel_op_137 * tmp_kernel_op_201 +
                      tmp_kernel_op_144 * tmp_kernel_op_202 + tmp_kernel_op_151 * tmp_kernel_op_203 +
                      tmp_kernel_op_158 * tmp_kernel_op_204 + tmp_kernel_op_165 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_210 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_120 * 4.0;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_169 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_170 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_171 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_172 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_217 = tmp_kernel_op_100 * tmp_kernel_op_173;
                  const walberla::float64 tmp_kernel_op_218 = tmp_kernel_op_120 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_122 * tmp_kernel_op_213 + tmp_kernel_op_131 * tmp_kernel_op_214 +
                      tmp_kernel_op_138 * tmp_kernel_op_215 + tmp_kernel_op_145 * tmp_kernel_op_216 +
                      tmp_kernel_op_152 * tmp_kernel_op_217 + tmp_kernel_op_159 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_126 * tmp_kernel_op_213 + tmp_kernel_op_135 * tmp_kernel_op_214 +
                      tmp_kernel_op_142 * tmp_kernel_op_215 + tmp_kernel_op_149 * tmp_kernel_op_216 +
                      tmp_kernel_op_156 * tmp_kernel_op_217 + tmp_kernel_op_163 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_125 * tmp_kernel_op_213 + tmp_kernel_op_134 * tmp_kernel_op_214 +
                      tmp_kernel_op_141 * tmp_kernel_op_215 + tmp_kernel_op_148 * tmp_kernel_op_216 +
                      tmp_kernel_op_155 * tmp_kernel_op_217 + tmp_kernel_op_162 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_176 * tmp_kernel_op_213 + tmp_kernel_op_177 * tmp_kernel_op_214 +
                      tmp_kernel_op_178 * tmp_kernel_op_215 + tmp_kernel_op_179 * tmp_kernel_op_216 +
                      tmp_kernel_op_180 * tmp_kernel_op_217 + tmp_kernel_op_181 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_183 * tmp_kernel_op_213 + tmp_kernel_op_183 * tmp_kernel_op_214 +
                      tmp_kernel_op_183 * tmp_kernel_op_215 + tmp_kernel_op_183 * tmp_kernel_op_216 +
                      tmp_kernel_op_183 * tmp_kernel_op_217 + tmp_kernel_op_183 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_186 * tmp_kernel_op_213 + tmp_kernel_op_187 * tmp_kernel_op_214 +
                      tmp_kernel_op_188 * tmp_kernel_op_215 + tmp_kernel_op_189 * tmp_kernel_op_216 +
                      tmp_kernel_op_190 * tmp_kernel_op_217 + tmp_kernel_op_191 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_225 =
                      tmp_kernel_op_193 * tmp_kernel_op_213 + tmp_kernel_op_194 * tmp_kernel_op_214 +
                      tmp_kernel_op_195 * tmp_kernel_op_215 + tmp_kernel_op_196 * tmp_kernel_op_216 +
                      tmp_kernel_op_197 * tmp_kernel_op_217 + tmp_kernel_op_198 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_200 * tmp_kernel_op_213 + tmp_kernel_op_201 * tmp_kernel_op_214 +
                      tmp_kernel_op_202 * tmp_kernel_op_215 + tmp_kernel_op_203 * tmp_kernel_op_216 +
                      tmp_kernel_op_204 * tmp_kernel_op_217 + tmp_kernel_op_205 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_176 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_177 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_178 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_230 = tmp_kernel_op_179 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_100 * tmp_kernel_op_180;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_120 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_233 =
                      tmp_kernel_op_122 * tmp_kernel_op_227 + tmp_kernel_op_131 * tmp_kernel_op_228 +
                      tmp_kernel_op_138 * tmp_kernel_op_229 + tmp_kernel_op_145 * tmp_kernel_op_230 +
                      tmp_kernel_op_152 * tmp_kernel_op_231 + tmp_kernel_op_159 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_234 =
                      tmp_kernel_op_126 * tmp_kernel_op_227 + tmp_kernel_op_135 * tmp_kernel_op_228 +
                      tmp_kernel_op_142 * tmp_kernel_op_229 + tmp_kernel_op_149 * tmp_kernel_op_230 +
                      tmp_kernel_op_156 * tmp_kernel_op_231 + tmp_kernel_op_163 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_235 =
                      tmp_kernel_op_125 * tmp_kernel_op_227 + tmp_kernel_op_134 * tmp_kernel_op_228 +
                      tmp_kernel_op_141 * tmp_kernel_op_229 + tmp_kernel_op_148 * tmp_kernel_op_230 +
                      tmp_kernel_op_155 * tmp_kernel_op_231 + tmp_kernel_op_162 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_236 =
                      tmp_kernel_op_183 * tmp_kernel_op_227 + tmp_kernel_op_183 * tmp_kernel_op_228 +
                      tmp_kernel_op_183 * tmp_kernel_op_229 + tmp_kernel_op_183 * tmp_kernel_op_230 +
                      tmp_kernel_op_183 * tmp_kernel_op_231 + tmp_kernel_op_183 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_237 =
                      tmp_kernel_op_186 * tmp_kernel_op_227 + tmp_kernel_op_187 * tmp_kernel_op_228 +
                      tmp_kernel_op_188 * tmp_kernel_op_229 + tmp_kernel_op_189 * tmp_kernel_op_230 +
                      tmp_kernel_op_190 * tmp_kernel_op_231 + tmp_kernel_op_191 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_238 =
                      tmp_kernel_op_193 * tmp_kernel_op_227 + tmp_kernel_op_194 * tmp_kernel_op_228 +
                      tmp_kernel_op_195 * tmp_kernel_op_229 + tmp_kernel_op_196 * tmp_kernel_op_230 +
                      tmp_kernel_op_197 * tmp_kernel_op_231 + tmp_kernel_op_198 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_200 * tmp_kernel_op_227 + tmp_kernel_op_201 * tmp_kernel_op_228 +
                      tmp_kernel_op_202 * tmp_kernel_op_229 + tmp_kernel_op_203 * tmp_kernel_op_230 +
                      tmp_kernel_op_204 * tmp_kernel_op_231 + tmp_kernel_op_205 * tmp_kernel_op_232;
                  const int64_t           tmp_kernel_op_240 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_241 = tmp_kernel_op_183 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_242 = tmp_kernel_op_183 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_243 = tmp_kernel_op_183 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_244 = tmp_kernel_op_183 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_245 = tmp_kernel_op_100 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_246 = tmp_kernel_op_120 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_122 * tmp_kernel_op_241 + tmp_kernel_op_131 * tmp_kernel_op_242 +
                      tmp_kernel_op_138 * tmp_kernel_op_243 + tmp_kernel_op_145 * tmp_kernel_op_244 +
                      tmp_kernel_op_152 * tmp_kernel_op_245 + tmp_kernel_op_159 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_248 =
                      tmp_kernel_op_126 * tmp_kernel_op_241 + tmp_kernel_op_135 * tmp_kernel_op_242 +
                      tmp_kernel_op_142 * tmp_kernel_op_243 + tmp_kernel_op_149 * tmp_kernel_op_244 +
                      tmp_kernel_op_156 * tmp_kernel_op_245 + tmp_kernel_op_163 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_249 =
                      tmp_kernel_op_125 * tmp_kernel_op_241 + tmp_kernel_op_134 * tmp_kernel_op_242 +
                      tmp_kernel_op_141 * tmp_kernel_op_243 + tmp_kernel_op_148 * tmp_kernel_op_244 +
                      tmp_kernel_op_155 * tmp_kernel_op_245 + tmp_kernel_op_162 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_250 =
                      tmp_kernel_op_186 * tmp_kernel_op_241 + tmp_kernel_op_187 * tmp_kernel_op_242 +
                      tmp_kernel_op_188 * tmp_kernel_op_243 + tmp_kernel_op_189 * tmp_kernel_op_244 +
                      tmp_kernel_op_190 * tmp_kernel_op_245 + tmp_kernel_op_191 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_251 =
                      tmp_kernel_op_193 * tmp_kernel_op_241 + tmp_kernel_op_194 * tmp_kernel_op_242 +
                      tmp_kernel_op_195 * tmp_kernel_op_243 + tmp_kernel_op_196 * tmp_kernel_op_244 +
                      tmp_kernel_op_197 * tmp_kernel_op_245 + tmp_kernel_op_198 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_252 =
                      tmp_kernel_op_200 * tmp_kernel_op_241 + tmp_kernel_op_201 * tmp_kernel_op_242 +
                      tmp_kernel_op_202 * tmp_kernel_op_243 + tmp_kernel_op_203 * tmp_kernel_op_244 +
                      tmp_kernel_op_204 * tmp_kernel_op_245 + tmp_kernel_op_205 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_259 =
                      tmp_kernel_op_0 * tmp_kernel_op_253 + tmp_kernel_op_102 * tmp_kernel_op_258 +
                      tmp_kernel_op_22 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_42 +
                      tmp_kernel_op_256 * tmp_kernel_op_62 + tmp_kernel_op_257 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_2 * tmp_kernel_op_21;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_24 * tmp_kernel_op_41;
                  const walberla::float64 tmp_kernel_op_262 = tmp_kernel_op_44 * tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_263 = tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_264 = tmp_kernel_op_101 * tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_265 = tmp_kernel_op_104 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_266 = tmp_kernel_op_260 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_261 * ( ( walberla::float64 )( tmp_kernel_op_25 ) ) +
                                                              tmp_kernel_op_262 * ( ( walberla::float64 )( tmp_kernel_op_45 ) ) +
                                                              tmp_kernel_op_263 * ( ( walberla::float64 )( tmp_kernel_op_65 ) ) +
                                                              tmp_kernel_op_264 * ( ( walberla::float64 )( tmp_kernel_op_85 ) ) +
                                                              tmp_kernel_op_265 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_267 = tmp_kernel_op_186 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_268 = tmp_kernel_op_187 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_269 = tmp_kernel_op_188 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_189 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_100 * tmp_kernel_op_190;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_120 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_273 =
                      tmp_kernel_op_122 * tmp_kernel_op_267 + tmp_kernel_op_131 * tmp_kernel_op_268 +
                      tmp_kernel_op_138 * tmp_kernel_op_269 + tmp_kernel_op_145 * tmp_kernel_op_270 +
                      tmp_kernel_op_152 * tmp_kernel_op_271 + tmp_kernel_op_159 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_193 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_194 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_195 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_277 = tmp_kernel_op_196 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_278 = tmp_kernel_op_100 * tmp_kernel_op_197;
                  const walberla::float64 tmp_kernel_op_279 = tmp_kernel_op_120 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_122 * tmp_kernel_op_274 + tmp_kernel_op_131 * tmp_kernel_op_275 +
                      tmp_kernel_op_138 * tmp_kernel_op_276 + tmp_kernel_op_145 * tmp_kernel_op_277 +
                      tmp_kernel_op_152 * tmp_kernel_op_278 + tmp_kernel_op_159 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_281 = tmp_kernel_op_20 * tmp_kernel_op_200;
                  const walberla::float64 tmp_kernel_op_282 = tmp_kernel_op_201 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_283 = tmp_kernel_op_202 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_284 = tmp_kernel_op_203 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_100 * tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_120 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_287 =
                      tmp_kernel_op_122 * tmp_kernel_op_281 + tmp_kernel_op_131 * tmp_kernel_op_282 +
                      tmp_kernel_op_138 * tmp_kernel_op_283 + tmp_kernel_op_145 * tmp_kernel_op_284 +
                      tmp_kernel_op_152 * tmp_kernel_op_285 + tmp_kernel_op_159 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_288 =
                      tmp_kernel_op_1 * tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_101 * tmp_kernel_op_83 * ( ( walberla::float64 )( tmp_kernel_op_86 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_106 ) ) +
                      tmp_kernel_op_23 * tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_26 ) ) +
                      tmp_kernel_op_43 * tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                      tmp_kernel_op_63 * tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_289 =
                      tmp_kernel_op_126 * tmp_kernel_op_267 + tmp_kernel_op_135 * tmp_kernel_op_268 +
                      tmp_kernel_op_142 * tmp_kernel_op_269 + tmp_kernel_op_149 * tmp_kernel_op_270 +
                      tmp_kernel_op_156 * tmp_kernel_op_271 + tmp_kernel_op_163 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_290 =
                      tmp_kernel_op_126 * tmp_kernel_op_274 + tmp_kernel_op_135 * tmp_kernel_op_275 +
                      tmp_kernel_op_142 * tmp_kernel_op_276 + tmp_kernel_op_149 * tmp_kernel_op_277 +
                      tmp_kernel_op_156 * tmp_kernel_op_278 + tmp_kernel_op_163 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_291 =
                      tmp_kernel_op_126 * tmp_kernel_op_281 + tmp_kernel_op_135 * tmp_kernel_op_282 +
                      tmp_kernel_op_142 * tmp_kernel_op_283 + tmp_kernel_op_149 * tmp_kernel_op_284 +
                      tmp_kernel_op_156 * tmp_kernel_op_285 + tmp_kernel_op_163 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_125 * tmp_kernel_op_267 + tmp_kernel_op_134 * tmp_kernel_op_268 +
                      tmp_kernel_op_141 * tmp_kernel_op_269 + tmp_kernel_op_148 * tmp_kernel_op_270 +
                      tmp_kernel_op_155 * tmp_kernel_op_271 + tmp_kernel_op_162 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_125 * tmp_kernel_op_274 + tmp_kernel_op_134 * tmp_kernel_op_275 +
                      tmp_kernel_op_141 * tmp_kernel_op_276 + tmp_kernel_op_148 * tmp_kernel_op_277 +
                      tmp_kernel_op_155 * tmp_kernel_op_278 + tmp_kernel_op_162 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_125 * tmp_kernel_op_281 + tmp_kernel_op_134 * tmp_kernel_op_282 +
                      tmp_kernel_op_141 * tmp_kernel_op_283 + tmp_kernel_op_148 * tmp_kernel_op_284 +
                      tmp_kernel_op_155 * tmp_kernel_op_285 + tmp_kernel_op_162 * tmp_kernel_op_286;
                  const int64_t           tmp_kernel_op_295 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_193 * tmp_kernel_op_267 + tmp_kernel_op_194 * tmp_kernel_op_268 +
                      tmp_kernel_op_195 * tmp_kernel_op_269 + tmp_kernel_op_196 * tmp_kernel_op_270 +
                      tmp_kernel_op_197 * tmp_kernel_op_271 + tmp_kernel_op_198 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_200 * tmp_kernel_op_267 + tmp_kernel_op_201 * tmp_kernel_op_268 +
                      tmp_kernel_op_202 * tmp_kernel_op_269 + tmp_kernel_op_203 * tmp_kernel_op_270 +
                      tmp_kernel_op_204 * tmp_kernel_op_271 + tmp_kernel_op_205 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_298 =
                      tmp_kernel_op_200 * tmp_kernel_op_274 + tmp_kernel_op_201 * tmp_kernel_op_275 +
                      tmp_kernel_op_202 * tmp_kernel_op_276 + tmp_kernel_op_203 * tmp_kernel_op_277 +
                      tmp_kernel_op_204 * tmp_kernel_op_278 + tmp_kernel_op_205 * tmp_kernel_op_279;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_101 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 *
                                ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                                  ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                            tmp_kernel_op_21 *
                                ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                  ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 *
                                ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                                  ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                            tmp_kernel_op_61 *
                                ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                                  ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 *
                                ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                                  ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_175 + src_dof_2 * tmp_kernel_op_182 + src_dof_3 * tmp_kernel_op_184 +
                      src_dof_4 * tmp_kernel_op_166 + src_dof_5 * tmp_kernel_op_167 + src_dof_6 * tmp_kernel_op_168 +
                      src_dof_7 * tmp_kernel_op_192 + src_dof_8 * tmp_kernel_op_199 + src_dof_9 * tmp_kernel_op_206;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_175 +
                      src_dof_1 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_103 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_103 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_222 + src_dof_3 * tmp_kernel_op_223 + src_dof_4 * tmp_kernel_op_219 +
                      src_dof_5 * tmp_kernel_op_220 + src_dof_6 * tmp_kernel_op_221 + src_dof_7 * tmp_kernel_op_224 +
                      src_dof_8 * tmp_kernel_op_225 + src_dof_9 * tmp_kernel_op_226;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_182 + src_dof_1 * tmp_kernel_op_222 +
                      src_dof_2 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_104 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_104 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_236 + src_dof_4 * tmp_kernel_op_233 + src_dof_5 * tmp_kernel_op_234 +
                      src_dof_6 * tmp_kernel_op_235 + src_dof_7 * tmp_kernel_op_237 + src_dof_8 * tmp_kernel_op_238 +
                      src_dof_9 * tmp_kernel_op_239;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_184 + src_dof_1 * tmp_kernel_op_223 + src_dof_2 * tmp_kernel_op_236 +
                      src_dof_3 * ( tmp_kernel_op_207 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_208 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_209 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_210 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_211 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_212 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) ) +
                      src_dof_4 * tmp_kernel_op_247 + src_dof_5 * tmp_kernel_op_248 + src_dof_6 * tmp_kernel_op_249 +
                      src_dof_7 * tmp_kernel_op_250 + src_dof_8 * tmp_kernel_op_251 + src_dof_9 * tmp_kernel_op_252;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_166 + src_dof_1 * tmp_kernel_op_219 + src_dof_2 * tmp_kernel_op_233 +
                      src_dof_3 * tmp_kernel_op_247 +
                      src_dof_4 * ( tmp_kernel_op_104 * tmp_kernel_op_258 + tmp_kernel_op_2 * tmp_kernel_op_253 +
                                    tmp_kernel_op_24 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_44 +
                                    tmp_kernel_op_256 * tmp_kernel_op_64 + tmp_kernel_op_257 * tmp_kernel_op_84 ) +
                      src_dof_5 * tmp_kernel_op_259 + src_dof_6 * tmp_kernel_op_266 + src_dof_7 * tmp_kernel_op_273 +
                      src_dof_8 * tmp_kernel_op_280 + src_dof_9 * tmp_kernel_op_287;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_167 + src_dof_1 * tmp_kernel_op_220 + src_dof_2 * tmp_kernel_op_234 +
                      src_dof_3 * tmp_kernel_op_248 + src_dof_4 * tmp_kernel_op_259 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_253 + tmp_kernel_op_103 * tmp_kernel_op_258 +
                                    tmp_kernel_op_23 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_43 +
                                    tmp_kernel_op_256 * tmp_kernel_op_63 + tmp_kernel_op_257 * tmp_kernel_op_83 ) +
                      src_dof_6 * tmp_kernel_op_288 + src_dof_7 * tmp_kernel_op_289 + src_dof_8 * tmp_kernel_op_290 +
                      src_dof_9 * tmp_kernel_op_291;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_168 + src_dof_1 * tmp_kernel_op_221 + src_dof_2 * tmp_kernel_op_235 +
                      src_dof_3 * tmp_kernel_op_249 + src_dof_4 * tmp_kernel_op_266 + src_dof_5 * tmp_kernel_op_288 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_260 + tmp_kernel_op_103 * tmp_kernel_op_265 +
                                    tmp_kernel_op_23 * tmp_kernel_op_261 + tmp_kernel_op_262 * tmp_kernel_op_43 +
                                    tmp_kernel_op_263 * tmp_kernel_op_63 + tmp_kernel_op_264 * tmp_kernel_op_83 ) +
                      src_dof_7 * tmp_kernel_op_292 + src_dof_8 * tmp_kernel_op_293 + src_dof_9 * tmp_kernel_op_294;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_192 + src_dof_1 * tmp_kernel_op_224 + src_dof_2 * tmp_kernel_op_237 +
                      src_dof_3 * tmp_kernel_op_250 + src_dof_4 * tmp_kernel_op_273 + src_dof_5 * tmp_kernel_op_289 +
                      src_dof_6 * tmp_kernel_op_292 +
                      src_dof_7 *
                          ( tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) *
                                                                           ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) *
                                                                           ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) *
                                                                          ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_199 + src_dof_1 * tmp_kernel_op_225 + src_dof_2 * tmp_kernel_op_238 +
                      src_dof_3 * tmp_kernel_op_251 + src_dof_4 * tmp_kernel_op_280 + src_dof_5 * tmp_kernel_op_290 +
                      src_dof_6 * tmp_kernel_op_293 + src_dof_7 * tmp_kernel_op_296 +
                      src_dof_8 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_298;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_206 + src_dof_1 * tmp_kernel_op_226 + src_dof_2 * tmp_kernel_op_239 +
                      src_dof_3 * tmp_kernel_op_252 + src_dof_4 * tmp_kernel_op_287 + src_dof_5 * tmp_kernel_op_291 +
                      src_dof_6 * tmp_kernel_op_294 + src_dof_7 * tmp_kernel_op_297 + src_dof_8 * tmp_kernel_op_298 +
                      src_dof_9 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_DOWN */
         const walberla::float64 tmp_coords_jac_0_GREEN_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_3_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_4_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_5_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_6_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_7_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_8_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_9_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_0_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 + tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_1_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 + tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 jac_affine_0_0_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
         const walberla::float64 jac_affine_0_1_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
         const walberla::float64 jac_affine_1_0_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
         const walberla::float64 jac_affine_1_1_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
         const walberla::float64 jac_affine_2_0_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
         const walberla::float64 jac_affine_2_1_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 src_dof_0 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_12 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_13 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_18 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_19 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_18 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_19 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_12 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_13 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_31 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_32 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_33 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_37 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_38 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_39 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_37 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_38 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_39 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_31 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_32 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_33 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_51 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_52 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_53 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_57 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_58 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_59 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_57 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_58 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_59 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_51 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_52 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_53 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_71 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_72 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_73 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_77 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_78 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_79 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_77 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_78 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_79 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_71 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_72 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_73 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_91 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_92 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_93 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_97 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_98 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_99 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_97 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_98 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_99 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_91 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_92 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_93 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_111 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_112 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_117 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_118 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_117 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_118 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_111 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_112 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_122 + tmp_kernel_op_126;
                  const walberla::float64 tmp_kernel_op_128 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_128 + 1.0;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_20 * ( tmp_kernel_op_123 + tmp_kernel_op_124 + tmp_kernel_op_125 + tmp_kernel_op_127 +
                                           tmp_kernel_op_129 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_131 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_26 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_23 * 2.0;
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_24 * 2.0;
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_22 * 4.0;
                  const walberla::float64 tmp_kernel_op_135 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_25 ) );
                  const walberla::float64 tmp_kernel_op_136 = tmp_kernel_op_131 + tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_137 =
                      tmp_kernel_op_40 * ( tmp_kernel_op_129 + tmp_kernel_op_132 + tmp_kernel_op_133 + tmp_kernel_op_134 +
                                           tmp_kernel_op_136 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_138 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_43 * 2.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_44 * 2.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_42 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_45 ) );
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_138 + tmp_kernel_op_142;
                  const walberla::float64 tmp_kernel_op_144 =
                      tmp_kernel_op_60 * ( tmp_kernel_op_129 + tmp_kernel_op_139 + tmp_kernel_op_140 + tmp_kernel_op_141 +
                                           tmp_kernel_op_143 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_145 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_63 * 2.0;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_64 * 2.0;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_149 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_65 ) );
                  const walberla::float64 tmp_kernel_op_150 = tmp_kernel_op_145 + tmp_kernel_op_149;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_80 * ( tmp_kernel_op_129 + tmp_kernel_op_146 + tmp_kernel_op_147 + tmp_kernel_op_148 +
                                           tmp_kernel_op_150 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_152 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_86 ) );
                  const walberla::float64 tmp_kernel_op_153 = tmp_kernel_op_83 * 2.0;
                  const walberla::float64 tmp_kernel_op_154 = tmp_kernel_op_84 * 2.0;
                  const walberla::float64 tmp_kernel_op_155 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_156 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_85 ) );
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_152 + tmp_kernel_op_156;
                  const walberla::float64 tmp_kernel_op_158 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_129 + tmp_kernel_op_153 + tmp_kernel_op_154 + tmp_kernel_op_155 +
                                            tmp_kernel_op_157 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_159 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_106 ) );
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_103 * 2.0;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_104 * 2.0;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_102 * 4.0;
                  const walberla::float64 tmp_kernel_op_163 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_164 = tmp_kernel_op_159 + tmp_kernel_op_163;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_120 * ( tmp_kernel_op_129 + tmp_kernel_op_160 + tmp_kernel_op_161 + tmp_kernel_op_162 +
                                            tmp_kernel_op_164 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_122 * tmp_kernel_op_130 + tmp_kernel_op_131 * tmp_kernel_op_137 +
                      tmp_kernel_op_138 * tmp_kernel_op_144 + tmp_kernel_op_145 * tmp_kernel_op_151 +
                      tmp_kernel_op_152 * tmp_kernel_op_158 + tmp_kernel_op_159 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_126 * tmp_kernel_op_130 + tmp_kernel_op_135 * tmp_kernel_op_137 +
                      tmp_kernel_op_142 * tmp_kernel_op_144 + tmp_kernel_op_149 * tmp_kernel_op_151 +
                      tmp_kernel_op_156 * tmp_kernel_op_158 + tmp_kernel_op_163 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_125 * tmp_kernel_op_130 + tmp_kernel_op_134 * tmp_kernel_op_137 +
                      tmp_kernel_op_141 * tmp_kernel_op_144 + tmp_kernel_op_148 * tmp_kernel_op_151 +
                      tmp_kernel_op_155 * tmp_kernel_op_158 + tmp_kernel_op_162 * tmp_kernel_op_165;
                  const walberla::float64 tmp_kernel_op_169 = tmp_kernel_op_123 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_170 = tmp_kernel_op_132 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_139 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_146 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_153 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_160 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_175 =
                      tmp_kernel_op_130 * tmp_kernel_op_169 + tmp_kernel_op_137 * tmp_kernel_op_170 +
                      tmp_kernel_op_144 * tmp_kernel_op_171 + tmp_kernel_op_151 * tmp_kernel_op_172 +
                      tmp_kernel_op_158 * tmp_kernel_op_173 + tmp_kernel_op_165 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_124 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_177 = tmp_kernel_op_133 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_178 = tmp_kernel_op_140 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_179 = tmp_kernel_op_147 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_180 = tmp_kernel_op_154 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_181 = tmp_kernel_op_161 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_176 + tmp_kernel_op_137 * tmp_kernel_op_177 +
                      tmp_kernel_op_144 * tmp_kernel_op_178 + tmp_kernel_op_151 * tmp_kernel_op_179 +
                      tmp_kernel_op_158 * tmp_kernel_op_180 + tmp_kernel_op_165 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_184 =
                      tmp_kernel_op_130 * tmp_kernel_op_183 + tmp_kernel_op_137 * tmp_kernel_op_183 +
                      tmp_kernel_op_144 * tmp_kernel_op_183 + tmp_kernel_op_151 * tmp_kernel_op_183 +
                      tmp_kernel_op_158 * tmp_kernel_op_183 + tmp_kernel_op_165 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_185 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = -tmp_kernel_op_127 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_187 = -tmp_kernel_op_136 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_188 = -tmp_kernel_op_143 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_189 = -tmp_kernel_op_150 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_190 = -tmp_kernel_op_157 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_191 = -tmp_kernel_op_164 - tmp_kernel_op_185;
                  const walberla::float64 tmp_kernel_op_192 =
                      tmp_kernel_op_130 * tmp_kernel_op_186 + tmp_kernel_op_137 * tmp_kernel_op_187 +
                      tmp_kernel_op_144 * tmp_kernel_op_188 + tmp_kernel_op_151 * tmp_kernel_op_189 +
                      tmp_kernel_op_158 * tmp_kernel_op_190 + tmp_kernel_op_165 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_193 =
                      -tmp_kernel_op_122 - tmp_kernel_op_125 + tmp_kernel_op_2 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_194 =
                      -tmp_kernel_op_131 - tmp_kernel_op_134 + tmp_kernel_op_24 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_195 =
                      -tmp_kernel_op_138 - tmp_kernel_op_141 + tmp_kernel_op_44 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_196 =
                      -tmp_kernel_op_145 - tmp_kernel_op_148 + tmp_kernel_op_64 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_197 =
                      -tmp_kernel_op_152 - tmp_kernel_op_155 + tmp_kernel_op_84 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_198 =
                      tmp_kernel_op_104 * -4.0 - tmp_kernel_op_159 - tmp_kernel_op_162 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_199 =
                      tmp_kernel_op_130 * tmp_kernel_op_193 + tmp_kernel_op_137 * tmp_kernel_op_194 +
                      tmp_kernel_op_144 * tmp_kernel_op_195 + tmp_kernel_op_151 * tmp_kernel_op_196 +
                      tmp_kernel_op_158 * tmp_kernel_op_197 + tmp_kernel_op_165 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_200 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_125 - tmp_kernel_op_126 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_201 =
                      -tmp_kernel_op_134 - tmp_kernel_op_135 + tmp_kernel_op_23 * -4.0 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_202 =
                      -tmp_kernel_op_141 - tmp_kernel_op_142 + tmp_kernel_op_43 * -4.0 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_203 =
                      -tmp_kernel_op_148 - tmp_kernel_op_149 + tmp_kernel_op_63 * -4.0 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_204 =
                      -tmp_kernel_op_155 - tmp_kernel_op_156 + tmp_kernel_op_83 * -4.0 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_205 =
                      tmp_kernel_op_103 * -4.0 - tmp_kernel_op_162 - tmp_kernel_op_163 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_206 =
                      tmp_kernel_op_130 * tmp_kernel_op_200 + tmp_kernel_op_137 * tmp_kernel_op_201 +
                      tmp_kernel_op_144 * tmp_kernel_op_202 + tmp_kernel_op_151 * tmp_kernel_op_203 +
                      tmp_kernel_op_158 * tmp_kernel_op_204 + tmp_kernel_op_165 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_210 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_120 * 4.0;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_169 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_170 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_171 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_172 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_217 = tmp_kernel_op_100 * tmp_kernel_op_173;
                  const walberla::float64 tmp_kernel_op_218 = tmp_kernel_op_120 * tmp_kernel_op_174;
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_122 * tmp_kernel_op_213 + tmp_kernel_op_131 * tmp_kernel_op_214 +
                      tmp_kernel_op_138 * tmp_kernel_op_215 + tmp_kernel_op_145 * tmp_kernel_op_216 +
                      tmp_kernel_op_152 * tmp_kernel_op_217 + tmp_kernel_op_159 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_126 * tmp_kernel_op_213 + tmp_kernel_op_135 * tmp_kernel_op_214 +
                      tmp_kernel_op_142 * tmp_kernel_op_215 + tmp_kernel_op_149 * tmp_kernel_op_216 +
                      tmp_kernel_op_156 * tmp_kernel_op_217 + tmp_kernel_op_163 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_125 * tmp_kernel_op_213 + tmp_kernel_op_134 * tmp_kernel_op_214 +
                      tmp_kernel_op_141 * tmp_kernel_op_215 + tmp_kernel_op_148 * tmp_kernel_op_216 +
                      tmp_kernel_op_155 * tmp_kernel_op_217 + tmp_kernel_op_162 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_176 * tmp_kernel_op_213 + tmp_kernel_op_177 * tmp_kernel_op_214 +
                      tmp_kernel_op_178 * tmp_kernel_op_215 + tmp_kernel_op_179 * tmp_kernel_op_216 +
                      tmp_kernel_op_180 * tmp_kernel_op_217 + tmp_kernel_op_181 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_183 * tmp_kernel_op_213 + tmp_kernel_op_183 * tmp_kernel_op_214 +
                      tmp_kernel_op_183 * tmp_kernel_op_215 + tmp_kernel_op_183 * tmp_kernel_op_216 +
                      tmp_kernel_op_183 * tmp_kernel_op_217 + tmp_kernel_op_183 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_186 * tmp_kernel_op_213 + tmp_kernel_op_187 * tmp_kernel_op_214 +
                      tmp_kernel_op_188 * tmp_kernel_op_215 + tmp_kernel_op_189 * tmp_kernel_op_216 +
                      tmp_kernel_op_190 * tmp_kernel_op_217 + tmp_kernel_op_191 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_225 =
                      tmp_kernel_op_193 * tmp_kernel_op_213 + tmp_kernel_op_194 * tmp_kernel_op_214 +
                      tmp_kernel_op_195 * tmp_kernel_op_215 + tmp_kernel_op_196 * tmp_kernel_op_216 +
                      tmp_kernel_op_197 * tmp_kernel_op_217 + tmp_kernel_op_198 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_200 * tmp_kernel_op_213 + tmp_kernel_op_201 * tmp_kernel_op_214 +
                      tmp_kernel_op_202 * tmp_kernel_op_215 + tmp_kernel_op_203 * tmp_kernel_op_216 +
                      tmp_kernel_op_204 * tmp_kernel_op_217 + tmp_kernel_op_205 * tmp_kernel_op_218;
                  const walberla::float64 tmp_kernel_op_227 = tmp_kernel_op_176 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_228 = tmp_kernel_op_177 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_229 = tmp_kernel_op_178 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_230 = tmp_kernel_op_179 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_231 = tmp_kernel_op_100 * tmp_kernel_op_180;
                  const walberla::float64 tmp_kernel_op_232 = tmp_kernel_op_120 * tmp_kernel_op_181;
                  const walberla::float64 tmp_kernel_op_233 =
                      tmp_kernel_op_122 * tmp_kernel_op_227 + tmp_kernel_op_131 * tmp_kernel_op_228 +
                      tmp_kernel_op_138 * tmp_kernel_op_229 + tmp_kernel_op_145 * tmp_kernel_op_230 +
                      tmp_kernel_op_152 * tmp_kernel_op_231 + tmp_kernel_op_159 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_234 =
                      tmp_kernel_op_126 * tmp_kernel_op_227 + tmp_kernel_op_135 * tmp_kernel_op_228 +
                      tmp_kernel_op_142 * tmp_kernel_op_229 + tmp_kernel_op_149 * tmp_kernel_op_230 +
                      tmp_kernel_op_156 * tmp_kernel_op_231 + tmp_kernel_op_163 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_235 =
                      tmp_kernel_op_125 * tmp_kernel_op_227 + tmp_kernel_op_134 * tmp_kernel_op_228 +
                      tmp_kernel_op_141 * tmp_kernel_op_229 + tmp_kernel_op_148 * tmp_kernel_op_230 +
                      tmp_kernel_op_155 * tmp_kernel_op_231 + tmp_kernel_op_162 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_236 =
                      tmp_kernel_op_183 * tmp_kernel_op_227 + tmp_kernel_op_183 * tmp_kernel_op_228 +
                      tmp_kernel_op_183 * tmp_kernel_op_229 + tmp_kernel_op_183 * tmp_kernel_op_230 +
                      tmp_kernel_op_183 * tmp_kernel_op_231 + tmp_kernel_op_183 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_237 =
                      tmp_kernel_op_186 * tmp_kernel_op_227 + tmp_kernel_op_187 * tmp_kernel_op_228 +
                      tmp_kernel_op_188 * tmp_kernel_op_229 + tmp_kernel_op_189 * tmp_kernel_op_230 +
                      tmp_kernel_op_190 * tmp_kernel_op_231 + tmp_kernel_op_191 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_238 =
                      tmp_kernel_op_193 * tmp_kernel_op_227 + tmp_kernel_op_194 * tmp_kernel_op_228 +
                      tmp_kernel_op_195 * tmp_kernel_op_229 + tmp_kernel_op_196 * tmp_kernel_op_230 +
                      tmp_kernel_op_197 * tmp_kernel_op_231 + tmp_kernel_op_198 * tmp_kernel_op_232;
                  const walberla::float64 tmp_kernel_op_239 =
                      tmp_kernel_op_200 * tmp_kernel_op_227 + tmp_kernel_op_201 * tmp_kernel_op_228 +
                      tmp_kernel_op_202 * tmp_kernel_op_229 + tmp_kernel_op_203 * tmp_kernel_op_230 +
                      tmp_kernel_op_204 * tmp_kernel_op_231 + tmp_kernel_op_205 * tmp_kernel_op_232;
                  const int64_t           tmp_kernel_op_240 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_241 = tmp_kernel_op_183 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_242 = tmp_kernel_op_183 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_243 = tmp_kernel_op_183 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_244 = tmp_kernel_op_183 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_245 = tmp_kernel_op_100 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_246 = tmp_kernel_op_120 * tmp_kernel_op_183;
                  const walberla::float64 tmp_kernel_op_247 =
                      tmp_kernel_op_122 * tmp_kernel_op_241 + tmp_kernel_op_131 * tmp_kernel_op_242 +
                      tmp_kernel_op_138 * tmp_kernel_op_243 + tmp_kernel_op_145 * tmp_kernel_op_244 +
                      tmp_kernel_op_152 * tmp_kernel_op_245 + tmp_kernel_op_159 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_248 =
                      tmp_kernel_op_126 * tmp_kernel_op_241 + tmp_kernel_op_135 * tmp_kernel_op_242 +
                      tmp_kernel_op_142 * tmp_kernel_op_243 + tmp_kernel_op_149 * tmp_kernel_op_244 +
                      tmp_kernel_op_156 * tmp_kernel_op_245 + tmp_kernel_op_163 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_249 =
                      tmp_kernel_op_125 * tmp_kernel_op_241 + tmp_kernel_op_134 * tmp_kernel_op_242 +
                      tmp_kernel_op_141 * tmp_kernel_op_243 + tmp_kernel_op_148 * tmp_kernel_op_244 +
                      tmp_kernel_op_155 * tmp_kernel_op_245 + tmp_kernel_op_162 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_250 =
                      tmp_kernel_op_186 * tmp_kernel_op_241 + tmp_kernel_op_187 * tmp_kernel_op_242 +
                      tmp_kernel_op_188 * tmp_kernel_op_243 + tmp_kernel_op_189 * tmp_kernel_op_244 +
                      tmp_kernel_op_190 * tmp_kernel_op_245 + tmp_kernel_op_191 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_251 =
                      tmp_kernel_op_193 * tmp_kernel_op_241 + tmp_kernel_op_194 * tmp_kernel_op_242 +
                      tmp_kernel_op_195 * tmp_kernel_op_243 + tmp_kernel_op_196 * tmp_kernel_op_244 +
                      tmp_kernel_op_197 * tmp_kernel_op_245 + tmp_kernel_op_198 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_252 =
                      tmp_kernel_op_200 * tmp_kernel_op_241 + tmp_kernel_op_201 * tmp_kernel_op_242 +
                      tmp_kernel_op_202 * tmp_kernel_op_243 + tmp_kernel_op_203 * tmp_kernel_op_244 +
                      tmp_kernel_op_204 * tmp_kernel_op_245 + tmp_kernel_op_205 * tmp_kernel_op_246;
                  const walberla::float64 tmp_kernel_op_253 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_254 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_255 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_256 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_257 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_258 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_259 =
                      tmp_kernel_op_0 * tmp_kernel_op_253 + tmp_kernel_op_102 * tmp_kernel_op_258 +
                      tmp_kernel_op_22 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_42 +
                      tmp_kernel_op_256 * tmp_kernel_op_62 + tmp_kernel_op_257 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_260 = tmp_kernel_op_2 * tmp_kernel_op_21;
                  const walberla::float64 tmp_kernel_op_261 = tmp_kernel_op_24 * tmp_kernel_op_41;
                  const walberla::float64 tmp_kernel_op_262 = tmp_kernel_op_44 * tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_263 = tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_264 = tmp_kernel_op_101 * tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_265 = tmp_kernel_op_104 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_266 = tmp_kernel_op_260 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_261 * ( ( walberla::float64 )( tmp_kernel_op_25 ) ) +
                                                              tmp_kernel_op_262 * ( ( walberla::float64 )( tmp_kernel_op_45 ) ) +
                                                              tmp_kernel_op_263 * ( ( walberla::float64 )( tmp_kernel_op_65 ) ) +
                                                              tmp_kernel_op_264 * ( ( walberla::float64 )( tmp_kernel_op_85 ) ) +
                                                              tmp_kernel_op_265 * ( ( walberla::float64 )( tmp_kernel_op_105 ) );
                  const walberla::float64 tmp_kernel_op_267 = tmp_kernel_op_186 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_268 = tmp_kernel_op_187 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_269 = tmp_kernel_op_188 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_270 = tmp_kernel_op_189 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_271 = tmp_kernel_op_100 * tmp_kernel_op_190;
                  const walberla::float64 tmp_kernel_op_272 = tmp_kernel_op_120 * tmp_kernel_op_191;
                  const walberla::float64 tmp_kernel_op_273 =
                      tmp_kernel_op_122 * tmp_kernel_op_267 + tmp_kernel_op_131 * tmp_kernel_op_268 +
                      tmp_kernel_op_138 * tmp_kernel_op_269 + tmp_kernel_op_145 * tmp_kernel_op_270 +
                      tmp_kernel_op_152 * tmp_kernel_op_271 + tmp_kernel_op_159 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_274 = tmp_kernel_op_193 * tmp_kernel_op_20;
                  const walberla::float64 tmp_kernel_op_275 = tmp_kernel_op_194 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_276 = tmp_kernel_op_195 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_277 = tmp_kernel_op_196 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_278 = tmp_kernel_op_100 * tmp_kernel_op_197;
                  const walberla::float64 tmp_kernel_op_279 = tmp_kernel_op_120 * tmp_kernel_op_198;
                  const walberla::float64 tmp_kernel_op_280 =
                      tmp_kernel_op_122 * tmp_kernel_op_274 + tmp_kernel_op_131 * tmp_kernel_op_275 +
                      tmp_kernel_op_138 * tmp_kernel_op_276 + tmp_kernel_op_145 * tmp_kernel_op_277 +
                      tmp_kernel_op_152 * tmp_kernel_op_278 + tmp_kernel_op_159 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_281 = tmp_kernel_op_20 * tmp_kernel_op_200;
                  const walberla::float64 tmp_kernel_op_282 = tmp_kernel_op_201 * tmp_kernel_op_40;
                  const walberla::float64 tmp_kernel_op_283 = tmp_kernel_op_202 * tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_284 = tmp_kernel_op_203 * tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_285 = tmp_kernel_op_100 * tmp_kernel_op_204;
                  const walberla::float64 tmp_kernel_op_286 = tmp_kernel_op_120 * tmp_kernel_op_205;
                  const walberla::float64 tmp_kernel_op_287 =
                      tmp_kernel_op_122 * tmp_kernel_op_281 + tmp_kernel_op_131 * tmp_kernel_op_282 +
                      tmp_kernel_op_138 * tmp_kernel_op_283 + tmp_kernel_op_145 * tmp_kernel_op_284 +
                      tmp_kernel_op_152 * tmp_kernel_op_285 + tmp_kernel_op_159 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_288 =
                      tmp_kernel_op_1 * tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_101 * tmp_kernel_op_83 * ( ( walberla::float64 )( tmp_kernel_op_86 ) ) +
                      tmp_kernel_op_103 * tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_106 ) ) +
                      tmp_kernel_op_23 * tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_26 ) ) +
                      tmp_kernel_op_43 * tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                      tmp_kernel_op_63 * tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_66 ) );
                  const walberla::float64 tmp_kernel_op_289 =
                      tmp_kernel_op_126 * tmp_kernel_op_267 + tmp_kernel_op_135 * tmp_kernel_op_268 +
                      tmp_kernel_op_142 * tmp_kernel_op_269 + tmp_kernel_op_149 * tmp_kernel_op_270 +
                      tmp_kernel_op_156 * tmp_kernel_op_271 + tmp_kernel_op_163 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_290 =
                      tmp_kernel_op_126 * tmp_kernel_op_274 + tmp_kernel_op_135 * tmp_kernel_op_275 +
                      tmp_kernel_op_142 * tmp_kernel_op_276 + tmp_kernel_op_149 * tmp_kernel_op_277 +
                      tmp_kernel_op_156 * tmp_kernel_op_278 + tmp_kernel_op_163 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_291 =
                      tmp_kernel_op_126 * tmp_kernel_op_281 + tmp_kernel_op_135 * tmp_kernel_op_282 +
                      tmp_kernel_op_142 * tmp_kernel_op_283 + tmp_kernel_op_149 * tmp_kernel_op_284 +
                      tmp_kernel_op_156 * tmp_kernel_op_285 + tmp_kernel_op_163 * tmp_kernel_op_286;
                  const walberla::float64 tmp_kernel_op_292 =
                      tmp_kernel_op_125 * tmp_kernel_op_267 + tmp_kernel_op_134 * tmp_kernel_op_268 +
                      tmp_kernel_op_141 * tmp_kernel_op_269 + tmp_kernel_op_148 * tmp_kernel_op_270 +
                      tmp_kernel_op_155 * tmp_kernel_op_271 + tmp_kernel_op_162 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_293 =
                      tmp_kernel_op_125 * tmp_kernel_op_274 + tmp_kernel_op_134 * tmp_kernel_op_275 +
                      tmp_kernel_op_141 * tmp_kernel_op_276 + tmp_kernel_op_148 * tmp_kernel_op_277 +
                      tmp_kernel_op_155 * tmp_kernel_op_278 + tmp_kernel_op_162 * tmp_kernel_op_279;
                  const walberla::float64 tmp_kernel_op_294 =
                      tmp_kernel_op_125 * tmp_kernel_op_281 + tmp_kernel_op_134 * tmp_kernel_op_282 +
                      tmp_kernel_op_141 * tmp_kernel_op_283 + tmp_kernel_op_148 * tmp_kernel_op_284 +
                      tmp_kernel_op_155 * tmp_kernel_op_285 + tmp_kernel_op_162 * tmp_kernel_op_286;
                  const int64_t           tmp_kernel_op_295 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_296 =
                      tmp_kernel_op_193 * tmp_kernel_op_267 + tmp_kernel_op_194 * tmp_kernel_op_268 +
                      tmp_kernel_op_195 * tmp_kernel_op_269 + tmp_kernel_op_196 * tmp_kernel_op_270 +
                      tmp_kernel_op_197 * tmp_kernel_op_271 + tmp_kernel_op_198 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_297 =
                      tmp_kernel_op_200 * tmp_kernel_op_267 + tmp_kernel_op_201 * tmp_kernel_op_268 +
                      tmp_kernel_op_202 * tmp_kernel_op_269 + tmp_kernel_op_203 * tmp_kernel_op_270 +
                      tmp_kernel_op_204 * tmp_kernel_op_271 + tmp_kernel_op_205 * tmp_kernel_op_272;
                  const walberla::float64 tmp_kernel_op_298 =
                      tmp_kernel_op_200 * tmp_kernel_op_274 + tmp_kernel_op_201 * tmp_kernel_op_275 +
                      tmp_kernel_op_202 * tmp_kernel_op_276 + tmp_kernel_op_203 * tmp_kernel_op_277 +
                      tmp_kernel_op_204 * tmp_kernel_op_278 + tmp_kernel_op_205 * tmp_kernel_op_279;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 *
                          ( tmp_kernel_op_101 *
                                ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                                  ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                                    0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 *
                                ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                                  ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                                    0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                            tmp_kernel_op_21 *
                                ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                  ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 *
                                ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                                  ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                            tmp_kernel_op_61 *
                                ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                                  ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                                    0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 *
                                ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                                  ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                                    0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_175 + src_dof_2 * tmp_kernel_op_182 + src_dof_3 * tmp_kernel_op_184 +
                      src_dof_4 * tmp_kernel_op_166 + src_dof_5 * tmp_kernel_op_167 + src_dof_6 * tmp_kernel_op_168 +
                      src_dof_7 * tmp_kernel_op_192 + src_dof_8 * tmp_kernel_op_199 + src_dof_9 * tmp_kernel_op_206;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_175 +
                      src_dof_1 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_103 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_103 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_222 + src_dof_3 * tmp_kernel_op_223 + src_dof_4 * tmp_kernel_op_219 +
                      src_dof_5 * tmp_kernel_op_220 + src_dof_6 * tmp_kernel_op_221 + src_dof_7 * tmp_kernel_op_224 +
                      src_dof_8 * tmp_kernel_op_225 + src_dof_9 * tmp_kernel_op_226;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_182 + src_dof_1 * tmp_kernel_op_222 +
                      src_dof_2 *
                          ( tmp_kernel_op_207 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_208 *
                                ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_209 *
                                ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_210 *
                                ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_211 *
                                ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_212 * ( ( tmp_kernel_op_104 - 0.045788106754885358 ) *
                                                  ( tmp_kernel_op_104 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_236 + src_dof_4 * tmp_kernel_op_233 + src_dof_5 * tmp_kernel_op_234 +
                      src_dof_6 * tmp_kernel_op_235 + src_dof_7 * tmp_kernel_op_237 + src_dof_8 * tmp_kernel_op_238 +
                      src_dof_9 * tmp_kernel_op_239;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_184 + src_dof_1 * tmp_kernel_op_223 + src_dof_2 * tmp_kernel_op_236 +
                      src_dof_3 * ( tmp_kernel_op_207 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_208 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_209 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_210 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_211 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) +
                                    tmp_kernel_op_212 * ( ( walberla::float64 )( tmp_kernel_op_240 ) ) ) +
                      src_dof_4 * tmp_kernel_op_247 + src_dof_5 * tmp_kernel_op_248 + src_dof_6 * tmp_kernel_op_249 +
                      src_dof_7 * tmp_kernel_op_250 + src_dof_8 * tmp_kernel_op_251 + src_dof_9 * tmp_kernel_op_252;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_166 + src_dof_1 * tmp_kernel_op_219 + src_dof_2 * tmp_kernel_op_233 +
                      src_dof_3 * tmp_kernel_op_247 +
                      src_dof_4 * ( tmp_kernel_op_104 * tmp_kernel_op_258 + tmp_kernel_op_2 * tmp_kernel_op_253 +
                                    tmp_kernel_op_24 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_44 +
                                    tmp_kernel_op_256 * tmp_kernel_op_64 + tmp_kernel_op_257 * tmp_kernel_op_84 ) +
                      src_dof_5 * tmp_kernel_op_259 + src_dof_6 * tmp_kernel_op_266 + src_dof_7 * tmp_kernel_op_273 +
                      src_dof_8 * tmp_kernel_op_280 + src_dof_9 * tmp_kernel_op_287;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_167 + src_dof_1 * tmp_kernel_op_220 + src_dof_2 * tmp_kernel_op_234 +
                      src_dof_3 * tmp_kernel_op_248 + src_dof_4 * tmp_kernel_op_259 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_253 + tmp_kernel_op_103 * tmp_kernel_op_258 +
                                    tmp_kernel_op_23 * tmp_kernel_op_254 + tmp_kernel_op_255 * tmp_kernel_op_43 +
                                    tmp_kernel_op_256 * tmp_kernel_op_63 + tmp_kernel_op_257 * tmp_kernel_op_83 ) +
                      src_dof_6 * tmp_kernel_op_288 + src_dof_7 * tmp_kernel_op_289 + src_dof_8 * tmp_kernel_op_290 +
                      src_dof_9 * tmp_kernel_op_291;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_168 + src_dof_1 * tmp_kernel_op_221 + src_dof_2 * tmp_kernel_op_235 +
                      src_dof_3 * tmp_kernel_op_249 + src_dof_4 * tmp_kernel_op_266 + src_dof_5 * tmp_kernel_op_288 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_260 + tmp_kernel_op_103 * tmp_kernel_op_265 +
                                    tmp_kernel_op_23 * tmp_kernel_op_261 + tmp_kernel_op_262 * tmp_kernel_op_43 +
                                    tmp_kernel_op_263 * tmp_kernel_op_63 + tmp_kernel_op_264 * tmp_kernel_op_83 ) +
                      src_dof_7 * tmp_kernel_op_292 + src_dof_8 * tmp_kernel_op_293 + src_dof_9 * tmp_kernel_op_294;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_192 + src_dof_1 * tmp_kernel_op_224 + src_dof_2 * tmp_kernel_op_237 +
                      src_dof_3 * tmp_kernel_op_250 + src_dof_4 * tmp_kernel_op_273 + src_dof_5 * tmp_kernel_op_289 +
                      src_dof_6 * tmp_kernel_op_292 +
                      src_dof_7 *
                          ( tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) *
                                                                           ( -tmp_kernel_op_295 - tmp_kernel_op_87 ) ) ) ) +
                            tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) *
                                                                           ( -tmp_kernel_op_107 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) *
                                                                          ( -tmp_kernel_op_27 - tmp_kernel_op_295 ) ) ) ) +
                            tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_47 ) ) ) ) +
                            tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) *
                                                                          ( -tmp_kernel_op_295 - tmp_kernel_op_67 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_296 + src_dof_9 * tmp_kernel_op_297;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_199 + src_dof_1 * tmp_kernel_op_225 + src_dof_2 * tmp_kernel_op_238 +
                      src_dof_3 * tmp_kernel_op_251 + src_dof_4 * tmp_kernel_op_280 + src_dof_5 * tmp_kernel_op_290 +
                      src_dof_6 * tmp_kernel_op_293 + src_dof_7 * tmp_kernel_op_296 +
                      src_dof_8 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_298;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_206 + src_dof_1 * tmp_kernel_op_226 + src_dof_2 * tmp_kernel_op_239 +
                      src_dof_3 * tmp_kernel_op_252 + src_dof_4 * tmp_kernel_op_287 + src_dof_5 * tmp_kernel_op_291 +
                      src_dof_6 * tmp_kernel_op_294 + src_dof_7 * tmp_kernel_op_297 + src_dof_8 * tmp_kernel_op_298 +
                      src_dof_9 *
                          ( tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                                  ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                                  ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                                    ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) ) );
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
               }
      }
   }
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::
    computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_0_macro_3D(
        walberla::float64* RESTRICT _data_invDiag_Edge,
        walberla::float64* RESTRICT _data_invDiag_Vertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_120 * 4.0;
                  const int64_t           tmp_kernel_op_128 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_130 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_135 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_101 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 *
                          ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                            ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 *
                          ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                            ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 *
                          ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                            ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 *
                          ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                            ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_103 - 0.045788106754885358 ) * ( tmp_kernel_op_103 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_104 - 0.045788106754885358 ) * ( tmp_kernel_op_104 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_122 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_123 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_124 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_125 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_126 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_127 * ( ( walberla::float64 )( tmp_kernel_op_128 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_104 * tmp_kernel_op_134 + tmp_kernel_op_129 * tmp_kernel_op_2 +
                      tmp_kernel_op_130 * tmp_kernel_op_24 + tmp_kernel_op_131 * tmp_kernel_op_44 +
                      tmp_kernel_op_132 * tmp_kernel_op_64 + tmp_kernel_op_133 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_129 + tmp_kernel_op_103 * tmp_kernel_op_134 +
                      tmp_kernel_op_130 * tmp_kernel_op_23 + tmp_kernel_op_131 * tmp_kernel_op_43 +
                      tmp_kernel_op_132 * tmp_kernel_op_63 + tmp_kernel_op_133 * tmp_kernel_op_83;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_21 +
                                                        tmp_kernel_op_101 * tmp_kernel_op_83 * tmp_kernel_op_84 +
                                                        tmp_kernel_op_103 * tmp_kernel_op_104 * tmp_kernel_op_121 +
                                                        tmp_kernel_op_23 * tmp_kernel_op_24 * tmp_kernel_op_41 +
                                                        tmp_kernel_op_43 * tmp_kernel_op_44 * tmp_kernel_op_61 +
                                                        tmp_kernel_op_63 * tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) *
                                                                     ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) *
                                                                     ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_1 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_UP */
         const walberla::float64 tmp_coords_jac_0_BLUE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_6_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_3_0_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) +
             tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_3_1_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) +
             tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_3_2_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) +
             tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
         const walberla::float64 jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
         const walberla::float64 jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
         const walberla::float64 jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
         const walberla::float64 jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
         const walberla::float64 jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_17 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_11 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_31 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_37 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_37 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_31 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_51 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_57 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_57 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_51 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_71 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_77 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_77 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_71 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_91 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_97 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_97 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_91 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_BLUE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_BLUE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_BLUE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_111 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_117 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_BLUE_UP * tmp_kernel_op_117 + jac_affine_1_0_BLUE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_BLUE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_BLUE_UP * tmp_kernel_op_111 + jac_affine_1_1_BLUE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_BLUE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_120 * 4.0;
                  const int64_t           tmp_kernel_op_128 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_130 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_135 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_101 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 *
                          ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                            ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 *
                          ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                            ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 *
                          ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                            ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 *
                          ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                            ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_103 - 0.045788106754885358 ) * ( tmp_kernel_op_103 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_104 - 0.045788106754885358 ) * ( tmp_kernel_op_104 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_122 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_123 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_124 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_125 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_126 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_127 * ( ( walberla::float64 )( tmp_kernel_op_128 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_104 * tmp_kernel_op_134 + tmp_kernel_op_129 * tmp_kernel_op_2 +
                      tmp_kernel_op_130 * tmp_kernel_op_24 + tmp_kernel_op_131 * tmp_kernel_op_44 +
                      tmp_kernel_op_132 * tmp_kernel_op_64 + tmp_kernel_op_133 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_129 + tmp_kernel_op_103 * tmp_kernel_op_134 +
                      tmp_kernel_op_130 * tmp_kernel_op_23 + tmp_kernel_op_131 * tmp_kernel_op_43 +
                      tmp_kernel_op_132 * tmp_kernel_op_63 + tmp_kernel_op_133 * tmp_kernel_op_83;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_21 +
                                                        tmp_kernel_op_101 * tmp_kernel_op_83 * tmp_kernel_op_84 +
                                                        tmp_kernel_op_103 * tmp_kernel_op_104 * tmp_kernel_op_121 +
                                                        tmp_kernel_op_23 * tmp_kernel_op_24 * tmp_kernel_op_41 +
                                                        tmp_kernel_op_43 * tmp_kernel_op_44 * tmp_kernel_op_61 +
                                                        tmp_kernel_op_63 * tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) *
                                                                     ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) *
                                                                     ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::
    computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_1_macro_3D(
        walberla::float64* RESTRICT _data_invDiag_Edge,
        walberla::float64* RESTRICT _data_invDiag_Vertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_120 * 4.0;
                  const int64_t           tmp_kernel_op_128 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_130 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_135 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_101 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 *
                          ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                            ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 *
                          ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                            ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 *
                          ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                            ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 *
                          ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                            ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_103 - 0.045788106754885358 ) * ( tmp_kernel_op_103 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_104 - 0.045788106754885358 ) * ( tmp_kernel_op_104 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_122 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_123 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_124 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_125 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_126 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_127 * ( ( walberla::float64 )( tmp_kernel_op_128 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_104 * tmp_kernel_op_134 + tmp_kernel_op_129 * tmp_kernel_op_2 +
                      tmp_kernel_op_130 * tmp_kernel_op_24 + tmp_kernel_op_131 * tmp_kernel_op_44 +
                      tmp_kernel_op_132 * tmp_kernel_op_64 + tmp_kernel_op_133 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_129 + tmp_kernel_op_103 * tmp_kernel_op_134 +
                      tmp_kernel_op_130 * tmp_kernel_op_23 + tmp_kernel_op_131 * tmp_kernel_op_43 +
                      tmp_kernel_op_132 * tmp_kernel_op_63 + tmp_kernel_op_133 * tmp_kernel_op_83;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_21 +
                                                        tmp_kernel_op_101 * tmp_kernel_op_83 * tmp_kernel_op_84 +
                                                        tmp_kernel_op_103 * tmp_kernel_op_104 * tmp_kernel_op_121 +
                                                        tmp_kernel_op_23 * tmp_kernel_op_24 * tmp_kernel_op_41 +
                                                        tmp_kernel_op_43 * tmp_kernel_op_44 * tmp_kernel_op_61 +
                                                        tmp_kernel_op_63 * tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) *
                                                                     ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) *
                                                                     ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_1 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_UP */
         const walberla::float64 tmp_coords_jac_0_GREEN_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_6_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
         const walberla::float64 p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
         const walberla::float64 p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
         const walberla::float64 p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_2_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_2_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_2_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_3_0_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
         const walberla::float64 jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
         const walberla::float64 jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
         const walberla::float64 jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
         const walberla::float64 jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
         const walberla::float64 jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_17 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_11 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_31 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_37 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_37 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_31 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_51 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_57 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_57 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_51 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_71 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_77 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_77 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_71 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_91 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_97 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_97 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_91 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_GREEN_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_GREEN_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_GREEN_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_111 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_117 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_GREEN_UP * tmp_kernel_op_117 + jac_affine_1_0_GREEN_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_GREEN_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_GREEN_UP * tmp_kernel_op_111 + jac_affine_1_1_GREEN_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_GREEN_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_120 * 4.0;
                  const int64_t           tmp_kernel_op_128 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_130 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_135 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_101 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 *
                          ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                            ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 *
                          ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                            ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 *
                          ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                            ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 *
                          ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                            ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_103 - 0.045788106754885358 ) * ( tmp_kernel_op_103 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_104 - 0.045788106754885358 ) * ( tmp_kernel_op_104 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_122 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_123 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_124 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_125 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_126 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_127 * ( ( walberla::float64 )( tmp_kernel_op_128 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_104 * tmp_kernel_op_134 + tmp_kernel_op_129 * tmp_kernel_op_2 +
                      tmp_kernel_op_130 * tmp_kernel_op_24 + tmp_kernel_op_131 * tmp_kernel_op_44 +
                      tmp_kernel_op_132 * tmp_kernel_op_64 + tmp_kernel_op_133 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_129 + tmp_kernel_op_103 * tmp_kernel_op_134 +
                      tmp_kernel_op_130 * tmp_kernel_op_23 + tmp_kernel_op_131 * tmp_kernel_op_43 +
                      tmp_kernel_op_132 * tmp_kernel_op_63 + tmp_kernel_op_133 * tmp_kernel_op_83;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_21 +
                                                        tmp_kernel_op_101 * tmp_kernel_op_83 * tmp_kernel_op_84 +
                                                        tmp_kernel_op_103 * tmp_kernel_op_104 * tmp_kernel_op_121 +
                                                        tmp_kernel_op_23 * tmp_kernel_op_24 * tmp_kernel_op_41 +
                                                        tmp_kernel_op_43 * tmp_kernel_op_44 * tmp_kernel_op_61 +
                                                        tmp_kernel_op_63 * tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) *
                                                                     ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) *
                                                                     ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::
    computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_2_macro_3D(
        walberla::float64* RESTRICT _data_invDiag_Edge,
        walberla::float64* RESTRICT _data_invDiag_Vertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_120 * 4.0;
                  const int64_t           tmp_kernel_op_128 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_130 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_135 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_101 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 *
                          ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                            ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 *
                          ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                            ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 *
                          ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                            ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 *
                          ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                            ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_103 - 0.045788106754885358 ) * ( tmp_kernel_op_103 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_104 - 0.045788106754885358 ) * ( tmp_kernel_op_104 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_122 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_123 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_124 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_125 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_126 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_127 * ( ( walberla::float64 )( tmp_kernel_op_128 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_104 * tmp_kernel_op_134 + tmp_kernel_op_129 * tmp_kernel_op_2 +
                      tmp_kernel_op_130 * tmp_kernel_op_24 + tmp_kernel_op_131 * tmp_kernel_op_44 +
                      tmp_kernel_op_132 * tmp_kernel_op_64 + tmp_kernel_op_133 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_129 + tmp_kernel_op_103 * tmp_kernel_op_134 +
                      tmp_kernel_op_130 * tmp_kernel_op_23 + tmp_kernel_op_131 * tmp_kernel_op_43 +
                      tmp_kernel_op_132 * tmp_kernel_op_63 + tmp_kernel_op_133 * tmp_kernel_op_83;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_21 +
                                                        tmp_kernel_op_101 * tmp_kernel_op_83 * tmp_kernel_op_84 +
                                                        tmp_kernel_op_103 * tmp_kernel_op_104 * tmp_kernel_op_121 +
                                                        tmp_kernel_op_23 * tmp_kernel_op_24 * tmp_kernel_op_41 +
                                                        tmp_kernel_op_43 * tmp_kernel_op_44 * tmp_kernel_op_61 +
                                                        tmp_kernel_op_63 * tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) *
                                                                     ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) *
                                                                     ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_3 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_DOWN */
         const walberla::float64 tmp_coords_jac_0_BLUE_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_6_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_8_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 tmp_coords_jac_9_BLUE_DOWN   = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_0_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) +
             tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_1_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) +
             tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_2_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) +
             tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
         const walberla::float64 jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
         const walberla::float64 jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
         const walberla::float64 jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
         const walberla::float64 jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
         const walberla::float64 jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_12 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_18 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_17 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_18 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_11 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_12 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_31 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_32 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_37 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_38 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_37 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_38 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_31 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_32 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_51 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_52 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_57 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_58 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_57 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_58 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_51 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_52 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_71 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_72 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_77 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_78 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_77 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_78 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_71 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_72 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_91 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_92 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_97 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_98 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_97 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_98 +
                                  jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_91 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_92 +
                                      jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_BLUE_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_BLUE_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_BLUE_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_BLUE_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_BLUE_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow(
                          abs( ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_111 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_112 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_113 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_117 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_118 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_119 ) -
                               ( jac_affine_0_0_BLUE_DOWN * tmp_kernel_op_117 + jac_affine_1_0_BLUE_DOWN * tmp_kernel_op_118 +
                                 jac_affine_2_0_BLUE_DOWN * tmp_kernel_op_119 ) *
                                   ( jac_affine_0_1_BLUE_DOWN * tmp_kernel_op_111 + jac_affine_1_1_BLUE_DOWN * tmp_kernel_op_112 +
                                     jac_affine_2_1_BLUE_DOWN * tmp_kernel_op_113 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_120 * 4.0;
                  const int64_t           tmp_kernel_op_128 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_130 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_135 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_101 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 *
                          ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                            ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 *
                          ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                            ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 *
                          ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                            ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 *
                          ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                            ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_103 - 0.045788106754885358 ) * ( tmp_kernel_op_103 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_104 - 0.045788106754885358 ) * ( tmp_kernel_op_104 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_122 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_123 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_124 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_125 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_126 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_127 * ( ( walberla::float64 )( tmp_kernel_op_128 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_104 * tmp_kernel_op_134 + tmp_kernel_op_129 * tmp_kernel_op_2 +
                      tmp_kernel_op_130 * tmp_kernel_op_24 + tmp_kernel_op_131 * tmp_kernel_op_44 +
                      tmp_kernel_op_132 * tmp_kernel_op_64 + tmp_kernel_op_133 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_129 + tmp_kernel_op_103 * tmp_kernel_op_134 +
                      tmp_kernel_op_130 * tmp_kernel_op_23 + tmp_kernel_op_131 * tmp_kernel_op_43 +
                      tmp_kernel_op_132 * tmp_kernel_op_63 + tmp_kernel_op_133 * tmp_kernel_op_83;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_21 +
                                                        tmp_kernel_op_101 * tmp_kernel_op_83 * tmp_kernel_op_84 +
                                                        tmp_kernel_op_103 * tmp_kernel_op_104 * tmp_kernel_op_121 +
                                                        tmp_kernel_op_23 * tmp_kernel_op_24 * tmp_kernel_op_41 +
                                                        tmp_kernel_op_43 * tmp_kernel_op_44 * tmp_kernel_op_61 +
                                                        tmp_kernel_op_63 * tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) *
                                                                     ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) *
                                                                     ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) );
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMassIcosahedralShellMapOperator::
    computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMassIcosahedralShellMapOperator_facet_id_3_macro_3D(
        walberla::float64* RESTRICT _data_invDiag_Edge,
        walberla::float64* RESTRICT _data_invDiag_Vertex,
        walberla::float64           forVertex_0,
        walberla::float64           forVertex_1,
        walberla::float64           forVertex_2,
        walberla::float64           macro_vertex_coord_id_0comp0,
        walberla::float64           macro_vertex_coord_id_0comp1,
        walberla::float64           macro_vertex_coord_id_0comp2,
        walberla::float64           macro_vertex_coord_id_1comp0,
        walberla::float64           macro_vertex_coord_id_1comp1,
        walberla::float64           macro_vertex_coord_id_1comp2,
        walberla::float64           macro_vertex_coord_id_2comp0,
        walberla::float64           macro_vertex_coord_id_2comp1,
        walberla::float64           macro_vertex_coord_id_2comp2,
        walberla::float64           macro_vertex_coord_id_3comp0,
        walberla::float64           macro_vertex_coord_id_3comp1,
        walberla::float64           macro_vertex_coord_id_3comp2,
        int64_t                     micro_edges_per_macro_edge,
        walberla::float64           micro_edges_per_macro_edge_float,
        walberla::float64           radRayVertex,
        walberla::float64           radRefVertex,
        walberla::float64           rayVertex_0,
        walberla::float64           rayVertex_1,
        walberla::float64           rayVertex_2,
        walberla::float64           refVertex_0,
        walberla::float64           refVertex_1,
        walberla::float64           refVertex_2,
        walberla::float64           thrVertex_0,
        walberla::float64           thrVertex_1,
        walberla::float64           thrVertex_2 ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_0_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 jac_affine_0_0_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_12 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_13 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_18 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_19 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_17 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_18 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_19 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_11 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_12 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_13 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_32 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_33 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_38 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_39 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_37 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_38 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_39 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_31 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_32 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_33 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_52 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_53 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_58 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_59 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_57 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_58 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_59 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_51 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_52 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_53 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_72 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_73 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_78 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_79 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_77 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_78 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_79 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_71 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_72 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_73 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_92 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_93 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_98 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_99 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_97 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_98 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_99 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_91 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_92 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_93 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_WHITE_UP * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_WHITE_UP * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_WHITE_UP * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_WHITE_UP * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_WHITE_UP * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_112 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_118 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_WHITE_UP * tmp_kernel_op_117 + jac_affine_1_0_WHITE_UP * tmp_kernel_op_118 +
                                  jac_affine_2_0_WHITE_UP * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_WHITE_UP * tmp_kernel_op_111 + jac_affine_1_1_WHITE_UP * tmp_kernel_op_112 +
                                      jac_affine_2_1_WHITE_UP * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_120 * 4.0;
                  const int64_t           tmp_kernel_op_128 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_130 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_135 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_101 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 *
                          ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                            ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 *
                          ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                            ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 *
                          ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                            ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 *
                          ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                            ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_103 - 0.045788106754885358 ) * ( tmp_kernel_op_103 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_104 - 0.045788106754885358 ) * ( tmp_kernel_op_104 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_122 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_123 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_124 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_125 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_126 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_127 * ( ( walberla::float64 )( tmp_kernel_op_128 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_104 * tmp_kernel_op_134 + tmp_kernel_op_129 * tmp_kernel_op_2 +
                      tmp_kernel_op_130 * tmp_kernel_op_24 + tmp_kernel_op_131 * tmp_kernel_op_44 +
                      tmp_kernel_op_132 * tmp_kernel_op_64 + tmp_kernel_op_133 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_129 + tmp_kernel_op_103 * tmp_kernel_op_134 +
                      tmp_kernel_op_130 * tmp_kernel_op_23 + tmp_kernel_op_131 * tmp_kernel_op_43 +
                      tmp_kernel_op_132 * tmp_kernel_op_63 + tmp_kernel_op_133 * tmp_kernel_op_83;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_21 +
                                                        tmp_kernel_op_101 * tmp_kernel_op_83 * tmp_kernel_op_84 +
                                                        tmp_kernel_op_103 * tmp_kernel_op_104 * tmp_kernel_op_121 +
                                                        tmp_kernel_op_23 * tmp_kernel_op_24 * tmp_kernel_op_41 +
                                                        tmp_kernel_op_43 * tmp_kernel_op_44 * tmp_kernel_op_61 +
                                                        tmp_kernel_op_63 * tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) *
                                                                     ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) *
                                                                     ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_DOWN */
         const walberla::float64 tmp_coords_jac_0_GREEN_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_3_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_4_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_5_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_6_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_7_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_8_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_9_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_0_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 + tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_1_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 + tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 jac_affine_0_0_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
         const walberla::float64 jac_affine_0_1_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
         const walberla::float64 jac_affine_1_0_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
         const walberla::float64 jac_affine_1_1_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
         const walberla::float64 jac_affine_2_0_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
         const walberla::float64 jac_affine_2_1_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_blending_op_0 = -p_affine_0_2 + p_affine_1_2;
                  const walberla::float64 tmp_blending_op_1 = -p_affine_0_2 + p_affine_2_2;
                  const walberla::float64 tmp_blending_op_2 = p_affine_0_2;
                  const walberla::float64 tmp_blending_op_3 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_4  = ( tmp_blending_op_3 * tmp_blending_op_3 );
                  const walberla::float64 tmp_blending_op_5  = rayVertex_1 - refVertex_1;
                  const walberla::float64 tmp_blending_op_6  = -rayVertex_0;
                  const walberla::float64 tmp_blending_op_7  = -forVertex_0 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_8  = rayVertex_2 - thrVertex_2;
                  const walberla::float64 tmp_blending_op_9  = tmp_blending_op_7 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_10 = rayVertex_2 - refVertex_2;
                  const walberla::float64 tmp_blending_op_11 = rayVertex_1 - thrVertex_1;
                  const walberla::float64 tmp_blending_op_12 = tmp_blending_op_11 * tmp_blending_op_7;
                  const walberla::float64 tmp_blending_op_13 = -rayVertex_1;
                  const walberla::float64 tmp_blending_op_14 = -forVertex_1 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_15 = rayVertex_0 - thrVertex_0;
                  const walberla::float64 tmp_blending_op_16 = rayVertex_0 - refVertex_0;
                  const walberla::float64 tmp_blending_op_17 = -rayVertex_2;
                  const walberla::float64 tmp_blending_op_18 = -forVertex_2 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_19 = tmp_blending_op_14 * tmp_blending_op_8;
                  const walberla::float64 tmp_blending_op_20 = tmp_blending_op_15 * tmp_blending_op_18;
                  const walberla::float64 tmp_blending_op_21 =
                      -tmp_blending_op_10 * tmp_blending_op_12 + tmp_blending_op_10 * tmp_blending_op_14 * tmp_blending_op_15 +
                      tmp_blending_op_11 * tmp_blending_op_16 * tmp_blending_op_18 - tmp_blending_op_16 * tmp_blending_op_19 -
                      tmp_blending_op_20 * tmp_blending_op_5 + tmp_blending_op_5 * tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_22 = radRayVertex * tmp_blending_op_21;
                  const walberla::float64 tmp_blending_op_23 = radRayVertex - radRefVertex;
                  const walberla::float64 tmp_blending_op_24 = -tmp_blending_op_17 - tmp_blending_op_3;
                  const walberla::float64 tmp_blending_op_25 = -p_affine_0_0 + p_affine_1_0;
                  const walberla::float64 tmp_blending_op_26 = -p_affine_0_0 + p_affine_2_0;
                  const walberla::float64 tmp_blending_op_27 = p_affine_0_0;
                  const walberla::float64 tmp_blending_op_28 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_29 = -tmp_blending_op_28 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_30 = -p_affine_0_1 + p_affine_1_1;
                  const walberla::float64 tmp_blending_op_31 = -p_affine_0_1 + p_affine_2_1;
                  const walberla::float64 tmp_blending_op_32 = p_affine_0_1;
                  const walberla::float64 tmp_blending_op_33 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_34 = -tmp_blending_op_13 - tmp_blending_op_33;
                  const walberla::float64 tmp_blending_op_35 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_29 -
                                             tmp_blending_op_12 * tmp_blending_op_24 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_24 -
                                             tmp_blending_op_19 * tmp_blending_op_29 - tmp_blending_op_20 * tmp_blending_op_34 +
                                             tmp_blending_op_34 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_36 = -tmp_blending_op_35;
                  const walberla::float64 tmp_blending_op_37 = ( tmp_blending_op_28 * tmp_blending_op_28 );
                  const walberla::float64 tmp_blending_op_38 = ( tmp_blending_op_33 * tmp_blending_op_33 );
                  const walberla::float64 tmp_blending_op_39 = tmp_blending_op_37 + tmp_blending_op_38 + tmp_blending_op_4;
                  const walberla::float64 tmp_blending_op_40 =
                      tmp_blending_op_23 * ( -tmp_blending_op_12 + tmp_blending_op_14 * tmp_blending_op_15 );
                  const walberla::float64 tmp_blending_op_41 = 1.0 / ( tmp_blending_op_21 ) * 1.0;
                  const walberla::float64 tmp_blending_op_42 =
                      pow( tmp_blending_op_39, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_43 = tmp_blending_op_15 * tmp_blending_op_18 - tmp_blending_op_9;
                  const walberla::float64 tmp_blending_op_44 = tmp_blending_op_23 * tmp_blending_op_39;
                  const walberla::float64 tmp_blending_op_45 =
                      -tmp_blending_op_33 * tmp_blending_op_35 - tmp_blending_op_43 * tmp_blending_op_44;
                  const walberla::float64 tmp_blending_op_46 = tmp_blending_op_3 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_47 = tmp_blending_op_11 * tmp_blending_op_18 - tmp_blending_op_19;
                  const walberla::float64 tmp_blending_op_48 =
                      tmp_blending_op_28 * tmp_blending_op_36 + tmp_blending_op_44 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_49 =
                      tmp_blending_op_3 * tmp_blending_op_36 + tmp_blending_op_39 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_50 = tmp_blending_op_33 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_51 = -tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_52 = tmp_blending_op_28 * tmp_blending_op_42;
                  const walberla::float64 tmp_blending_op_53 = tmp_blending_op_23 * tmp_blending_op_47;
                  const walberla::float64 tmp_blending_op_54 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_55 = ( tmp_blending_op_54 * tmp_blending_op_54 );
                  const walberla::float64 tmp_blending_op_56 = -tmp_blending_op_17 - tmp_blending_op_54;
                  const walberla::float64 tmp_blending_op_57 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_58 = -tmp_blending_op_57 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_59 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_60 = -tmp_blending_op_13 - tmp_blending_op_59;
                  const walberla::float64 tmp_blending_op_61 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_58 -
                                             tmp_blending_op_12 * tmp_blending_op_56 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_56 -
                                             tmp_blending_op_19 * tmp_blending_op_58 - tmp_blending_op_20 * tmp_blending_op_60 +
                                             tmp_blending_op_60 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_62 = -tmp_blending_op_61;
                  const walberla::float64 tmp_blending_op_63 = ( tmp_blending_op_57 * tmp_blending_op_57 );
                  const walberla::float64 tmp_blending_op_64 = ( tmp_blending_op_59 * tmp_blending_op_59 );
                  const walberla::float64 tmp_blending_op_65 = tmp_blending_op_55 + tmp_blending_op_63 + tmp_blending_op_64;
                  const walberla::float64 tmp_blending_op_66 =
                      tmp_blending_op_41 * pow( tmp_blending_op_65, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_67 = tmp_blending_op_23 * tmp_blending_op_43;
                  const walberla::float64 tmp_blending_op_68 =
                      -tmp_blending_op_59 * tmp_blending_op_61 - tmp_blending_op_65 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_69 = tmp_blending_op_54 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_70 =
                      tmp_blending_op_53 * tmp_blending_op_65 + tmp_blending_op_57 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_71 =
                      tmp_blending_op_40 * tmp_blending_op_65 + tmp_blending_op_54 * tmp_blending_op_62;
                  const walberla::float64 tmp_blending_op_72 = tmp_blending_op_59 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_73 = tmp_blending_op_57 * tmp_blending_op_66;
                  const walberla::float64 tmp_blending_op_74 =
                      tmp_blending_op_0 * 0.81684757298045851 + tmp_blending_op_1 * 0.091576213509770715 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_75 = ( tmp_blending_op_74 * tmp_blending_op_74 );
                  const walberla::float64 tmp_blending_op_76 = -tmp_blending_op_17 - tmp_blending_op_74;
                  const walberla::float64 tmp_blending_op_77 =
                      tmp_blending_op_25 * 0.81684757298045851 + tmp_blending_op_26 * 0.091576213509770715 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_78 = -tmp_blending_op_6 - tmp_blending_op_77;
                  const walberla::float64 tmp_blending_op_79 =
                      tmp_blending_op_30 * 0.81684757298045851 + tmp_blending_op_31 * 0.091576213509770715 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_80 = -tmp_blending_op_13 - tmp_blending_op_79;
                  const walberla::float64 tmp_blending_op_81 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_78 -
                                             tmp_blending_op_12 * tmp_blending_op_76 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_76 -
                                             tmp_blending_op_19 * tmp_blending_op_78 - tmp_blending_op_20 * tmp_blending_op_80 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_80 );
                  const walberla::float64 tmp_blending_op_82 = -tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_83 = ( tmp_blending_op_77 * tmp_blending_op_77 );
                  const walberla::float64 tmp_blending_op_84 = ( tmp_blending_op_79 * tmp_blending_op_79 );
                  const walberla::float64 tmp_blending_op_85 = tmp_blending_op_75 + tmp_blending_op_83 + tmp_blending_op_84;
                  const walberla::float64 tmp_blending_op_86 =
                      tmp_blending_op_41 * pow( tmp_blending_op_85, -1.5000000000000000 );
                  const walberla::float64 tmp_blending_op_87 =
                      -tmp_blending_op_67 * tmp_blending_op_85 - tmp_blending_op_79 * tmp_blending_op_81;
                  const walberla::float64 tmp_blending_op_88 = tmp_blending_op_74 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_89 =
                      tmp_blending_op_53 * tmp_blending_op_85 + tmp_blending_op_77 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_90 =
                      tmp_blending_op_40 * tmp_blending_op_85 + tmp_blending_op_74 * tmp_blending_op_82;
                  const walberla::float64 tmp_blending_op_91 = tmp_blending_op_79 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_92 = tmp_blending_op_77 * tmp_blending_op_86;
                  const walberla::float64 tmp_blending_op_93 =
                      tmp_blending_op_0 * 0.10810301816807022 + tmp_blending_op_1 * 0.44594849091596489 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_94 = ( tmp_blending_op_93 * tmp_blending_op_93 );
                  const walberla::float64 tmp_blending_op_95 = -tmp_blending_op_17 - tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_96 =
                      tmp_blending_op_25 * 0.10810301816807022 + tmp_blending_op_26 * 0.44594849091596489 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_97 = -tmp_blending_op_6 - tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_98 =
                      tmp_blending_op_30 * 0.10810301816807022 + tmp_blending_op_31 * 0.44594849091596489 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_99 = -tmp_blending_op_13 - tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_100 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_18 * tmp_blending_op_97 -
                                             tmp_blending_op_12 * tmp_blending_op_95 +
                                             tmp_blending_op_14 * tmp_blending_op_15 * tmp_blending_op_95 -
                                             tmp_blending_op_19 * tmp_blending_op_97 - tmp_blending_op_20 * tmp_blending_op_99 +
                                             tmp_blending_op_7 * tmp_blending_op_8 * tmp_blending_op_99 );
                  const walberla::float64 tmp_blending_op_101 = -tmp_blending_op_100;
                  const walberla::float64 tmp_blending_op_102 = ( tmp_blending_op_96 * tmp_blending_op_96 );
                  const walberla::float64 tmp_blending_op_103 = ( tmp_blending_op_98 * tmp_blending_op_98 );
                  const walberla::float64 tmp_blending_op_104 = tmp_blending_op_102 + tmp_blending_op_103 + tmp_blending_op_94;
                  const walberla::float64 tmp_blending_op_105 =
                      pow( tmp_blending_op_104, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_106 =
                      -tmp_blending_op_100 * tmp_blending_op_98 - tmp_blending_op_104 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_107 = tmp_blending_op_105 * tmp_blending_op_93;
                  const walberla::float64 tmp_blending_op_108 =
                      tmp_blending_op_101 * tmp_blending_op_96 + tmp_blending_op_104 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_109 =
                      tmp_blending_op_101 * tmp_blending_op_93 + tmp_blending_op_104 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_110 = tmp_blending_op_105 * tmp_blending_op_98;
                  const walberla::float64 tmp_blending_op_111 = tmp_blending_op_105 * tmp_blending_op_96;
                  const walberla::float64 tmp_blending_op_112 =
                      tmp_blending_op_0 * 0.091576213509770715 + tmp_blending_op_1 * 0.81684757298045851 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_113 = ( tmp_blending_op_112 * tmp_blending_op_112 );
                  const walberla::float64 tmp_blending_op_114 = -tmp_blending_op_112 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_115 =
                      tmp_blending_op_25 * 0.091576213509770715 + tmp_blending_op_26 * 0.81684757298045851 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_116 = -tmp_blending_op_115 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_117 =
                      tmp_blending_op_30 * 0.091576213509770715 + tmp_blending_op_31 * 0.81684757298045851 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_118 = -tmp_blending_op_117 - tmp_blending_op_13;
                  const walberla::float64 tmp_blending_op_119 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_116 * tmp_blending_op_18 -
                                             tmp_blending_op_114 * tmp_blending_op_12 +
                                             tmp_blending_op_114 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_116 * tmp_blending_op_19 - tmp_blending_op_118 * tmp_blending_op_20 +
                                             tmp_blending_op_118 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_120 = -tmp_blending_op_119;
                  const walberla::float64 tmp_blending_op_121 = ( tmp_blending_op_115 * tmp_blending_op_115 );
                  const walberla::float64 tmp_blending_op_122 = ( tmp_blending_op_117 * tmp_blending_op_117 );
                  const walberla::float64 tmp_blending_op_123 = tmp_blending_op_113 + tmp_blending_op_121 + tmp_blending_op_122;
                  const walberla::float64 tmp_blending_op_124 =
                      pow( tmp_blending_op_123, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_125 =
                      -tmp_blending_op_117 * tmp_blending_op_119 - tmp_blending_op_123 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_126 = tmp_blending_op_112 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_127 =
                      tmp_blending_op_115 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_128 =
                      tmp_blending_op_112 * tmp_blending_op_120 + tmp_blending_op_123 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_129 = tmp_blending_op_117 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_130 = tmp_blending_op_115 * tmp_blending_op_124;
                  const walberla::float64 tmp_blending_op_131 =
                      tmp_blending_op_0 * 0.44594849091596489 + tmp_blending_op_1 * 0.10810301816807022 + tmp_blending_op_2;
                  const walberla::float64 tmp_blending_op_132 = ( tmp_blending_op_131 * tmp_blending_op_131 );
                  const walberla::float64 tmp_blending_op_133 = -tmp_blending_op_131 - tmp_blending_op_17;
                  const walberla::float64 tmp_blending_op_134 =
                      tmp_blending_op_25 * 0.44594849091596489 + tmp_blending_op_26 * 0.10810301816807022 + tmp_blending_op_27;
                  const walberla::float64 tmp_blending_op_135 = -tmp_blending_op_134 - tmp_blending_op_6;
                  const walberla::float64 tmp_blending_op_136 =
                      tmp_blending_op_30 * 0.44594849091596489 + tmp_blending_op_31 * 0.10810301816807022 + tmp_blending_op_32;
                  const walberla::float64 tmp_blending_op_137 = -tmp_blending_op_13 - tmp_blending_op_136;
                  const walberla::float64 tmp_blending_op_138 =
                      tmp_blending_op_22 -
                      tmp_blending_op_23 * ( tmp_blending_op_11 * tmp_blending_op_135 * tmp_blending_op_18 -
                                             tmp_blending_op_12 * tmp_blending_op_133 +
                                             tmp_blending_op_133 * tmp_blending_op_14 * tmp_blending_op_15 -
                                             tmp_blending_op_135 * tmp_blending_op_19 - tmp_blending_op_137 * tmp_blending_op_20 +
                                             tmp_blending_op_137 * tmp_blending_op_7 * tmp_blending_op_8 );
                  const walberla::float64 tmp_blending_op_139 = -tmp_blending_op_138;
                  const walberla::float64 tmp_blending_op_140 = ( tmp_blending_op_134 * tmp_blending_op_134 );
                  const walberla::float64 tmp_blending_op_141 = ( tmp_blending_op_136 * tmp_blending_op_136 );
                  const walberla::float64 tmp_blending_op_142 = tmp_blending_op_132 + tmp_blending_op_140 + tmp_blending_op_141;
                  const walberla::float64 tmp_blending_op_143 =
                      pow( tmp_blending_op_142, -1.5000000000000000 ) * tmp_blending_op_41;
                  const walberla::float64 tmp_blending_op_144 =
                      -tmp_blending_op_136 * tmp_blending_op_138 - tmp_blending_op_142 * tmp_blending_op_67;
                  const walberla::float64 tmp_blending_op_145 = tmp_blending_op_131 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_146 =
                      tmp_blending_op_134 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_53;
                  const walberla::float64 tmp_blending_op_147 =
                      tmp_blending_op_131 * tmp_blending_op_139 + tmp_blending_op_142 * tmp_blending_op_40;
                  const walberla::float64 tmp_blending_op_148 = tmp_blending_op_136 * tmp_blending_op_143;
                  const walberla::float64 tmp_blending_op_149 = tmp_blending_op_134 * tmp_blending_op_143;
                  const walberla::float64 jac_blending_2_2_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_4 +
                        tmp_blending_op_39 * ( tmp_blending_op_3 * tmp_blending_op_40 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_1_q_5 = tmp_blending_op_45 * tmp_blending_op_46;
                  const walberla::float64 jac_blending_2_0_q_5 = tmp_blending_op_46 * tmp_blending_op_48;
                  const walberla::float64 jac_blending_1_2_q_5 = tmp_blending_op_49 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_1_1_q_5 =
                      tmp_blending_op_42 *
                      ( tmp_blending_op_36 * tmp_blending_op_38 +
                        tmp_blending_op_39 * ( tmp_blending_op_33 * tmp_blending_op_51 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_1_0_q_5 = tmp_blending_op_48 * tmp_blending_op_50;
                  const walberla::float64 jac_blending_0_2_q_5 = tmp_blending_op_49 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_1_q_5 = tmp_blending_op_45 * tmp_blending_op_52;
                  const walberla::float64 jac_blending_0_0_q_5 =
                      tmp_blending_op_42 *
                      ( -tmp_blending_op_35 * tmp_blending_op_37 +
                        tmp_blending_op_39 * ( tmp_blending_op_28 * tmp_blending_op_53 + tmp_blending_op_35 ) );
                  const walberla::float64 jac_blending_2_2_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_55 * tmp_blending_op_62 +
                        tmp_blending_op_65 * ( tmp_blending_op_40 * tmp_blending_op_54 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_1_q_4 = tmp_blending_op_68 * tmp_blending_op_69;
                  const walberla::float64 jac_blending_2_0_q_4 = tmp_blending_op_69 * tmp_blending_op_70;
                  const walberla::float64 jac_blending_1_2_q_4 = tmp_blending_op_71 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_1_1_q_4 =
                      tmp_blending_op_66 *
                      ( tmp_blending_op_62 * tmp_blending_op_64 +
                        tmp_blending_op_65 * ( tmp_blending_op_51 * tmp_blending_op_59 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_1_0_q_4 = tmp_blending_op_70 * tmp_blending_op_72;
                  const walberla::float64 jac_blending_0_2_q_4 = tmp_blending_op_71 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_1_q_4 = tmp_blending_op_68 * tmp_blending_op_73;
                  const walberla::float64 jac_blending_0_0_q_4 =
                      tmp_blending_op_66 *
                      ( -tmp_blending_op_61 * tmp_blending_op_63 +
                        tmp_blending_op_65 * ( tmp_blending_op_53 * tmp_blending_op_57 + tmp_blending_op_61 ) );
                  const walberla::float64 jac_blending_2_2_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_75 * tmp_blending_op_82 +
                        tmp_blending_op_85 * ( tmp_blending_op_40 * tmp_blending_op_74 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_1_q_3 = tmp_blending_op_87 * tmp_blending_op_88;
                  const walberla::float64 jac_blending_2_0_q_3 = tmp_blending_op_88 * tmp_blending_op_89;
                  const walberla::float64 jac_blending_1_2_q_3 = tmp_blending_op_90 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_1_1_q_3 =
                      tmp_blending_op_86 *
                      ( tmp_blending_op_82 * tmp_blending_op_84 +
                        tmp_blending_op_85 * ( tmp_blending_op_51 * tmp_blending_op_79 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_1_0_q_3 = tmp_blending_op_89 * tmp_blending_op_91;
                  const walberla::float64 jac_blending_0_2_q_3 = tmp_blending_op_90 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_1_q_3 = tmp_blending_op_87 * tmp_blending_op_92;
                  const walberla::float64 jac_blending_0_0_q_3 =
                      tmp_blending_op_86 *
                      ( -tmp_blending_op_81 * tmp_blending_op_83 +
                        tmp_blending_op_85 * ( tmp_blending_op_53 * tmp_blending_op_77 + tmp_blending_op_81 ) );
                  const walberla::float64 jac_blending_2_2_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_94 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_40 * tmp_blending_op_93 ) );
                  const walberla::float64 jac_blending_2_1_q_2 = tmp_blending_op_106 * tmp_blending_op_107;
                  const walberla::float64 jac_blending_2_0_q_2 = tmp_blending_op_107 * tmp_blending_op_108;
                  const walberla::float64 jac_blending_1_2_q_2 = tmp_blending_op_109 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_1_1_q_2 =
                      tmp_blending_op_105 *
                      ( tmp_blending_op_101 * tmp_blending_op_103 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_51 * tmp_blending_op_98 ) );
                  const walberla::float64 jac_blending_1_0_q_2 = tmp_blending_op_108 * tmp_blending_op_110;
                  const walberla::float64 jac_blending_0_2_q_2 = tmp_blending_op_109 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_1_q_2 = tmp_blending_op_106 * tmp_blending_op_111;
                  const walberla::float64 jac_blending_0_0_q_2 =
                      tmp_blending_op_105 *
                      ( -tmp_blending_op_100 * tmp_blending_op_102 +
                        tmp_blending_op_104 * ( tmp_blending_op_100 + tmp_blending_op_53 * tmp_blending_op_96 ) );
                  const walberla::float64 jac_blending_2_2_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_113 * tmp_blending_op_120 +
                        tmp_blending_op_123 * ( tmp_blending_op_112 * tmp_blending_op_40 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_1_q_1 = tmp_blending_op_125 * tmp_blending_op_126;
                  const walberla::float64 jac_blending_2_0_q_1 = tmp_blending_op_126 * tmp_blending_op_127;
                  const walberla::float64 jac_blending_1_2_q_1 = tmp_blending_op_128 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_1_1_q_1 =
                      tmp_blending_op_124 *
                      ( tmp_blending_op_120 * tmp_blending_op_122 +
                        tmp_blending_op_123 * ( tmp_blending_op_117 * tmp_blending_op_51 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_1_0_q_1 = tmp_blending_op_127 * tmp_blending_op_129;
                  const walberla::float64 jac_blending_0_2_q_1 = tmp_blending_op_128 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_1_q_1 = tmp_blending_op_125 * tmp_blending_op_130;
                  const walberla::float64 jac_blending_0_0_q_1 =
                      tmp_blending_op_124 *
                      ( -tmp_blending_op_119 * tmp_blending_op_121 +
                        tmp_blending_op_123 * ( tmp_blending_op_115 * tmp_blending_op_53 + tmp_blending_op_119 ) );
                  const walberla::float64 jac_blending_2_2_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_132 * tmp_blending_op_139 +
                        tmp_blending_op_142 * ( tmp_blending_op_131 * tmp_blending_op_40 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_2_1_q_0 = tmp_blending_op_144 * tmp_blending_op_145;
                  const walberla::float64 jac_blending_2_0_q_0 = tmp_blending_op_145 * tmp_blending_op_146;
                  const walberla::float64 jac_blending_1_2_q_0 = tmp_blending_op_147 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_1_1_q_0 =
                      tmp_blending_op_143 *
                      ( tmp_blending_op_139 * tmp_blending_op_141 +
                        tmp_blending_op_142 * ( tmp_blending_op_136 * tmp_blending_op_51 + tmp_blending_op_138 ) );
                  const walberla::float64 jac_blending_1_0_q_0 = tmp_blending_op_146 * tmp_blending_op_148;
                  const walberla::float64 jac_blending_0_2_q_0 = tmp_blending_op_147 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_1_q_0 = tmp_blending_op_144 * tmp_blending_op_149;
                  const walberla::float64 jac_blending_0_0_q_0 =
                      tmp_blending_op_143 *
                      ( -tmp_blending_op_138 * tmp_blending_op_140 +
                        tmp_blending_op_142 * ( tmp_blending_op_134 * tmp_blending_op_53 + tmp_blending_op_138 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_9 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                            jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                            jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_10 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_11 = jac_blending_0_0_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_12 = jac_blending_0_1_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_13 = jac_blending_0_2_q_0 * tmp_kernel_op_8 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_9 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_10;
                  const walberla::float64 tmp_kernel_op_14 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_0;
                  const walberla::float64 tmp_kernel_op_15 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_0;
                  const walberla::float64 tmp_kernel_op_16 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_0 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_0 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_0;
                  const walberla::float64 tmp_kernel_op_17 = jac_blending_0_0_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_0_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_0_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_18 = jac_blending_0_1_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_1_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_1_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_19 = jac_blending_0_2_q_0 * tmp_kernel_op_14 +
                                                             jac_blending_1_2_q_0 * tmp_kernel_op_15 +
                                                             jac_blending_2_2_q_0 * tmp_kernel_op_16;
                  const walberla::float64 tmp_kernel_op_20 =
                      0.11169079483900581 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_12 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_13 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_18 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_19 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_17 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_18 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_19 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_11 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_12 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_13 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_20 * 16.0;
                  const walberla::float64 tmp_kernel_op_22 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_23 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_24 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_25 = 0;
                  const int64_t           tmp_kernel_op_26 = 0;
                  const int64_t           tmp_kernel_op_27 = tmp_kernel_op_25 + tmp_kernel_op_26;
                  const walberla::float64 tmp_kernel_op_28 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_29 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_30 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_31 = jac_blending_0_0_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_32 = jac_blending_0_1_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_33 = jac_blending_0_2_q_1 * tmp_kernel_op_28 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_29 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_30;
                  const walberla::float64 tmp_kernel_op_34 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_1;
                  const walberla::float64 tmp_kernel_op_35 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_1;
                  const walberla::float64 tmp_kernel_op_36 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_1 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_1 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_1;
                  const walberla::float64 tmp_kernel_op_37 = jac_blending_0_0_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_0_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_0_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = jac_blending_0_1_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_1_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_1_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_39 = jac_blending_0_2_q_1 * tmp_kernel_op_34 +
                                                             jac_blending_1_2_q_1 * tmp_kernel_op_35 +
                                                             jac_blending_2_2_q_1 * tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_40 =
                      0.054975871827660949 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_31 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_32 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_33 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_37 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_38 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_39 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_37 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_38 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_39 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_31 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_32 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_33 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_40 * 16.0;
                  const walberla::float64 tmp_kernel_op_42 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_43 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_44 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_45 = 0;
                  const int64_t           tmp_kernel_op_46 = 0;
                  const int64_t           tmp_kernel_op_47 = tmp_kernel_op_45 + tmp_kernel_op_46;
                  const walberla::float64 tmp_kernel_op_48 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_49 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_50 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_51 = jac_blending_0_0_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = jac_blending_0_1_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_53 = jac_blending_0_2_q_2 * tmp_kernel_op_48 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_49 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_54 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_2;
                  const walberla::float64 tmp_kernel_op_55 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_2;
                  const walberla::float64 tmp_kernel_op_56 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_2 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_2 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_2;
                  const walberla::float64 tmp_kernel_op_57 = jac_blending_0_0_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_0_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_0_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_58 = jac_blending_0_1_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_1_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_1_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_59 = jac_blending_0_2_q_2 * tmp_kernel_op_54 +
                                                             jac_blending_1_2_q_2 * tmp_kernel_op_55 +
                                                             jac_blending_2_2_q_2 * tmp_kernel_op_56;
                  const walberla::float64 tmp_kernel_op_60 =
                      0.11169079483900581 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_51 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_52 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_53 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_57 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_58 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_59 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_57 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_58 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_59 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_51 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_52 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_53 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_60 * 16.0;
                  const walberla::float64 tmp_kernel_op_62 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_63 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_64 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_65 = 0;
                  const int64_t           tmp_kernel_op_66 = 0;
                  const int64_t           tmp_kernel_op_67 = tmp_kernel_op_65 + tmp_kernel_op_66;
                  const walberla::float64 tmp_kernel_op_68 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_69 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_70 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_71 = jac_blending_0_0_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_72 = jac_blending_0_1_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_73 = jac_blending_0_2_q_3 * tmp_kernel_op_68 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_69 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_74 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_3;
                  const walberla::float64 tmp_kernel_op_75 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_3;
                  const walberla::float64 tmp_kernel_op_76 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_3 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_3 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_3;
                  const walberla::float64 tmp_kernel_op_77 = jac_blending_0_0_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_0_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_0_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = jac_blending_0_1_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_1_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_1_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_79 = jac_blending_0_2_q_3 * tmp_kernel_op_74 +
                                                             jac_blending_1_2_q_3 * tmp_kernel_op_75 +
                                                             jac_blending_2_2_q_3 * tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_80 =
                      0.054975871827660949 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_71 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_72 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_73 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_77 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_78 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_79 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_77 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_78 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_79 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_71 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_72 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_73 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_80 * 16.0;
                  const walberla::float64 tmp_kernel_op_82 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_83 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_84 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_85 = 0;
                  const int64_t           tmp_kernel_op_86 = 0;
                  const int64_t           tmp_kernel_op_87 = tmp_kernel_op_85 + tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_88 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_89 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_90 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                             jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                             jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_91 = jac_blending_0_0_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_92 = jac_blending_0_1_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_93 = jac_blending_0_2_q_4 * tmp_kernel_op_88 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_89 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_94 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_4 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_4 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_4;
                  const walberla::float64 tmp_kernel_op_95 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_4 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_4 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_4;
                  const walberla::float64 tmp_kernel_op_96 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_4 +
                                                             jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_4 +
                                                             jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_4;
                  const walberla::float64 tmp_kernel_op_97 = jac_blending_0_0_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_0_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_0_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_98 = jac_blending_0_1_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_1_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_1_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_99 = jac_blending_0_2_q_4 * tmp_kernel_op_94 +
                                                             jac_blending_1_2_q_4 * tmp_kernel_op_95 +
                                                             jac_blending_2_2_q_4 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_100 =
                      0.11169079483900581 *
                      pow(
                          abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_91 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_92 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_93 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_97 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_98 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_99 ) -
                               ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_97 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_98 +
                                 jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_99 ) *
                                   ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_91 + jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_92 +
                                     jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_93 ) ),
                          0.5 );
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_100 * 16.0;
                  const walberla::float64 tmp_kernel_op_102 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_103 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_104 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_105 = 0;
                  const int64_t           tmp_kernel_op_106 = 0;
                  const int64_t           tmp_kernel_op_107 = tmp_kernel_op_105 + tmp_kernel_op_106;
                  const walberla::float64 tmp_kernel_op_108 = jac_affine_0_0_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_109 = jac_affine_0_0_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_110 = jac_affine_0_0_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_0_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_0_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_111 = jac_blending_0_0_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_112 = jac_blending_0_1_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_113 = jac_blending_0_2_q_5 * tmp_kernel_op_108 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_109 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_114 = jac_affine_0_1_GREEN_DOWN * jac_blending_0_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_0_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_0_2_q_5;
                  const walberla::float64 tmp_kernel_op_115 = jac_affine_0_1_GREEN_DOWN * jac_blending_1_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_1_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_1_2_q_5;
                  const walberla::float64 tmp_kernel_op_116 = jac_affine_0_1_GREEN_DOWN * jac_blending_2_0_q_5 +
                                                              jac_affine_1_1_GREEN_DOWN * jac_blending_2_1_q_5 +
                                                              jac_affine_2_1_GREEN_DOWN * jac_blending_2_2_q_5;
                  const walberla::float64 tmp_kernel_op_117 = jac_blending_0_0_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_0_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_0_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_118 = jac_blending_0_1_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_1_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_1_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_119 = jac_blending_0_2_q_5 * tmp_kernel_op_114 +
                                                              jac_blending_1_2_q_5 * tmp_kernel_op_115 +
                                                              jac_blending_2_2_q_5 * tmp_kernel_op_116;
                  const walberla::float64 tmp_kernel_op_120 =
                      0.054975871827660949 *
                      pow( abs( ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_111 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_112 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_113 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_117 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_118 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_119 ) -
                                ( jac_affine_0_0_GREEN_DOWN * tmp_kernel_op_117 + jac_affine_1_0_GREEN_DOWN * tmp_kernel_op_118 +
                                  jac_affine_2_0_GREEN_DOWN * tmp_kernel_op_119 ) *
                                    ( jac_affine_0_1_GREEN_DOWN * tmp_kernel_op_111 +
                                      jac_affine_1_1_GREEN_DOWN * tmp_kernel_op_112 +
                                      jac_affine_2_1_GREEN_DOWN * tmp_kernel_op_113 ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_121 = tmp_kernel_op_120 * 16.0;
                  const walberla::float64 tmp_kernel_op_122 = tmp_kernel_op_20 * 4.0;
                  const walberla::float64 tmp_kernel_op_123 = tmp_kernel_op_40 * 4.0;
                  const walberla::float64 tmp_kernel_op_124 = tmp_kernel_op_60 * 4.0;
                  const walberla::float64 tmp_kernel_op_125 = tmp_kernel_op_80 * 4.0;
                  const walberla::float64 tmp_kernel_op_126 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_127 = tmp_kernel_op_120 * 4.0;
                  const int64_t           tmp_kernel_op_128 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_129 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_130 = tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_131 = tmp_kernel_op_61 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_132 = tmp_kernel_op_81 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_133 = tmp_kernel_op_101 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_134 = tmp_kernel_op_121 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_135 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_101 *
                          ( ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) *
                            ( tmp_kernel_op_7 + tmp_kernel_op_82 + tmp_kernel_op_83 * 0.5 + tmp_kernel_op_84 * 0.5 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 *
                          ( ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) *
                            ( tmp_kernel_op_102 + tmp_kernel_op_103 * 0.5 + tmp_kernel_op_104 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_107 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 *
                          ( ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) *
                            ( tmp_kernel_op_22 + tmp_kernel_op_23 * 0.5 + tmp_kernel_op_24 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 *
                          ( ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) *
                            ( tmp_kernel_op_42 + tmp_kernel_op_43 * 0.5 + tmp_kernel_op_44 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 *
                          ( ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) *
                            ( tmp_kernel_op_62 + tmp_kernel_op_63 * 0.5 + tmp_kernel_op_64 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_23 - 0.045788106754885358 ) * ( tmp_kernel_op_23 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_43 - 0.05405150908403511 ) * ( tmp_kernel_op_43 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_63 - 0.40842378649022926 ) * ( tmp_kernel_op_63 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_83 - 0.22297424545798245 ) * ( tmp_kernel_op_83 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_103 - 0.045788106754885358 ) * ( tmp_kernel_op_103 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_122 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_123 *
                          ( ( tmp_kernel_op_24 - 0.40842378649022926 ) * ( tmp_kernel_op_24 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_124 *
                          ( ( tmp_kernel_op_44 - 0.22297424545798245 ) * ( tmp_kernel_op_44 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_125 *
                          ( ( tmp_kernel_op_64 - 0.045788106754885358 ) * ( tmp_kernel_op_64 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_126 *
                          ( ( tmp_kernel_op_84 - 0.22297424545798245 ) * ( tmp_kernel_op_84 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_127 *
                          ( ( tmp_kernel_op_104 - 0.045788106754885358 ) * ( tmp_kernel_op_104 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_122 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_123 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_124 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_125 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_126 * ( ( walberla::float64 )( tmp_kernel_op_128 ) ) +
                                                        tmp_kernel_op_127 * ( ( walberla::float64 )( tmp_kernel_op_128 ) );
                  const walberla::float64 elMatDiag_4 =
                      tmp_kernel_op_104 * tmp_kernel_op_134 + tmp_kernel_op_129 * tmp_kernel_op_2 +
                      tmp_kernel_op_130 * tmp_kernel_op_24 + tmp_kernel_op_131 * tmp_kernel_op_44 +
                      tmp_kernel_op_132 * tmp_kernel_op_64 + tmp_kernel_op_133 * tmp_kernel_op_84;
                  const walberla::float64 elMatDiag_5 =
                      tmp_kernel_op_1 * tmp_kernel_op_129 + tmp_kernel_op_103 * tmp_kernel_op_134 +
                      tmp_kernel_op_130 * tmp_kernel_op_23 + tmp_kernel_op_131 * tmp_kernel_op_43 +
                      tmp_kernel_op_132 * tmp_kernel_op_63 + tmp_kernel_op_133 * tmp_kernel_op_83;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_2 * tmp_kernel_op_21 +
                                                        tmp_kernel_op_101 * tmp_kernel_op_83 * tmp_kernel_op_84 +
                                                        tmp_kernel_op_103 * tmp_kernel_op_104 * tmp_kernel_op_121 +
                                                        tmp_kernel_op_23 * tmp_kernel_op_24 * tmp_kernel_op_41 +
                                                        tmp_kernel_op_43 * tmp_kernel_op_44 * tmp_kernel_op_61 +
                                                        tmp_kernel_op_63 * tmp_kernel_op_64 * tmp_kernel_op_81;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_101 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) *
                                                                     ( -tmp_kernel_op_135 - tmp_kernel_op_87 ) ) ) ) +
                      tmp_kernel_op_121 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) *
                                                                     ( -tmp_kernel_op_107 - tmp_kernel_op_135 ) ) ) ) +
                      tmp_kernel_op_21 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_41 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_27 ) ) ) ) +
                      tmp_kernel_op_61 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_47 ) ) ) ) +
                      tmp_kernel_op_81 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) *
                                                                    ( -tmp_kernel_op_135 - tmp_kernel_op_67 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_84 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_86 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_104 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_106 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_24 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_26 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_44 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_46 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_64 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_66 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_101 * ( ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) *
                                            ( -tmp_kernel_op_82 - tmp_kernel_op_83 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_85 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_121 * ( ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) *
                                            ( -tmp_kernel_op_102 - tmp_kernel_op_103 +
                                              ( ( walberla::float64 )( -tmp_kernel_op_105 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_21 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_41 * ( ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_22 - tmp_kernel_op_23 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_25 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_61 * ( ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_42 - tmp_kernel_op_43 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_45 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_81 * ( ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_62 - tmp_kernel_op_63 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_65 ) ) + 0.81684757298045851 ) );
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
               }
      }
   }
}

} // namespace operatorgeneration

} // namespace hyteg
