/*
* Copyright (c) 2017-2024 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG Operator Generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/

// Unfortunately, the inverse diagonal kernel wrapper triggers a GCC bug (maybe
// (related to) https://gcc.gnu.org/bugzilla/show_bug.cgi?id=107087) causing a
// warning in an internal standard library header (bits/stl_algobase.h). As a
// workaround, we disable the warning and include this header indirectly through
// a public header.
#include <waLBerlaDefinitions.h>
#ifdef WALBERLA_CXX_COMPILER_IS_GNU
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wnonnull"
#endif
#include <cmath>
#ifdef WALBERLA_CXX_COMPILER_IS_GNU
#pragma GCC diagnostic pop
#endif

#include "P2ElementwiseBoundaryMass.hpp"

#define FUNC_PREFIX

namespace hyteg {

namespace operatorgeneration {

P2ElementwiseBoundaryMass::P2ElementwiseBoundaryMass( const std::shared_ptr< PrimitiveStorage >& storage,
                                                      size_t                                     minLevel,
                                                      size_t                                     maxLevel,
                                                      BoundaryCondition                          boundaryCondition,
                                                      BoundaryUID P2ElementwiseBoundaryMass_boundary_uid )
: Operator( storage, minLevel, maxLevel )
, boundaryCondition_( boundaryCondition )
, P2ElementwiseBoundaryMass_boundary_uid_( P2ElementwiseBoundaryMass_boundary_uid )
{}

void P2ElementwiseBoundaryMass::apply( const P2Function< walberla::float64 >& src,
                                       const P2Function< walberla::float64 >& dst,
                                       uint_t                                 level,
                                       DoFType                                flag,
                                       UpdateType                             updateType ) const
{
   this->startTiming( "apply" );

   // Make sure that halos are up-to-date
   this->timingTree_->start( "pre-communication" );
   if ( this->storage_->hasGlobalCells() )
   {
      // Note that the order of communication is important, since the face -> cell communication may overwrite
      // parts of the halos that carry the macro-vertex and macro-edge unknowns.
      src.communicate< Face, Cell >( level );
      src.communicate< Edge, Cell >( level );
      src.communicate< Vertex, Cell >( level );
   }
   else
   {
      communication::syncFunctionBetweenPrimitives( src, level, communication::syncDirection_t::LOW2HIGH );
   }
   this->timingTree_->stop( "pre-communication" );

   if ( updateType == Replace )
   {
      // We need to zero the destination array (including halos).
      // However, we must not zero out anything that is not flagged with the specified BCs.
      // Therefore, we first zero out everything that flagged, and then, later,
      // the halos of the highest dim primitives.
      dst.interpolate( walberla::numeric_cast< walberla::float64 >( 0 ), level, flag );
   }

   if ( storage_->hasGlobalCells() )
   {
      for ( auto& it : storage_->getCells() )
      {
         Cell& cell = *it.second;

         // get hold of the actual numerical data in the functions
         walberla::float64* _data_srcVertex = cell.getData( src.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_srcEdge   = cell.getData( src.getEdgeDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_dstVertex = cell.getData( dst.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         walberla::float64* _data_dstEdge   = cell.getData( dst.getEdgeDoFFunction().getCellDataID() )->getPointer( level );

         // Zero out dst halos only
         //
         // This is also necessary when using update type == Add.
         // During additive comm we then skip zeroing the data on the lower-dim primitives.
         for ( const auto& idx : vertexdof::macrocell::Iterator( level ) )
         {
            if ( !vertexdof::macrocell::isOnCellFace( idx, level ).empty() )
            {
               auto arrayIdx             = vertexdof::macrocell::index( level, idx.x(), idx.y(), idx.z() );
               _data_dstVertex[arrayIdx] = walberla::float64( 0 );
            }
         }
         edgedof::macrocell::setBoundaryToZero( level, cell, dst.getEdgeDoFFunction().getCellDataID() );

         const auto micro_edges_per_macro_edge                = (int64_t) levelinfo::num_microedges_per_edge( level );
         const auto num_microfaces_per_face                   = (int64_t) levelinfo::num_microfaces_per_face( level );
         const auto micro_edges_per_macro_edge_float          = (walberla::float64) levelinfo::num_microedges_per_edge( level );
         const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) cell.getCoordinates()[0][0];
         const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) cell.getCoordinates()[0][1];
         const walberla::float64 macro_vertex_coord_id_0comp2 = (walberla::float64) cell.getCoordinates()[0][2];
         const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) cell.getCoordinates()[1][0];
         const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) cell.getCoordinates()[1][1];
         const walberla::float64 macro_vertex_coord_id_1comp2 = (walberla::float64) cell.getCoordinates()[1][2];
         const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) cell.getCoordinates()[2][0];
         const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) cell.getCoordinates()[2][1];
         const walberla::float64 macro_vertex_coord_id_2comp2 = (walberla::float64) cell.getCoordinates()[2][2];
         const walberla::float64 macro_vertex_coord_id_3comp0 = (walberla::float64) cell.getCoordinates()[3][0];
         const walberla::float64 macro_vertex_coord_id_3comp1 = (walberla::float64) cell.getCoordinates()[3][1];
         const walberla::float64 macro_vertex_coord_id_3comp2 = (walberla::float64) cell.getCoordinates()[3][2];

         this->timingTree_->start( "kernel" );

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMass_facet_id_0_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMass_facet_id_1_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMass_facet_id_2_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[3] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMass_facet_id_3_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         this->timingTree_->stop( "kernel" );
      }

      // Push result to lower-dimensional primitives
      //
      this->timingTree_->start( "post-communication" );
      // Note: We could avoid communication here by implementing the apply() also for the respective
      //       lower dimensional primitives!
      dst.getVertexDoFFunction().communicateAdditively< Cell, Face >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getVertexDoFFunction().communicateAdditively< Cell, Edge >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getVertexDoFFunction().communicateAdditively< Cell, Vertex >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getEdgeDoFFunction().communicateAdditively< Cell, Face >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getEdgeDoFFunction().communicateAdditively< Cell, Edge >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      this->timingTree_->stop( "post-communication" );
   }
   else
   {
      for ( auto& it : storage_->getFaces() )
      {
         Face& face = *it.second;

         // get hold of the actual numerical data in the functions
         walberla::float64* _data_srcVertex = face.getData( src.getVertexDoFFunction().getFaceDataID() )->getPointer( level );
         walberla::float64* _data_srcEdge   = face.getData( src.getEdgeDoFFunction().getFaceDataID() )->getPointer( level );
         walberla::float64* _data_dstVertex = face.getData( dst.getVertexDoFFunction().getFaceDataID() )->getPointer( level );
         walberla::float64* _data_dstEdge   = face.getData( dst.getEdgeDoFFunction().getFaceDataID() )->getPointer( level );

         // Zero out dst halos only
         //
         // This is also necessary when using update type == Add.
         // During additive comm we then skip zeroing the data on the lower-dim primitives.
         for ( const auto& idx : vertexdof::macroface::Iterator( level ) )
         {
            if ( vertexdof::macroface::isVertexOnBoundary( level, idx ) )
            {
               auto arrayIdx             = vertexdof::macroface::index( level, idx.x(), idx.y() );
               _data_dstVertex[arrayIdx] = walberla::numeric_cast< walberla::float64 >( 0 );
            }
         }
         for ( const auto& idx : edgedof::macroface::Iterator( level ) )
         {
            for ( const auto& orientation : edgedof::faceLocalEdgeDoFOrientations )
            {
               if ( !edgedof::macroface::isInnerEdgeDoF( level, idx, orientation ) )
               {
                  auto arrayIdx           = edgedof::macroface::index( level, idx.x(), idx.y(), orientation );
                  _data_dstEdge[arrayIdx] = walberla::numeric_cast< walberla::float64 >( 0 );
               }
            }
         }

         const auto micro_edges_per_macro_edge                = (int64_t) levelinfo::num_microedges_per_edge( level );
         const auto num_microfaces_per_face                   = (int64_t) levelinfo::num_microfaces_per_face( level );
         const auto micro_edges_per_macro_edge_float          = (walberla::float64) levelinfo::num_microedges_per_edge( level );
         const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) face.getCoordinates()[0][0];
         const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) face.getCoordinates()[0][1];
         const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) face.getCoordinates()[1][0];
         const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) face.getCoordinates()[1][1];
         const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) face.getCoordinates()[2][0];
         const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) face.getCoordinates()[2][1];

         this->timingTree_->start( "kernel" );

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getEdge( face.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMass_facet_id_0_macro_2D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getEdge( face.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMass_facet_id_1_macro_2D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getEdge( face.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            apply_P2ElementwiseBoundaryMass_facet_id_2_macro_2D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         this->timingTree_->stop( "kernel" );
      }

      // Push result to lower-dimensional primitives
      //
      this->timingTree_->start( "post-communication" );
      // Note: We could avoid communication here by implementing the apply() also for the respective
      //       lower dimensional primitives!
      dst.getVertexDoFFunction().communicateAdditively< Face, Edge >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getVertexDoFFunction().communicateAdditively< Face, Vertex >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      dst.getEdgeDoFFunction().communicateAdditively< Face, Edge >(
          level, DoFType::All ^ flag, *storage_, updateType == Replace );
      this->timingTree_->stop( "post-communication" );
   }

   this->stopTiming( "apply" );
}
void P2ElementwiseBoundaryMass::toMatrix( const std::shared_ptr< SparseMatrixProxy >& mat,
                                          const P2Function< idx_t >&                  src,
                                          const P2Function< idx_t >&                  dst,
                                          uint_t                                      level,
                                          DoFType                                     flag ) const
{
   this->startTiming( "toMatrix" );

   // We currently ignore the flag provided!
   if ( flag != All )
   {
      WALBERLA_LOG_WARNING_ON_ROOT( "Input flag ignored in toMatrix; using flag = All" );
   }

   if ( storage_->hasGlobalCells() )
   {
      this->timingTree_->start( "pre-communication" );

      this->timingTree_->stop( "pre-communication" );

      for ( auto& it : storage_->getCells() )
      {
         Cell& cell = *it.second;

         // get hold of the actual numerical data
         idx_t* _data_srcVertex = cell.getData( src.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         idx_t* _data_srcEdge   = cell.getData( src.getEdgeDoFFunction().getCellDataID() )->getPointer( level );
         idx_t* _data_dstVertex = cell.getData( dst.getVertexDoFFunction().getCellDataID() )->getPointer( level );
         idx_t* _data_dstEdge   = cell.getData( dst.getEdgeDoFFunction().getCellDataID() )->getPointer( level );

         const auto micro_edges_per_macro_edge                = (int64_t) levelinfo::num_microedges_per_edge( level );
         const auto num_microfaces_per_face                   = (int64_t) levelinfo::num_microfaces_per_face( level );
         const auto micro_edges_per_macro_edge_float          = (walberla::float64) levelinfo::num_microedges_per_edge( level );
         const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) cell.getCoordinates()[0][0];
         const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) cell.getCoordinates()[0][1];
         const walberla::float64 macro_vertex_coord_id_0comp2 = (walberla::float64) cell.getCoordinates()[0][2];
         const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) cell.getCoordinates()[1][0];
         const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) cell.getCoordinates()[1][1];
         const walberla::float64 macro_vertex_coord_id_1comp2 = (walberla::float64) cell.getCoordinates()[1][2];
         const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) cell.getCoordinates()[2][0];
         const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) cell.getCoordinates()[2][1];
         const walberla::float64 macro_vertex_coord_id_2comp2 = (walberla::float64) cell.getCoordinates()[2][2];
         const walberla::float64 macro_vertex_coord_id_3comp0 = (walberla::float64) cell.getCoordinates()[3][0];
         const walberla::float64 macro_vertex_coord_id_3comp1 = (walberla::float64) cell.getCoordinates()[3][1];
         const walberla::float64 macro_vertex_coord_id_3comp2 = (walberla::float64) cell.getCoordinates()[3][2];

         this->timingTree_->start( "kernel" );

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryMass_facet_id_0_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryMass_facet_id_1_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryMass_facet_id_2_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getFace( cell.getLowerDimNeighbors()[3] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryMass_facet_id_3_macro_3D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_0comp2,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_1comp2,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                macro_vertex_coord_id_2comp2,
                macro_vertex_coord_id_3comp0,
                macro_vertex_coord_id_3comp1,
                macro_vertex_coord_id_3comp2,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         this->timingTree_->stop( "kernel" );
      }
   }
   else
   {
      this->timingTree_->start( "pre-communication" );

      this->timingTree_->stop( "pre-communication" );

      for ( auto& it : storage_->getFaces() )
      {
         Face& face = *it.second;

         // get hold of the actual numerical data
         idx_t* _data_srcVertex = face.getData( src.getVertexDoFFunction().getFaceDataID() )->getPointer( level );
         idx_t* _data_srcEdge   = face.getData( src.getEdgeDoFFunction().getFaceDataID() )->getPointer( level );
         idx_t* _data_dstVertex = face.getData( dst.getVertexDoFFunction().getFaceDataID() )->getPointer( level );
         idx_t* _data_dstEdge   = face.getData( dst.getEdgeDoFFunction().getFaceDataID() )->getPointer( level );

         const auto micro_edges_per_macro_edge                = (int64_t) levelinfo::num_microedges_per_edge( level );
         const auto num_microfaces_per_face                   = (int64_t) levelinfo::num_microfaces_per_face( level );
         const auto micro_edges_per_macro_edge_float          = (walberla::float64) levelinfo::num_microedges_per_edge( level );
         const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) face.getCoordinates()[0][0];
         const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) face.getCoordinates()[0][1];
         const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) face.getCoordinates()[1][0];
         const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) face.getCoordinates()[1][1];
         const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) face.getCoordinates()[2][0];
         const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) face.getCoordinates()[2][1];

         this->timingTree_->start( "kernel" );

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getEdge( face.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryMass_facet_id_0_macro_2D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getEdge( face.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryMass_facet_id_1_macro_2D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                  getStorage()->getEdge( face.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
              P2ElementwiseBoundaryMass_boundary_uid_ )
         {
            toMatrix_P2ElementwiseBoundaryMass_facet_id_2_macro_2D(

                _data_dstEdge,
                _data_dstVertex,
                _data_srcEdge,
                _data_srcVertex,
                macro_vertex_coord_id_0comp0,
                macro_vertex_coord_id_0comp1,
                macro_vertex_coord_id_1comp0,
                macro_vertex_coord_id_1comp1,
                macro_vertex_coord_id_2comp0,
                macro_vertex_coord_id_2comp1,
                mat,
                micro_edges_per_macro_edge,
                micro_edges_per_macro_edge_float );
         }

         this->timingTree_->stop( "kernel" );
      }
   }
   this->stopTiming( "toMatrix" );
}
void P2ElementwiseBoundaryMass::computeInverseDiagonalOperatorValues()
{
   this->startTiming( "computeInverseDiagonalOperatorValues" );

   if ( invDiag_ == nullptr )
   {
      invDiag_ =
          std::make_shared< P2Function< walberla::float64 > >( "inverse diagonal entries", storage_, minLevel_, maxLevel_ );
   }

   for ( uint_t level = minLevel_; level <= maxLevel_; level++ )
   {
      invDiag_->setToZero( level );

      if ( storage_->hasGlobalCells() )
      {
         this->timingTree_->start( "pre-communication" );

         this->timingTree_->stop( "pre-communication" );

         for ( auto& it : storage_->getCells() )
         {
            Cell& cell = *it.second;

            // get hold of the actual numerical data
            walberla::float64* _data_invDiag_Vertex =
                cell.getData( ( *invDiag_ ).getVertexDoFFunction().getCellDataID() )->getPointer( level );
            walberla::float64* _data_invDiag_Edge =
                cell.getData( ( *invDiag_ ).getEdgeDoFFunction().getCellDataID() )->getPointer( level );

            const auto micro_edges_per_macro_edge       = (int64_t) levelinfo::num_microedges_per_edge( level );
            const auto num_microfaces_per_face          = (int64_t) levelinfo::num_microfaces_per_face( level );
            const auto micro_edges_per_macro_edge_float = (walberla::float64) levelinfo::num_microedges_per_edge( level );
            const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) cell.getCoordinates()[0][0];
            const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) cell.getCoordinates()[0][1];
            const walberla::float64 macro_vertex_coord_id_0comp2 = (walberla::float64) cell.getCoordinates()[0][2];
            const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) cell.getCoordinates()[1][0];
            const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) cell.getCoordinates()[1][1];
            const walberla::float64 macro_vertex_coord_id_1comp2 = (walberla::float64) cell.getCoordinates()[1][2];
            const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) cell.getCoordinates()[2][0];
            const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) cell.getCoordinates()[2][1];
            const walberla::float64 macro_vertex_coord_id_2comp2 = (walberla::float64) cell.getCoordinates()[2][2];
            const walberla::float64 macro_vertex_coord_id_3comp0 = (walberla::float64) cell.getCoordinates()[3][0];
            const walberla::float64 macro_vertex_coord_id_3comp1 = (walberla::float64) cell.getCoordinates()[3][1];
            const walberla::float64 macro_vertex_coord_id_3comp2 = (walberla::float64) cell.getCoordinates()[3][2];

            this->timingTree_->start( "kernel" );

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMass_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_0_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMass_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_1_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMass_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_2_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getFace( cell.getLowerDimNeighbors()[3] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMass_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_3_macro_3D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_0comp2,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_1comp2,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   macro_vertex_coord_id_2comp2,
                   macro_vertex_coord_id_3comp0,
                   macro_vertex_coord_id_3comp1,
                   macro_vertex_coord_id_3comp2,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float );
            }

            this->timingTree_->stop( "kernel" );
         }

         // Push result to lower-dimensional primitives
         //
         this->timingTree_->start( "post-communication" );
         // Note: We could avoid communication here by implementing the apply() also for the respective
         //       lower dimensional primitives!
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Face >( level );
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Edge >( level );
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Cell, Vertex >( level );
         ( *invDiag_ ).getEdgeDoFFunction().communicateAdditively< Cell, Face >( level );
         ( *invDiag_ ).getEdgeDoFFunction().communicateAdditively< Cell, Edge >( level );
         this->timingTree_->stop( "post-communication" );
         ( *invDiag_ ).invertElementwise( level );
      }
      else
      {
         this->timingTree_->start( "pre-communication" );

         this->timingTree_->stop( "pre-communication" );

         for ( auto& it : storage_->getFaces() )
         {
            Face& face = *it.second;

            // get hold of the actual numerical data
            walberla::float64* _data_invDiag_Vertex =
                face.getData( ( *invDiag_ ).getVertexDoFFunction().getFaceDataID() )->getPointer( level );
            walberla::float64* _data_invDiag_Edge =
                face.getData( ( *invDiag_ ).getEdgeDoFFunction().getFaceDataID() )->getPointer( level );

            const auto micro_edges_per_macro_edge       = (int64_t) levelinfo::num_microedges_per_edge( level );
            const auto num_microfaces_per_face          = (int64_t) levelinfo::num_microfaces_per_face( level );
            const auto micro_edges_per_macro_edge_float = (walberla::float64) levelinfo::num_microedges_per_edge( level );
            const walberla::float64 macro_vertex_coord_id_0comp0 = (walberla::float64) face.getCoordinates()[0][0];
            const walberla::float64 macro_vertex_coord_id_0comp1 = (walberla::float64) face.getCoordinates()[0][1];
            const walberla::float64 macro_vertex_coord_id_1comp0 = (walberla::float64) face.getCoordinates()[1][0];
            const walberla::float64 macro_vertex_coord_id_1comp1 = (walberla::float64) face.getCoordinates()[1][1];
            const walberla::float64 macro_vertex_coord_id_2comp0 = (walberla::float64) face.getCoordinates()[2][0];
            const walberla::float64 macro_vertex_coord_id_2comp1 = (walberla::float64) face.getCoordinates()[2][1];

            this->timingTree_->start( "kernel" );

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getEdge( face.getLowerDimNeighbors()[0] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMass_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_0_macro_2D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getEdge( face.getLowerDimNeighbors()[1] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMass_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_1_macro_2D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float );
            }

            if ( boundaryCondition_.getBoundaryUIDFromMeshFlag(
                     getStorage()->getEdge( face.getLowerDimNeighbors()[2] )->getMeshBoundaryFlag() ) ==
                 P2ElementwiseBoundaryMass_boundary_uid_ )
            {
               computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_2_macro_2D(

                   _data_invDiag_Edge,
                   _data_invDiag_Vertex,
                   macro_vertex_coord_id_0comp0,
                   macro_vertex_coord_id_0comp1,
                   macro_vertex_coord_id_1comp0,
                   macro_vertex_coord_id_1comp1,
                   macro_vertex_coord_id_2comp0,
                   macro_vertex_coord_id_2comp1,
                   micro_edges_per_macro_edge,
                   micro_edges_per_macro_edge_float );
            }

            this->timingTree_->stop( "kernel" );
         }

         // Push result to lower-dimensional primitives
         //
         this->timingTree_->start( "post-communication" );
         // Note: We could avoid communication here by implementing the apply() also for the respective
         //       lower dimensional primitives!
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Face, Edge >( level );
         ( *invDiag_ ).getVertexDoFFunction().communicateAdditively< Face, Vertex >( level );
         ( *invDiag_ ).getEdgeDoFFunction().communicateAdditively< Face, Edge >( level );
         this->timingTree_->stop( "post-communication" );
         ( *invDiag_ ).invertElementwise( level );
      }
   }

   this->stopTiming( "computeInverseDiagonalOperatorValues" );
}
std::shared_ptr< P2Function< walberla::float64 > > P2ElementwiseBoundaryMass::getInverseDiagonalValues() const
{
   return invDiag_;
}
void P2ElementwiseBoundaryMass::apply_P2ElementwiseBoundaryMass_facet_id_0_macro_3D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 + tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_52 + 1.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_55 =
                      tmp_kernel_op_54 * ( tmp_kernel_op_47 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_51 +
                                           tmp_kernel_op_53 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_56 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_60 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_56 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_63 =
                      tmp_kernel_op_62 * ( tmp_kernel_op_53 + tmp_kernel_op_57 + tmp_kernel_op_58 + tmp_kernel_op_59 +
                                           tmp_kernel_op_61 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_64 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_65 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_68 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_64 + tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_70 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_71 =
                      tmp_kernel_op_70 * ( tmp_kernel_op_53 + tmp_kernel_op_65 + tmp_kernel_op_66 + tmp_kernel_op_67 +
                                           tmp_kernel_op_69 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_72 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_74 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_76 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_72 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_79 =
                      tmp_kernel_op_78 * ( tmp_kernel_op_53 + tmp_kernel_op_73 + tmp_kernel_op_74 + tmp_kernel_op_75 +
                                           tmp_kernel_op_77 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_83 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_84 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_80 + tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_87 =
                      tmp_kernel_op_86 * ( tmp_kernel_op_53 + tmp_kernel_op_81 + tmp_kernel_op_82 + tmp_kernel_op_83 +
                                           tmp_kernel_op_85 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_89 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_92 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_88 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_95 =
                      tmp_kernel_op_94 * ( tmp_kernel_op_53 + tmp_kernel_op_89 + tmp_kernel_op_90 + tmp_kernel_op_91 +
                                           tmp_kernel_op_93 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_96 =
                      tmp_kernel_op_46 * tmp_kernel_op_55 + tmp_kernel_op_56 * tmp_kernel_op_63 +
                      tmp_kernel_op_64 * tmp_kernel_op_71 + tmp_kernel_op_72 * tmp_kernel_op_79 +
                      tmp_kernel_op_80 * tmp_kernel_op_87 + tmp_kernel_op_88 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_97 =
                      tmp_kernel_op_50 * tmp_kernel_op_55 + tmp_kernel_op_60 * tmp_kernel_op_63 +
                      tmp_kernel_op_68 * tmp_kernel_op_71 + tmp_kernel_op_76 * tmp_kernel_op_79 +
                      tmp_kernel_op_84 * tmp_kernel_op_87 + tmp_kernel_op_92 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_49 * tmp_kernel_op_55 + tmp_kernel_op_59 * tmp_kernel_op_63 +
                      tmp_kernel_op_67 * tmp_kernel_op_71 + tmp_kernel_op_75 * tmp_kernel_op_79 +
                      tmp_kernel_op_83 * tmp_kernel_op_87 + tmp_kernel_op_91 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_47 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_65 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_102 = tmp_kernel_op_73 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_81 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_89 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_105 =
                      tmp_kernel_op_100 * tmp_kernel_op_63 + tmp_kernel_op_101 * tmp_kernel_op_71 +
                      tmp_kernel_op_102 * tmp_kernel_op_79 + tmp_kernel_op_103 * tmp_kernel_op_87 +
                      tmp_kernel_op_104 * tmp_kernel_op_95 + tmp_kernel_op_55 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_58 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_66 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_109 = tmp_kernel_op_74 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_82 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_111 = tmp_kernel_op_90 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_106 * tmp_kernel_op_55 + tmp_kernel_op_107 * tmp_kernel_op_63 +
                      tmp_kernel_op_108 * tmp_kernel_op_71 + tmp_kernel_op_109 * tmp_kernel_op_79 +
                      tmp_kernel_op_110 * tmp_kernel_op_87 + tmp_kernel_op_111 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_113 = tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_113 * tmp_kernel_op_55 + tmp_kernel_op_113 * tmp_kernel_op_63 +
                      tmp_kernel_op_113 * tmp_kernel_op_71 + tmp_kernel_op_113 * tmp_kernel_op_79 +
                      tmp_kernel_op_113 * tmp_kernel_op_87 + tmp_kernel_op_113 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_69;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_77;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_85;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_116 * tmp_kernel_op_55 + tmp_kernel_op_117 * tmp_kernel_op_63 +
                      tmp_kernel_op_118 * tmp_kernel_op_71 + tmp_kernel_op_119 * tmp_kernel_op_79 +
                      tmp_kernel_op_120 * tmp_kernel_op_87 + tmp_kernel_op_121 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_46 - tmp_kernel_op_49 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_56 - tmp_kernel_op_59 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_64 - tmp_kernel_op_67 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_72 - tmp_kernel_op_75 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_80 - tmp_kernel_op_83 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_88 - tmp_kernel_op_91 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_123 * tmp_kernel_op_55 + tmp_kernel_op_124 * tmp_kernel_op_63 +
                      tmp_kernel_op_125 * tmp_kernel_op_71 + tmp_kernel_op_126 * tmp_kernel_op_79 +
                      tmp_kernel_op_127 * tmp_kernel_op_87 + tmp_kernel_op_128 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_59 - tmp_kernel_op_60 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_67 - tmp_kernel_op_68 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_75 - tmp_kernel_op_76 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_83 - tmp_kernel_op_84 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_91 - tmp_kernel_op_92 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_130 * tmp_kernel_op_55 + tmp_kernel_op_131 * tmp_kernel_op_63 +
                      tmp_kernel_op_132 * tmp_kernel_op_71 + tmp_kernel_op_133 * tmp_kernel_op_79 +
                      tmp_kernel_op_134 * tmp_kernel_op_87 + tmp_kernel_op_135 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_54 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_78 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_86 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_94 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_54 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_100 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_101 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_102 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_103 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_104 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_143 * tmp_kernel_op_46 + tmp_kernel_op_144 * tmp_kernel_op_56 +
                      tmp_kernel_op_145 * tmp_kernel_op_64 + tmp_kernel_op_146 * tmp_kernel_op_72 +
                      tmp_kernel_op_147 * tmp_kernel_op_80 + tmp_kernel_op_148 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_68 + tmp_kernel_op_146 * tmp_kernel_op_76 +
                      tmp_kernel_op_147 * tmp_kernel_op_84 + tmp_kernel_op_148 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_59 +
                      tmp_kernel_op_145 * tmp_kernel_op_67 + tmp_kernel_op_146 * tmp_kernel_op_75 +
                      tmp_kernel_op_147 * tmp_kernel_op_83 + tmp_kernel_op_148 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_106 * tmp_kernel_op_143 + tmp_kernel_op_107 * tmp_kernel_op_144 +
                      tmp_kernel_op_108 * tmp_kernel_op_145 + tmp_kernel_op_109 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_111 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_113 * tmp_kernel_op_143 + tmp_kernel_op_113 * tmp_kernel_op_144 +
                      tmp_kernel_op_113 * tmp_kernel_op_145 + tmp_kernel_op_113 * tmp_kernel_op_146 +
                      tmp_kernel_op_113 * tmp_kernel_op_147 + tmp_kernel_op_113 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_106 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_107 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_108 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_109 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_110 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_111 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_157 * tmp_kernel_op_46 + tmp_kernel_op_158 * tmp_kernel_op_56 +
                      tmp_kernel_op_159 * tmp_kernel_op_64 + tmp_kernel_op_160 * tmp_kernel_op_72 +
                      tmp_kernel_op_161 * tmp_kernel_op_80 + tmp_kernel_op_162 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_68 + tmp_kernel_op_160 * tmp_kernel_op_76 +
                      tmp_kernel_op_161 * tmp_kernel_op_84 + tmp_kernel_op_162 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_59 +
                      tmp_kernel_op_159 * tmp_kernel_op_67 + tmp_kernel_op_160 * tmp_kernel_op_75 +
                      tmp_kernel_op_161 * tmp_kernel_op_83 + tmp_kernel_op_162 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_113 * tmp_kernel_op_157 + tmp_kernel_op_113 * tmp_kernel_op_158 +
                      tmp_kernel_op_113 * tmp_kernel_op_159 + tmp_kernel_op_113 * tmp_kernel_op_160 +
                      tmp_kernel_op_113 * tmp_kernel_op_161 + tmp_kernel_op_113 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_113 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_113 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_113 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_113 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_113 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_113 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_46 + tmp_kernel_op_172 * tmp_kernel_op_56 +
                      tmp_kernel_op_173 * tmp_kernel_op_64 + tmp_kernel_op_174 * tmp_kernel_op_72 +
                      tmp_kernel_op_175 * tmp_kernel_op_80 + tmp_kernel_op_176 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_68 + tmp_kernel_op_174 * tmp_kernel_op_76 +
                      tmp_kernel_op_175 * tmp_kernel_op_84 + tmp_kernel_op_176 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_59 +
                      tmp_kernel_op_173 * tmp_kernel_op_67 + tmp_kernel_op_174 * tmp_kernel_op_75 +
                      tmp_kernel_op_175 * tmp_kernel_op_83 + tmp_kernel_op_176 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_121 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_46 + tmp_kernel_op_198 * tmp_kernel_op_56 +
                      tmp_kernel_op_199 * tmp_kernel_op_64 + tmp_kernel_op_200 * tmp_kernel_op_72 +
                      tmp_kernel_op_201 * tmp_kernel_op_80 + tmp_kernel_op_202 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_128 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_46 + tmp_kernel_op_205 * tmp_kernel_op_56 +
                      tmp_kernel_op_206 * tmp_kernel_op_64 + tmp_kernel_op_207 * tmp_kernel_op_72 +
                      tmp_kernel_op_208 * tmp_kernel_op_80 + tmp_kernel_op_209 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_135 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_46 + tmp_kernel_op_212 * tmp_kernel_op_56 +
                      tmp_kernel_op_213 * tmp_kernel_op_64 + tmp_kernel_op_214 * tmp_kernel_op_72 +
                      tmp_kernel_op_215 * tmp_kernel_op_80 + tmp_kernel_op_216 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_68 + tmp_kernel_op_200 * tmp_kernel_op_76 +
                      tmp_kernel_op_201 * tmp_kernel_op_84 + tmp_kernel_op_202 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_68 + tmp_kernel_op_207 * tmp_kernel_op_76 +
                      tmp_kernel_op_208 * tmp_kernel_op_84 + tmp_kernel_op_209 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_68 + tmp_kernel_op_214 * tmp_kernel_op_76 +
                      tmp_kernel_op_215 * tmp_kernel_op_84 + tmp_kernel_op_216 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_59 +
                      tmp_kernel_op_199 * tmp_kernel_op_67 + tmp_kernel_op_200 * tmp_kernel_op_75 +
                      tmp_kernel_op_201 * tmp_kernel_op_83 + tmp_kernel_op_202 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_59 +
                      tmp_kernel_op_206 * tmp_kernel_op_67 + tmp_kernel_op_207 * tmp_kernel_op_75 +
                      tmp_kernel_op_208 * tmp_kernel_op_83 + tmp_kernel_op_209 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_59 +
                      tmp_kernel_op_213 * tmp_kernel_op_67 + tmp_kernel_op_214 * tmp_kernel_op_75 +
                      tmp_kernel_op_215 * tmp_kernel_op_83 + tmp_kernel_op_216 * tmp_kernel_op_91;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 * ( tmp_kernel_op_10 *
                                        ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                          ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                                    tmp_kernel_op_17 *
                                        ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                                          ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                                    tmp_kernel_op_24 *
                                        ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                                          ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                                    tmp_kernel_op_31 *
                                        ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                                          ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                                    tmp_kernel_op_38 *
                                        ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                                          ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                                    tmp_kernel_op_45 *
                                        ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                          ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_105 + src_dof_2 * tmp_kernel_op_112 + src_dof_3 * tmp_kernel_op_114 +
                      src_dof_4 * tmp_kernel_op_96 + src_dof_5 * tmp_kernel_op_97 + src_dof_6 * tmp_kernel_op_98 +
                      src_dof_7 * tmp_kernel_op_122 + src_dof_8 * tmp_kernel_op_129 + src_dof_9 * tmp_kernel_op_136;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_105 +
                      src_dof_1 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_152 + src_dof_3 * tmp_kernel_op_153 + src_dof_4 * tmp_kernel_op_149 +
                      src_dof_5 * tmp_kernel_op_150 + src_dof_6 * tmp_kernel_op_151 + src_dof_7 * tmp_kernel_op_154 +
                      src_dof_8 * tmp_kernel_op_155 + src_dof_9 * tmp_kernel_op_156;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_112 + src_dof_1 * tmp_kernel_op_152 +
                      src_dof_2 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_166 + src_dof_4 * tmp_kernel_op_163 + src_dof_5 * tmp_kernel_op_164 +
                      src_dof_6 * tmp_kernel_op_165 + src_dof_7 * tmp_kernel_op_167 + src_dof_8 * tmp_kernel_op_168 +
                      src_dof_9 * tmp_kernel_op_169;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_114 + src_dof_1 * tmp_kernel_op_153 + src_dof_2 * tmp_kernel_op_166 +
                      src_dof_3 * ( tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) ) +
                      src_dof_4 * tmp_kernel_op_177 + src_dof_5 * tmp_kernel_op_178 + src_dof_6 * tmp_kernel_op_179 +
                      src_dof_7 * tmp_kernel_op_180 + src_dof_8 * tmp_kernel_op_181 + src_dof_9 * tmp_kernel_op_182;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_96 + src_dof_1 * tmp_kernel_op_149 + src_dof_2 * tmp_kernel_op_163 +
                      src_dof_3 * tmp_kernel_op_177 +
                      src_dof_4 * ( tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                    tmp_kernel_op_185 * tmp_kernel_op_20 + tmp_kernel_op_186 * tmp_kernel_op_27 +
                                    tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41 ) +
                      src_dof_5 * tmp_kernel_op_189 + src_dof_6 * tmp_kernel_op_196 + src_dof_7 * tmp_kernel_op_203 +
                      src_dof_8 * tmp_kernel_op_210 + src_dof_9 * tmp_kernel_op_217;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_97 + src_dof_1 * tmp_kernel_op_150 + src_dof_2 * tmp_kernel_op_164 +
                      src_dof_3 * tmp_kernel_op_178 + src_dof_4 * tmp_kernel_op_189 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                    tmp_kernel_op_185 * tmp_kernel_op_19 + tmp_kernel_op_186 * tmp_kernel_op_26 +
                                    tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40 ) +
                      src_dof_6 * tmp_kernel_op_218 + src_dof_7 * tmp_kernel_op_219 + src_dof_8 * tmp_kernel_op_220 +
                      src_dof_9 * tmp_kernel_op_221;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_98 + src_dof_1 * tmp_kernel_op_151 + src_dof_2 * tmp_kernel_op_165 +
                      src_dof_3 * tmp_kernel_op_179 + src_dof_4 * tmp_kernel_op_196 + src_dof_5 * tmp_kernel_op_218 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                    tmp_kernel_op_19 * tmp_kernel_op_192 + tmp_kernel_op_193 * tmp_kernel_op_26 +
                                    tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40 ) +
                      src_dof_7 * tmp_kernel_op_222 + src_dof_8 * tmp_kernel_op_223 + src_dof_9 * tmp_kernel_op_224;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_122 + src_dof_1 * tmp_kernel_op_154 + src_dof_2 * tmp_kernel_op_167 +
                      src_dof_3 * tmp_kernel_op_180 + src_dof_4 * tmp_kernel_op_203 + src_dof_5 * tmp_kernel_op_219 +
                      src_dof_6 * tmp_kernel_op_222 +
                      src_dof_7 *
                          ( tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                          ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                            tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                            tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                            tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_226 + src_dof_9 * tmp_kernel_op_227;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_129 + src_dof_1 * tmp_kernel_op_155 + src_dof_2 * tmp_kernel_op_168 +
                      src_dof_3 * tmp_kernel_op_181 + src_dof_4 * tmp_kernel_op_210 + src_dof_5 * tmp_kernel_op_220 +
                      src_dof_6 * tmp_kernel_op_223 + src_dof_7 * tmp_kernel_op_226 +
                      src_dof_8 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_228;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_136 + src_dof_1 * tmp_kernel_op_156 + src_dof_2 * tmp_kernel_op_169 +
                      src_dof_3 * tmp_kernel_op_182 + src_dof_4 * tmp_kernel_op_217 + src_dof_5 * tmp_kernel_op_221 +
                      src_dof_6 * tmp_kernel_op_224 + src_dof_7 * tmp_kernel_op_227 + src_dof_8 * tmp_kernel_op_228 +
                      src_dof_9 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_UP */
         const walberla::float64 tmp_coords_jac_0_BLUE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_6_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_3_0_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) +
             tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_3_1_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) +
             tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_3_2_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) +
             tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
         const walberla::float64 jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
         const walberla::float64 jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
         const walberla::float64 jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
         const walberla::float64 jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
         const walberla::float64 jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = pow(
                      abs( ( ( jac_affine_0_0_BLUE_UP * jac_affine_0_0_BLUE_UP ) +
                             ( jac_affine_1_0_BLUE_UP * jac_affine_1_0_BLUE_UP ) +
                             ( jac_affine_2_0_BLUE_UP * jac_affine_2_0_BLUE_UP ) ) *
                               ( ( jac_affine_0_1_BLUE_UP * jac_affine_0_1_BLUE_UP ) +
                                 ( jac_affine_1_1_BLUE_UP * jac_affine_1_1_BLUE_UP ) +
                                 ( jac_affine_2_1_BLUE_UP * jac_affine_2_1_BLUE_UP ) ) -
                           ( ( jac_affine_0_0_BLUE_UP * jac_affine_0_1_BLUE_UP + jac_affine_1_0_BLUE_UP * jac_affine_1_1_BLUE_UP +
                               jac_affine_2_0_BLUE_UP * jac_affine_2_1_BLUE_UP ) *
                             ( jac_affine_0_0_BLUE_UP * jac_affine_0_1_BLUE_UP + jac_affine_1_0_BLUE_UP * jac_affine_1_1_BLUE_UP +
                               jac_affine_2_0_BLUE_UP * jac_affine_2_1_BLUE_UP ) ) ),
                      0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 + tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_52 + 1.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_55 =
                      tmp_kernel_op_54 * ( tmp_kernel_op_47 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_51 +
                                           tmp_kernel_op_53 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_56 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_60 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_56 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_63 =
                      tmp_kernel_op_62 * ( tmp_kernel_op_53 + tmp_kernel_op_57 + tmp_kernel_op_58 + tmp_kernel_op_59 +
                                           tmp_kernel_op_61 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_64 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_65 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_68 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_64 + tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_70 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_71 =
                      tmp_kernel_op_70 * ( tmp_kernel_op_53 + tmp_kernel_op_65 + tmp_kernel_op_66 + tmp_kernel_op_67 +
                                           tmp_kernel_op_69 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_72 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_74 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_76 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_72 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_79 =
                      tmp_kernel_op_78 * ( tmp_kernel_op_53 + tmp_kernel_op_73 + tmp_kernel_op_74 + tmp_kernel_op_75 +
                                           tmp_kernel_op_77 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_83 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_84 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_80 + tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_87 =
                      tmp_kernel_op_86 * ( tmp_kernel_op_53 + tmp_kernel_op_81 + tmp_kernel_op_82 + tmp_kernel_op_83 +
                                           tmp_kernel_op_85 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_89 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_92 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_88 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_95 =
                      tmp_kernel_op_94 * ( tmp_kernel_op_53 + tmp_kernel_op_89 + tmp_kernel_op_90 + tmp_kernel_op_91 +
                                           tmp_kernel_op_93 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_96 =
                      tmp_kernel_op_46 * tmp_kernel_op_55 + tmp_kernel_op_56 * tmp_kernel_op_63 +
                      tmp_kernel_op_64 * tmp_kernel_op_71 + tmp_kernel_op_72 * tmp_kernel_op_79 +
                      tmp_kernel_op_80 * tmp_kernel_op_87 + tmp_kernel_op_88 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_97 =
                      tmp_kernel_op_50 * tmp_kernel_op_55 + tmp_kernel_op_60 * tmp_kernel_op_63 +
                      tmp_kernel_op_68 * tmp_kernel_op_71 + tmp_kernel_op_76 * tmp_kernel_op_79 +
                      tmp_kernel_op_84 * tmp_kernel_op_87 + tmp_kernel_op_92 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_49 * tmp_kernel_op_55 + tmp_kernel_op_59 * tmp_kernel_op_63 +
                      tmp_kernel_op_67 * tmp_kernel_op_71 + tmp_kernel_op_75 * tmp_kernel_op_79 +
                      tmp_kernel_op_83 * tmp_kernel_op_87 + tmp_kernel_op_91 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_47 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_65 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_102 = tmp_kernel_op_73 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_81 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_89 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_105 =
                      tmp_kernel_op_100 * tmp_kernel_op_63 + tmp_kernel_op_101 * tmp_kernel_op_71 +
                      tmp_kernel_op_102 * tmp_kernel_op_79 + tmp_kernel_op_103 * tmp_kernel_op_87 +
                      tmp_kernel_op_104 * tmp_kernel_op_95 + tmp_kernel_op_55 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_58 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_66 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_109 = tmp_kernel_op_74 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_82 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_111 = tmp_kernel_op_90 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_106 * tmp_kernel_op_55 + tmp_kernel_op_107 * tmp_kernel_op_63 +
                      tmp_kernel_op_108 * tmp_kernel_op_71 + tmp_kernel_op_109 * tmp_kernel_op_79 +
                      tmp_kernel_op_110 * tmp_kernel_op_87 + tmp_kernel_op_111 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_113 = tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_113 * tmp_kernel_op_55 + tmp_kernel_op_113 * tmp_kernel_op_63 +
                      tmp_kernel_op_113 * tmp_kernel_op_71 + tmp_kernel_op_113 * tmp_kernel_op_79 +
                      tmp_kernel_op_113 * tmp_kernel_op_87 + tmp_kernel_op_113 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_69;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_77;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_85;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_116 * tmp_kernel_op_55 + tmp_kernel_op_117 * tmp_kernel_op_63 +
                      tmp_kernel_op_118 * tmp_kernel_op_71 + tmp_kernel_op_119 * tmp_kernel_op_79 +
                      tmp_kernel_op_120 * tmp_kernel_op_87 + tmp_kernel_op_121 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_46 - tmp_kernel_op_49 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_56 - tmp_kernel_op_59 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_64 - tmp_kernel_op_67 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_72 - tmp_kernel_op_75 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_80 - tmp_kernel_op_83 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_88 - tmp_kernel_op_91 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_123 * tmp_kernel_op_55 + tmp_kernel_op_124 * tmp_kernel_op_63 +
                      tmp_kernel_op_125 * tmp_kernel_op_71 + tmp_kernel_op_126 * tmp_kernel_op_79 +
                      tmp_kernel_op_127 * tmp_kernel_op_87 + tmp_kernel_op_128 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_59 - tmp_kernel_op_60 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_67 - tmp_kernel_op_68 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_75 - tmp_kernel_op_76 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_83 - tmp_kernel_op_84 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_91 - tmp_kernel_op_92 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_130 * tmp_kernel_op_55 + tmp_kernel_op_131 * tmp_kernel_op_63 +
                      tmp_kernel_op_132 * tmp_kernel_op_71 + tmp_kernel_op_133 * tmp_kernel_op_79 +
                      tmp_kernel_op_134 * tmp_kernel_op_87 + tmp_kernel_op_135 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_54 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_78 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_86 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_94 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_54 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_100 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_101 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_102 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_103 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_104 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_143 * tmp_kernel_op_46 + tmp_kernel_op_144 * tmp_kernel_op_56 +
                      tmp_kernel_op_145 * tmp_kernel_op_64 + tmp_kernel_op_146 * tmp_kernel_op_72 +
                      tmp_kernel_op_147 * tmp_kernel_op_80 + tmp_kernel_op_148 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_68 + tmp_kernel_op_146 * tmp_kernel_op_76 +
                      tmp_kernel_op_147 * tmp_kernel_op_84 + tmp_kernel_op_148 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_59 +
                      tmp_kernel_op_145 * tmp_kernel_op_67 + tmp_kernel_op_146 * tmp_kernel_op_75 +
                      tmp_kernel_op_147 * tmp_kernel_op_83 + tmp_kernel_op_148 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_106 * tmp_kernel_op_143 + tmp_kernel_op_107 * tmp_kernel_op_144 +
                      tmp_kernel_op_108 * tmp_kernel_op_145 + tmp_kernel_op_109 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_111 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_113 * tmp_kernel_op_143 + tmp_kernel_op_113 * tmp_kernel_op_144 +
                      tmp_kernel_op_113 * tmp_kernel_op_145 + tmp_kernel_op_113 * tmp_kernel_op_146 +
                      tmp_kernel_op_113 * tmp_kernel_op_147 + tmp_kernel_op_113 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_106 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_107 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_108 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_109 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_110 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_111 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_157 * tmp_kernel_op_46 + tmp_kernel_op_158 * tmp_kernel_op_56 +
                      tmp_kernel_op_159 * tmp_kernel_op_64 + tmp_kernel_op_160 * tmp_kernel_op_72 +
                      tmp_kernel_op_161 * tmp_kernel_op_80 + tmp_kernel_op_162 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_68 + tmp_kernel_op_160 * tmp_kernel_op_76 +
                      tmp_kernel_op_161 * tmp_kernel_op_84 + tmp_kernel_op_162 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_59 +
                      tmp_kernel_op_159 * tmp_kernel_op_67 + tmp_kernel_op_160 * tmp_kernel_op_75 +
                      tmp_kernel_op_161 * tmp_kernel_op_83 + tmp_kernel_op_162 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_113 * tmp_kernel_op_157 + tmp_kernel_op_113 * tmp_kernel_op_158 +
                      tmp_kernel_op_113 * tmp_kernel_op_159 + tmp_kernel_op_113 * tmp_kernel_op_160 +
                      tmp_kernel_op_113 * tmp_kernel_op_161 + tmp_kernel_op_113 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_113 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_113 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_113 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_113 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_113 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_113 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_46 + tmp_kernel_op_172 * tmp_kernel_op_56 +
                      tmp_kernel_op_173 * tmp_kernel_op_64 + tmp_kernel_op_174 * tmp_kernel_op_72 +
                      tmp_kernel_op_175 * tmp_kernel_op_80 + tmp_kernel_op_176 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_68 + tmp_kernel_op_174 * tmp_kernel_op_76 +
                      tmp_kernel_op_175 * tmp_kernel_op_84 + tmp_kernel_op_176 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_59 +
                      tmp_kernel_op_173 * tmp_kernel_op_67 + tmp_kernel_op_174 * tmp_kernel_op_75 +
                      tmp_kernel_op_175 * tmp_kernel_op_83 + tmp_kernel_op_176 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_121 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_46 + tmp_kernel_op_198 * tmp_kernel_op_56 +
                      tmp_kernel_op_199 * tmp_kernel_op_64 + tmp_kernel_op_200 * tmp_kernel_op_72 +
                      tmp_kernel_op_201 * tmp_kernel_op_80 + tmp_kernel_op_202 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_128 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_46 + tmp_kernel_op_205 * tmp_kernel_op_56 +
                      tmp_kernel_op_206 * tmp_kernel_op_64 + tmp_kernel_op_207 * tmp_kernel_op_72 +
                      tmp_kernel_op_208 * tmp_kernel_op_80 + tmp_kernel_op_209 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_135 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_46 + tmp_kernel_op_212 * tmp_kernel_op_56 +
                      tmp_kernel_op_213 * tmp_kernel_op_64 + tmp_kernel_op_214 * tmp_kernel_op_72 +
                      tmp_kernel_op_215 * tmp_kernel_op_80 + tmp_kernel_op_216 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_68 + tmp_kernel_op_200 * tmp_kernel_op_76 +
                      tmp_kernel_op_201 * tmp_kernel_op_84 + tmp_kernel_op_202 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_68 + tmp_kernel_op_207 * tmp_kernel_op_76 +
                      tmp_kernel_op_208 * tmp_kernel_op_84 + tmp_kernel_op_209 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_68 + tmp_kernel_op_214 * tmp_kernel_op_76 +
                      tmp_kernel_op_215 * tmp_kernel_op_84 + tmp_kernel_op_216 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_59 +
                      tmp_kernel_op_199 * tmp_kernel_op_67 + tmp_kernel_op_200 * tmp_kernel_op_75 +
                      tmp_kernel_op_201 * tmp_kernel_op_83 + tmp_kernel_op_202 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_59 +
                      tmp_kernel_op_206 * tmp_kernel_op_67 + tmp_kernel_op_207 * tmp_kernel_op_75 +
                      tmp_kernel_op_208 * tmp_kernel_op_83 + tmp_kernel_op_209 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_59 +
                      tmp_kernel_op_213 * tmp_kernel_op_67 + tmp_kernel_op_214 * tmp_kernel_op_75 +
                      tmp_kernel_op_215 * tmp_kernel_op_83 + tmp_kernel_op_216 * tmp_kernel_op_91;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 * ( tmp_kernel_op_10 *
                                        ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                          ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                                    tmp_kernel_op_17 *
                                        ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                                          ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                                    tmp_kernel_op_24 *
                                        ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                                          ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                                    tmp_kernel_op_31 *
                                        ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                                          ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                                    tmp_kernel_op_38 *
                                        ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                                          ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                                    tmp_kernel_op_45 *
                                        ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                          ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_105 + src_dof_2 * tmp_kernel_op_112 + src_dof_3 * tmp_kernel_op_114 +
                      src_dof_4 * tmp_kernel_op_96 + src_dof_5 * tmp_kernel_op_97 + src_dof_6 * tmp_kernel_op_98 +
                      src_dof_7 * tmp_kernel_op_122 + src_dof_8 * tmp_kernel_op_129 + src_dof_9 * tmp_kernel_op_136;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_105 +
                      src_dof_1 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_152 + src_dof_3 * tmp_kernel_op_153 + src_dof_4 * tmp_kernel_op_149 +
                      src_dof_5 * tmp_kernel_op_150 + src_dof_6 * tmp_kernel_op_151 + src_dof_7 * tmp_kernel_op_154 +
                      src_dof_8 * tmp_kernel_op_155 + src_dof_9 * tmp_kernel_op_156;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_112 + src_dof_1 * tmp_kernel_op_152 +
                      src_dof_2 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_166 + src_dof_4 * tmp_kernel_op_163 + src_dof_5 * tmp_kernel_op_164 +
                      src_dof_6 * tmp_kernel_op_165 + src_dof_7 * tmp_kernel_op_167 + src_dof_8 * tmp_kernel_op_168 +
                      src_dof_9 * tmp_kernel_op_169;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_114 + src_dof_1 * tmp_kernel_op_153 + src_dof_2 * tmp_kernel_op_166 +
                      src_dof_3 * ( tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) ) +
                      src_dof_4 * tmp_kernel_op_177 + src_dof_5 * tmp_kernel_op_178 + src_dof_6 * tmp_kernel_op_179 +
                      src_dof_7 * tmp_kernel_op_180 + src_dof_8 * tmp_kernel_op_181 + src_dof_9 * tmp_kernel_op_182;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_96 + src_dof_1 * tmp_kernel_op_149 + src_dof_2 * tmp_kernel_op_163 +
                      src_dof_3 * tmp_kernel_op_177 +
                      src_dof_4 * ( tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                    tmp_kernel_op_185 * tmp_kernel_op_20 + tmp_kernel_op_186 * tmp_kernel_op_27 +
                                    tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41 ) +
                      src_dof_5 * tmp_kernel_op_189 + src_dof_6 * tmp_kernel_op_196 + src_dof_7 * tmp_kernel_op_203 +
                      src_dof_8 * tmp_kernel_op_210 + src_dof_9 * tmp_kernel_op_217;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_97 + src_dof_1 * tmp_kernel_op_150 + src_dof_2 * tmp_kernel_op_164 +
                      src_dof_3 * tmp_kernel_op_178 + src_dof_4 * tmp_kernel_op_189 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                    tmp_kernel_op_185 * tmp_kernel_op_19 + tmp_kernel_op_186 * tmp_kernel_op_26 +
                                    tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40 ) +
                      src_dof_6 * tmp_kernel_op_218 + src_dof_7 * tmp_kernel_op_219 + src_dof_8 * tmp_kernel_op_220 +
                      src_dof_9 * tmp_kernel_op_221;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_98 + src_dof_1 * tmp_kernel_op_151 + src_dof_2 * tmp_kernel_op_165 +
                      src_dof_3 * tmp_kernel_op_179 + src_dof_4 * tmp_kernel_op_196 + src_dof_5 * tmp_kernel_op_218 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                    tmp_kernel_op_19 * tmp_kernel_op_192 + tmp_kernel_op_193 * tmp_kernel_op_26 +
                                    tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40 ) +
                      src_dof_7 * tmp_kernel_op_222 + src_dof_8 * tmp_kernel_op_223 + src_dof_9 * tmp_kernel_op_224;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_122 + src_dof_1 * tmp_kernel_op_154 + src_dof_2 * tmp_kernel_op_167 +
                      src_dof_3 * tmp_kernel_op_180 + src_dof_4 * tmp_kernel_op_203 + src_dof_5 * tmp_kernel_op_219 +
                      src_dof_6 * tmp_kernel_op_222 +
                      src_dof_7 *
                          ( tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                          ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                            tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                            tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                            tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_226 + src_dof_9 * tmp_kernel_op_227;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_129 + src_dof_1 * tmp_kernel_op_155 + src_dof_2 * tmp_kernel_op_168 +
                      src_dof_3 * tmp_kernel_op_181 + src_dof_4 * tmp_kernel_op_210 + src_dof_5 * tmp_kernel_op_220 +
                      src_dof_6 * tmp_kernel_op_223 + src_dof_7 * tmp_kernel_op_226 +
                      src_dof_8 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_228;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_136 + src_dof_1 * tmp_kernel_op_156 + src_dof_2 * tmp_kernel_op_169 +
                      src_dof_3 * tmp_kernel_op_182 + src_dof_4 * tmp_kernel_op_217 + src_dof_5 * tmp_kernel_op_221 +
                      src_dof_6 * tmp_kernel_op_224 + src_dof_7 * tmp_kernel_op_227 + src_dof_8 * tmp_kernel_op_228 +
                      src_dof_9 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_2 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMass::apply_P2ElementwiseBoundaryMass_facet_id_1_macro_3D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 + tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_52 + 1.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_55 =
                      tmp_kernel_op_54 * ( tmp_kernel_op_47 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_51 +
                                           tmp_kernel_op_53 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_56 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_60 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_56 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_63 =
                      tmp_kernel_op_62 * ( tmp_kernel_op_53 + tmp_kernel_op_57 + tmp_kernel_op_58 + tmp_kernel_op_59 +
                                           tmp_kernel_op_61 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_64 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_65 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_68 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_64 + tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_70 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_71 =
                      tmp_kernel_op_70 * ( tmp_kernel_op_53 + tmp_kernel_op_65 + tmp_kernel_op_66 + tmp_kernel_op_67 +
                                           tmp_kernel_op_69 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_72 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_74 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_76 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_72 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_79 =
                      tmp_kernel_op_78 * ( tmp_kernel_op_53 + tmp_kernel_op_73 + tmp_kernel_op_74 + tmp_kernel_op_75 +
                                           tmp_kernel_op_77 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_83 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_84 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_80 + tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_87 =
                      tmp_kernel_op_86 * ( tmp_kernel_op_53 + tmp_kernel_op_81 + tmp_kernel_op_82 + tmp_kernel_op_83 +
                                           tmp_kernel_op_85 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_89 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_92 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_88 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_95 =
                      tmp_kernel_op_94 * ( tmp_kernel_op_53 + tmp_kernel_op_89 + tmp_kernel_op_90 + tmp_kernel_op_91 +
                                           tmp_kernel_op_93 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_96 =
                      tmp_kernel_op_46 * tmp_kernel_op_55 + tmp_kernel_op_56 * tmp_kernel_op_63 +
                      tmp_kernel_op_64 * tmp_kernel_op_71 + tmp_kernel_op_72 * tmp_kernel_op_79 +
                      tmp_kernel_op_80 * tmp_kernel_op_87 + tmp_kernel_op_88 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_97 =
                      tmp_kernel_op_50 * tmp_kernel_op_55 + tmp_kernel_op_60 * tmp_kernel_op_63 +
                      tmp_kernel_op_68 * tmp_kernel_op_71 + tmp_kernel_op_76 * tmp_kernel_op_79 +
                      tmp_kernel_op_84 * tmp_kernel_op_87 + tmp_kernel_op_92 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_49 * tmp_kernel_op_55 + tmp_kernel_op_59 * tmp_kernel_op_63 +
                      tmp_kernel_op_67 * tmp_kernel_op_71 + tmp_kernel_op_75 * tmp_kernel_op_79 +
                      tmp_kernel_op_83 * tmp_kernel_op_87 + tmp_kernel_op_91 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_47 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_65 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_102 = tmp_kernel_op_73 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_81 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_89 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_105 =
                      tmp_kernel_op_100 * tmp_kernel_op_63 + tmp_kernel_op_101 * tmp_kernel_op_71 +
                      tmp_kernel_op_102 * tmp_kernel_op_79 + tmp_kernel_op_103 * tmp_kernel_op_87 +
                      tmp_kernel_op_104 * tmp_kernel_op_95 + tmp_kernel_op_55 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_58 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_66 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_109 = tmp_kernel_op_74 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_82 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_111 = tmp_kernel_op_90 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_106 * tmp_kernel_op_55 + tmp_kernel_op_107 * tmp_kernel_op_63 +
                      tmp_kernel_op_108 * tmp_kernel_op_71 + tmp_kernel_op_109 * tmp_kernel_op_79 +
                      tmp_kernel_op_110 * tmp_kernel_op_87 + tmp_kernel_op_111 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_113 = tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_113 * tmp_kernel_op_55 + tmp_kernel_op_113 * tmp_kernel_op_63 +
                      tmp_kernel_op_113 * tmp_kernel_op_71 + tmp_kernel_op_113 * tmp_kernel_op_79 +
                      tmp_kernel_op_113 * tmp_kernel_op_87 + tmp_kernel_op_113 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_69;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_77;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_85;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_116 * tmp_kernel_op_55 + tmp_kernel_op_117 * tmp_kernel_op_63 +
                      tmp_kernel_op_118 * tmp_kernel_op_71 + tmp_kernel_op_119 * tmp_kernel_op_79 +
                      tmp_kernel_op_120 * tmp_kernel_op_87 + tmp_kernel_op_121 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_46 - tmp_kernel_op_49 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_56 - tmp_kernel_op_59 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_64 - tmp_kernel_op_67 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_72 - tmp_kernel_op_75 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_80 - tmp_kernel_op_83 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_88 - tmp_kernel_op_91 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_123 * tmp_kernel_op_55 + tmp_kernel_op_124 * tmp_kernel_op_63 +
                      tmp_kernel_op_125 * tmp_kernel_op_71 + tmp_kernel_op_126 * tmp_kernel_op_79 +
                      tmp_kernel_op_127 * tmp_kernel_op_87 + tmp_kernel_op_128 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_59 - tmp_kernel_op_60 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_67 - tmp_kernel_op_68 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_75 - tmp_kernel_op_76 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_83 - tmp_kernel_op_84 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_91 - tmp_kernel_op_92 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_130 * tmp_kernel_op_55 + tmp_kernel_op_131 * tmp_kernel_op_63 +
                      tmp_kernel_op_132 * tmp_kernel_op_71 + tmp_kernel_op_133 * tmp_kernel_op_79 +
                      tmp_kernel_op_134 * tmp_kernel_op_87 + tmp_kernel_op_135 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_54 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_78 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_86 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_94 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_54 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_100 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_101 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_102 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_103 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_104 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_143 * tmp_kernel_op_46 + tmp_kernel_op_144 * tmp_kernel_op_56 +
                      tmp_kernel_op_145 * tmp_kernel_op_64 + tmp_kernel_op_146 * tmp_kernel_op_72 +
                      tmp_kernel_op_147 * tmp_kernel_op_80 + tmp_kernel_op_148 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_68 + tmp_kernel_op_146 * tmp_kernel_op_76 +
                      tmp_kernel_op_147 * tmp_kernel_op_84 + tmp_kernel_op_148 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_59 +
                      tmp_kernel_op_145 * tmp_kernel_op_67 + tmp_kernel_op_146 * tmp_kernel_op_75 +
                      tmp_kernel_op_147 * tmp_kernel_op_83 + tmp_kernel_op_148 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_106 * tmp_kernel_op_143 + tmp_kernel_op_107 * tmp_kernel_op_144 +
                      tmp_kernel_op_108 * tmp_kernel_op_145 + tmp_kernel_op_109 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_111 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_113 * tmp_kernel_op_143 + tmp_kernel_op_113 * tmp_kernel_op_144 +
                      tmp_kernel_op_113 * tmp_kernel_op_145 + tmp_kernel_op_113 * tmp_kernel_op_146 +
                      tmp_kernel_op_113 * tmp_kernel_op_147 + tmp_kernel_op_113 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_106 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_107 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_108 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_109 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_110 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_111 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_157 * tmp_kernel_op_46 + tmp_kernel_op_158 * tmp_kernel_op_56 +
                      tmp_kernel_op_159 * tmp_kernel_op_64 + tmp_kernel_op_160 * tmp_kernel_op_72 +
                      tmp_kernel_op_161 * tmp_kernel_op_80 + tmp_kernel_op_162 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_68 + tmp_kernel_op_160 * tmp_kernel_op_76 +
                      tmp_kernel_op_161 * tmp_kernel_op_84 + tmp_kernel_op_162 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_59 +
                      tmp_kernel_op_159 * tmp_kernel_op_67 + tmp_kernel_op_160 * tmp_kernel_op_75 +
                      tmp_kernel_op_161 * tmp_kernel_op_83 + tmp_kernel_op_162 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_113 * tmp_kernel_op_157 + tmp_kernel_op_113 * tmp_kernel_op_158 +
                      tmp_kernel_op_113 * tmp_kernel_op_159 + tmp_kernel_op_113 * tmp_kernel_op_160 +
                      tmp_kernel_op_113 * tmp_kernel_op_161 + tmp_kernel_op_113 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_113 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_113 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_113 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_113 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_113 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_113 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_46 + tmp_kernel_op_172 * tmp_kernel_op_56 +
                      tmp_kernel_op_173 * tmp_kernel_op_64 + tmp_kernel_op_174 * tmp_kernel_op_72 +
                      tmp_kernel_op_175 * tmp_kernel_op_80 + tmp_kernel_op_176 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_68 + tmp_kernel_op_174 * tmp_kernel_op_76 +
                      tmp_kernel_op_175 * tmp_kernel_op_84 + tmp_kernel_op_176 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_59 +
                      tmp_kernel_op_173 * tmp_kernel_op_67 + tmp_kernel_op_174 * tmp_kernel_op_75 +
                      tmp_kernel_op_175 * tmp_kernel_op_83 + tmp_kernel_op_176 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_121 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_46 + tmp_kernel_op_198 * tmp_kernel_op_56 +
                      tmp_kernel_op_199 * tmp_kernel_op_64 + tmp_kernel_op_200 * tmp_kernel_op_72 +
                      tmp_kernel_op_201 * tmp_kernel_op_80 + tmp_kernel_op_202 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_128 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_46 + tmp_kernel_op_205 * tmp_kernel_op_56 +
                      tmp_kernel_op_206 * tmp_kernel_op_64 + tmp_kernel_op_207 * tmp_kernel_op_72 +
                      tmp_kernel_op_208 * tmp_kernel_op_80 + tmp_kernel_op_209 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_135 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_46 + tmp_kernel_op_212 * tmp_kernel_op_56 +
                      tmp_kernel_op_213 * tmp_kernel_op_64 + tmp_kernel_op_214 * tmp_kernel_op_72 +
                      tmp_kernel_op_215 * tmp_kernel_op_80 + tmp_kernel_op_216 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_68 + tmp_kernel_op_200 * tmp_kernel_op_76 +
                      tmp_kernel_op_201 * tmp_kernel_op_84 + tmp_kernel_op_202 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_68 + tmp_kernel_op_207 * tmp_kernel_op_76 +
                      tmp_kernel_op_208 * tmp_kernel_op_84 + tmp_kernel_op_209 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_68 + tmp_kernel_op_214 * tmp_kernel_op_76 +
                      tmp_kernel_op_215 * tmp_kernel_op_84 + tmp_kernel_op_216 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_59 +
                      tmp_kernel_op_199 * tmp_kernel_op_67 + tmp_kernel_op_200 * tmp_kernel_op_75 +
                      tmp_kernel_op_201 * tmp_kernel_op_83 + tmp_kernel_op_202 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_59 +
                      tmp_kernel_op_206 * tmp_kernel_op_67 + tmp_kernel_op_207 * tmp_kernel_op_75 +
                      tmp_kernel_op_208 * tmp_kernel_op_83 + tmp_kernel_op_209 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_59 +
                      tmp_kernel_op_213 * tmp_kernel_op_67 + tmp_kernel_op_214 * tmp_kernel_op_75 +
                      tmp_kernel_op_215 * tmp_kernel_op_83 + tmp_kernel_op_216 * tmp_kernel_op_91;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 * ( tmp_kernel_op_10 *
                                        ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                          ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                                    tmp_kernel_op_17 *
                                        ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                                          ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                                    tmp_kernel_op_24 *
                                        ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                                          ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                                    tmp_kernel_op_31 *
                                        ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                                          ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                                    tmp_kernel_op_38 *
                                        ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                                          ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                                    tmp_kernel_op_45 *
                                        ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                          ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_105 + src_dof_2 * tmp_kernel_op_112 + src_dof_3 * tmp_kernel_op_114 +
                      src_dof_4 * tmp_kernel_op_96 + src_dof_5 * tmp_kernel_op_97 + src_dof_6 * tmp_kernel_op_98 +
                      src_dof_7 * tmp_kernel_op_122 + src_dof_8 * tmp_kernel_op_129 + src_dof_9 * tmp_kernel_op_136;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_105 +
                      src_dof_1 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_152 + src_dof_3 * tmp_kernel_op_153 + src_dof_4 * tmp_kernel_op_149 +
                      src_dof_5 * tmp_kernel_op_150 + src_dof_6 * tmp_kernel_op_151 + src_dof_7 * tmp_kernel_op_154 +
                      src_dof_8 * tmp_kernel_op_155 + src_dof_9 * tmp_kernel_op_156;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_112 + src_dof_1 * tmp_kernel_op_152 +
                      src_dof_2 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_166 + src_dof_4 * tmp_kernel_op_163 + src_dof_5 * tmp_kernel_op_164 +
                      src_dof_6 * tmp_kernel_op_165 + src_dof_7 * tmp_kernel_op_167 + src_dof_8 * tmp_kernel_op_168 +
                      src_dof_9 * tmp_kernel_op_169;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_114 + src_dof_1 * tmp_kernel_op_153 + src_dof_2 * tmp_kernel_op_166 +
                      src_dof_3 * ( tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) ) +
                      src_dof_4 * tmp_kernel_op_177 + src_dof_5 * tmp_kernel_op_178 + src_dof_6 * tmp_kernel_op_179 +
                      src_dof_7 * tmp_kernel_op_180 + src_dof_8 * tmp_kernel_op_181 + src_dof_9 * tmp_kernel_op_182;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_96 + src_dof_1 * tmp_kernel_op_149 + src_dof_2 * tmp_kernel_op_163 +
                      src_dof_3 * tmp_kernel_op_177 +
                      src_dof_4 * ( tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                    tmp_kernel_op_185 * tmp_kernel_op_20 + tmp_kernel_op_186 * tmp_kernel_op_27 +
                                    tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41 ) +
                      src_dof_5 * tmp_kernel_op_189 + src_dof_6 * tmp_kernel_op_196 + src_dof_7 * tmp_kernel_op_203 +
                      src_dof_8 * tmp_kernel_op_210 + src_dof_9 * tmp_kernel_op_217;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_97 + src_dof_1 * tmp_kernel_op_150 + src_dof_2 * tmp_kernel_op_164 +
                      src_dof_3 * tmp_kernel_op_178 + src_dof_4 * tmp_kernel_op_189 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                    tmp_kernel_op_185 * tmp_kernel_op_19 + tmp_kernel_op_186 * tmp_kernel_op_26 +
                                    tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40 ) +
                      src_dof_6 * tmp_kernel_op_218 + src_dof_7 * tmp_kernel_op_219 + src_dof_8 * tmp_kernel_op_220 +
                      src_dof_9 * tmp_kernel_op_221;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_98 + src_dof_1 * tmp_kernel_op_151 + src_dof_2 * tmp_kernel_op_165 +
                      src_dof_3 * tmp_kernel_op_179 + src_dof_4 * tmp_kernel_op_196 + src_dof_5 * tmp_kernel_op_218 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                    tmp_kernel_op_19 * tmp_kernel_op_192 + tmp_kernel_op_193 * tmp_kernel_op_26 +
                                    tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40 ) +
                      src_dof_7 * tmp_kernel_op_222 + src_dof_8 * tmp_kernel_op_223 + src_dof_9 * tmp_kernel_op_224;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_122 + src_dof_1 * tmp_kernel_op_154 + src_dof_2 * tmp_kernel_op_167 +
                      src_dof_3 * tmp_kernel_op_180 + src_dof_4 * tmp_kernel_op_203 + src_dof_5 * tmp_kernel_op_219 +
                      src_dof_6 * tmp_kernel_op_222 +
                      src_dof_7 *
                          ( tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                          ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                            tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                            tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                            tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_226 + src_dof_9 * tmp_kernel_op_227;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_129 + src_dof_1 * tmp_kernel_op_155 + src_dof_2 * tmp_kernel_op_168 +
                      src_dof_3 * tmp_kernel_op_181 + src_dof_4 * tmp_kernel_op_210 + src_dof_5 * tmp_kernel_op_220 +
                      src_dof_6 * tmp_kernel_op_223 + src_dof_7 * tmp_kernel_op_226 +
                      src_dof_8 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_228;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_136 + src_dof_1 * tmp_kernel_op_156 + src_dof_2 * tmp_kernel_op_169 +
                      src_dof_3 * tmp_kernel_op_182 + src_dof_4 * tmp_kernel_op_217 + src_dof_5 * tmp_kernel_op_221 +
                      src_dof_6 * tmp_kernel_op_224 + src_dof_7 * tmp_kernel_op_227 + src_dof_8 * tmp_kernel_op_228 +
                      src_dof_9 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_UP */
         const walberla::float64 tmp_coords_jac_0_GREEN_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_6_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
         const walberla::float64 p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
         const walberla::float64 p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
         const walberla::float64 p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_2_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_2_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_2_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_3_0_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
         const walberla::float64 jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
         const walberla::float64 jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
         const walberla::float64 jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
         const walberla::float64 jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
         const walberla::float64 jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_GREEN_UP * jac_affine_0_0_GREEN_UP ) +
                                  ( jac_affine_1_0_GREEN_UP * jac_affine_1_0_GREEN_UP ) +
                                  ( jac_affine_2_0_GREEN_UP * jac_affine_2_0_GREEN_UP ) ) *
                                    ( ( jac_affine_0_1_GREEN_UP * jac_affine_0_1_GREEN_UP ) +
                                      ( jac_affine_1_1_GREEN_UP * jac_affine_1_1_GREEN_UP ) +
                                      ( jac_affine_2_1_GREEN_UP * jac_affine_2_1_GREEN_UP ) ) -
                                ( ( jac_affine_0_0_GREEN_UP * jac_affine_0_1_GREEN_UP +
                                    jac_affine_1_0_GREEN_UP * jac_affine_1_1_GREEN_UP +
                                    jac_affine_2_0_GREEN_UP * jac_affine_2_1_GREEN_UP ) *
                                  ( jac_affine_0_0_GREEN_UP * jac_affine_0_1_GREEN_UP +
                                    jac_affine_1_0_GREEN_UP * jac_affine_1_1_GREEN_UP +
                                    jac_affine_2_0_GREEN_UP * jac_affine_2_1_GREEN_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 + tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_52 + 1.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_55 =
                      tmp_kernel_op_54 * ( tmp_kernel_op_47 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_51 +
                                           tmp_kernel_op_53 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_56 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_60 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_56 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_63 =
                      tmp_kernel_op_62 * ( tmp_kernel_op_53 + tmp_kernel_op_57 + tmp_kernel_op_58 + tmp_kernel_op_59 +
                                           tmp_kernel_op_61 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_64 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_65 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_68 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_64 + tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_70 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_71 =
                      tmp_kernel_op_70 * ( tmp_kernel_op_53 + tmp_kernel_op_65 + tmp_kernel_op_66 + tmp_kernel_op_67 +
                                           tmp_kernel_op_69 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_72 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_74 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_76 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_72 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_79 =
                      tmp_kernel_op_78 * ( tmp_kernel_op_53 + tmp_kernel_op_73 + tmp_kernel_op_74 + tmp_kernel_op_75 +
                                           tmp_kernel_op_77 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_83 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_84 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_80 + tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_87 =
                      tmp_kernel_op_86 * ( tmp_kernel_op_53 + tmp_kernel_op_81 + tmp_kernel_op_82 + tmp_kernel_op_83 +
                                           tmp_kernel_op_85 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_89 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_92 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_88 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_95 =
                      tmp_kernel_op_94 * ( tmp_kernel_op_53 + tmp_kernel_op_89 + tmp_kernel_op_90 + tmp_kernel_op_91 +
                                           tmp_kernel_op_93 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_96 =
                      tmp_kernel_op_46 * tmp_kernel_op_55 + tmp_kernel_op_56 * tmp_kernel_op_63 +
                      tmp_kernel_op_64 * tmp_kernel_op_71 + tmp_kernel_op_72 * tmp_kernel_op_79 +
                      tmp_kernel_op_80 * tmp_kernel_op_87 + tmp_kernel_op_88 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_97 =
                      tmp_kernel_op_50 * tmp_kernel_op_55 + tmp_kernel_op_60 * tmp_kernel_op_63 +
                      tmp_kernel_op_68 * tmp_kernel_op_71 + tmp_kernel_op_76 * tmp_kernel_op_79 +
                      tmp_kernel_op_84 * tmp_kernel_op_87 + tmp_kernel_op_92 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_49 * tmp_kernel_op_55 + tmp_kernel_op_59 * tmp_kernel_op_63 +
                      tmp_kernel_op_67 * tmp_kernel_op_71 + tmp_kernel_op_75 * tmp_kernel_op_79 +
                      tmp_kernel_op_83 * tmp_kernel_op_87 + tmp_kernel_op_91 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_47 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_65 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_102 = tmp_kernel_op_73 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_81 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_89 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_105 =
                      tmp_kernel_op_100 * tmp_kernel_op_63 + tmp_kernel_op_101 * tmp_kernel_op_71 +
                      tmp_kernel_op_102 * tmp_kernel_op_79 + tmp_kernel_op_103 * tmp_kernel_op_87 +
                      tmp_kernel_op_104 * tmp_kernel_op_95 + tmp_kernel_op_55 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_58 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_66 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_109 = tmp_kernel_op_74 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_82 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_111 = tmp_kernel_op_90 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_106 * tmp_kernel_op_55 + tmp_kernel_op_107 * tmp_kernel_op_63 +
                      tmp_kernel_op_108 * tmp_kernel_op_71 + tmp_kernel_op_109 * tmp_kernel_op_79 +
                      tmp_kernel_op_110 * tmp_kernel_op_87 + tmp_kernel_op_111 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_113 = tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_113 * tmp_kernel_op_55 + tmp_kernel_op_113 * tmp_kernel_op_63 +
                      tmp_kernel_op_113 * tmp_kernel_op_71 + tmp_kernel_op_113 * tmp_kernel_op_79 +
                      tmp_kernel_op_113 * tmp_kernel_op_87 + tmp_kernel_op_113 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_69;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_77;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_85;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_116 * tmp_kernel_op_55 + tmp_kernel_op_117 * tmp_kernel_op_63 +
                      tmp_kernel_op_118 * tmp_kernel_op_71 + tmp_kernel_op_119 * tmp_kernel_op_79 +
                      tmp_kernel_op_120 * tmp_kernel_op_87 + tmp_kernel_op_121 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_46 - tmp_kernel_op_49 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_56 - tmp_kernel_op_59 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_64 - tmp_kernel_op_67 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_72 - tmp_kernel_op_75 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_80 - tmp_kernel_op_83 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_88 - tmp_kernel_op_91 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_123 * tmp_kernel_op_55 + tmp_kernel_op_124 * tmp_kernel_op_63 +
                      tmp_kernel_op_125 * tmp_kernel_op_71 + tmp_kernel_op_126 * tmp_kernel_op_79 +
                      tmp_kernel_op_127 * tmp_kernel_op_87 + tmp_kernel_op_128 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_59 - tmp_kernel_op_60 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_67 - tmp_kernel_op_68 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_75 - tmp_kernel_op_76 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_83 - tmp_kernel_op_84 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_91 - tmp_kernel_op_92 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_130 * tmp_kernel_op_55 + tmp_kernel_op_131 * tmp_kernel_op_63 +
                      tmp_kernel_op_132 * tmp_kernel_op_71 + tmp_kernel_op_133 * tmp_kernel_op_79 +
                      tmp_kernel_op_134 * tmp_kernel_op_87 + tmp_kernel_op_135 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_54 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_78 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_86 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_94 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_54 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_100 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_101 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_102 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_103 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_104 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_143 * tmp_kernel_op_46 + tmp_kernel_op_144 * tmp_kernel_op_56 +
                      tmp_kernel_op_145 * tmp_kernel_op_64 + tmp_kernel_op_146 * tmp_kernel_op_72 +
                      tmp_kernel_op_147 * tmp_kernel_op_80 + tmp_kernel_op_148 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_68 + tmp_kernel_op_146 * tmp_kernel_op_76 +
                      tmp_kernel_op_147 * tmp_kernel_op_84 + tmp_kernel_op_148 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_59 +
                      tmp_kernel_op_145 * tmp_kernel_op_67 + tmp_kernel_op_146 * tmp_kernel_op_75 +
                      tmp_kernel_op_147 * tmp_kernel_op_83 + tmp_kernel_op_148 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_106 * tmp_kernel_op_143 + tmp_kernel_op_107 * tmp_kernel_op_144 +
                      tmp_kernel_op_108 * tmp_kernel_op_145 + tmp_kernel_op_109 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_111 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_113 * tmp_kernel_op_143 + tmp_kernel_op_113 * tmp_kernel_op_144 +
                      tmp_kernel_op_113 * tmp_kernel_op_145 + tmp_kernel_op_113 * tmp_kernel_op_146 +
                      tmp_kernel_op_113 * tmp_kernel_op_147 + tmp_kernel_op_113 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_106 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_107 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_108 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_109 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_110 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_111 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_157 * tmp_kernel_op_46 + tmp_kernel_op_158 * tmp_kernel_op_56 +
                      tmp_kernel_op_159 * tmp_kernel_op_64 + tmp_kernel_op_160 * tmp_kernel_op_72 +
                      tmp_kernel_op_161 * tmp_kernel_op_80 + tmp_kernel_op_162 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_68 + tmp_kernel_op_160 * tmp_kernel_op_76 +
                      tmp_kernel_op_161 * tmp_kernel_op_84 + tmp_kernel_op_162 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_59 +
                      tmp_kernel_op_159 * tmp_kernel_op_67 + tmp_kernel_op_160 * tmp_kernel_op_75 +
                      tmp_kernel_op_161 * tmp_kernel_op_83 + tmp_kernel_op_162 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_113 * tmp_kernel_op_157 + tmp_kernel_op_113 * tmp_kernel_op_158 +
                      tmp_kernel_op_113 * tmp_kernel_op_159 + tmp_kernel_op_113 * tmp_kernel_op_160 +
                      tmp_kernel_op_113 * tmp_kernel_op_161 + tmp_kernel_op_113 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_113 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_113 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_113 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_113 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_113 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_113 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_46 + tmp_kernel_op_172 * tmp_kernel_op_56 +
                      tmp_kernel_op_173 * tmp_kernel_op_64 + tmp_kernel_op_174 * tmp_kernel_op_72 +
                      tmp_kernel_op_175 * tmp_kernel_op_80 + tmp_kernel_op_176 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_68 + tmp_kernel_op_174 * tmp_kernel_op_76 +
                      tmp_kernel_op_175 * tmp_kernel_op_84 + tmp_kernel_op_176 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_59 +
                      tmp_kernel_op_173 * tmp_kernel_op_67 + tmp_kernel_op_174 * tmp_kernel_op_75 +
                      tmp_kernel_op_175 * tmp_kernel_op_83 + tmp_kernel_op_176 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_121 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_46 + tmp_kernel_op_198 * tmp_kernel_op_56 +
                      tmp_kernel_op_199 * tmp_kernel_op_64 + tmp_kernel_op_200 * tmp_kernel_op_72 +
                      tmp_kernel_op_201 * tmp_kernel_op_80 + tmp_kernel_op_202 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_128 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_46 + tmp_kernel_op_205 * tmp_kernel_op_56 +
                      tmp_kernel_op_206 * tmp_kernel_op_64 + tmp_kernel_op_207 * tmp_kernel_op_72 +
                      tmp_kernel_op_208 * tmp_kernel_op_80 + tmp_kernel_op_209 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_135 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_46 + tmp_kernel_op_212 * tmp_kernel_op_56 +
                      tmp_kernel_op_213 * tmp_kernel_op_64 + tmp_kernel_op_214 * tmp_kernel_op_72 +
                      tmp_kernel_op_215 * tmp_kernel_op_80 + tmp_kernel_op_216 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_68 + tmp_kernel_op_200 * tmp_kernel_op_76 +
                      tmp_kernel_op_201 * tmp_kernel_op_84 + tmp_kernel_op_202 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_68 + tmp_kernel_op_207 * tmp_kernel_op_76 +
                      tmp_kernel_op_208 * tmp_kernel_op_84 + tmp_kernel_op_209 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_68 + tmp_kernel_op_214 * tmp_kernel_op_76 +
                      tmp_kernel_op_215 * tmp_kernel_op_84 + tmp_kernel_op_216 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_59 +
                      tmp_kernel_op_199 * tmp_kernel_op_67 + tmp_kernel_op_200 * tmp_kernel_op_75 +
                      tmp_kernel_op_201 * tmp_kernel_op_83 + tmp_kernel_op_202 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_59 +
                      tmp_kernel_op_206 * tmp_kernel_op_67 + tmp_kernel_op_207 * tmp_kernel_op_75 +
                      tmp_kernel_op_208 * tmp_kernel_op_83 + tmp_kernel_op_209 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_59 +
                      tmp_kernel_op_213 * tmp_kernel_op_67 + tmp_kernel_op_214 * tmp_kernel_op_75 +
                      tmp_kernel_op_215 * tmp_kernel_op_83 + tmp_kernel_op_216 * tmp_kernel_op_91;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 * ( tmp_kernel_op_10 *
                                        ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                          ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                                    tmp_kernel_op_17 *
                                        ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                                          ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                                    tmp_kernel_op_24 *
                                        ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                                          ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                                    tmp_kernel_op_31 *
                                        ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                                          ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                                    tmp_kernel_op_38 *
                                        ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                                          ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                                    tmp_kernel_op_45 *
                                        ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                          ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_105 + src_dof_2 * tmp_kernel_op_112 + src_dof_3 * tmp_kernel_op_114 +
                      src_dof_4 * tmp_kernel_op_96 + src_dof_5 * tmp_kernel_op_97 + src_dof_6 * tmp_kernel_op_98 +
                      src_dof_7 * tmp_kernel_op_122 + src_dof_8 * tmp_kernel_op_129 + src_dof_9 * tmp_kernel_op_136;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_105 +
                      src_dof_1 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_152 + src_dof_3 * tmp_kernel_op_153 + src_dof_4 * tmp_kernel_op_149 +
                      src_dof_5 * tmp_kernel_op_150 + src_dof_6 * tmp_kernel_op_151 + src_dof_7 * tmp_kernel_op_154 +
                      src_dof_8 * tmp_kernel_op_155 + src_dof_9 * tmp_kernel_op_156;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_112 + src_dof_1 * tmp_kernel_op_152 +
                      src_dof_2 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_166 + src_dof_4 * tmp_kernel_op_163 + src_dof_5 * tmp_kernel_op_164 +
                      src_dof_6 * tmp_kernel_op_165 + src_dof_7 * tmp_kernel_op_167 + src_dof_8 * tmp_kernel_op_168 +
                      src_dof_9 * tmp_kernel_op_169;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_114 + src_dof_1 * tmp_kernel_op_153 + src_dof_2 * tmp_kernel_op_166 +
                      src_dof_3 * ( tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) ) +
                      src_dof_4 * tmp_kernel_op_177 + src_dof_5 * tmp_kernel_op_178 + src_dof_6 * tmp_kernel_op_179 +
                      src_dof_7 * tmp_kernel_op_180 + src_dof_8 * tmp_kernel_op_181 + src_dof_9 * tmp_kernel_op_182;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_96 + src_dof_1 * tmp_kernel_op_149 + src_dof_2 * tmp_kernel_op_163 +
                      src_dof_3 * tmp_kernel_op_177 +
                      src_dof_4 * ( tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                    tmp_kernel_op_185 * tmp_kernel_op_20 + tmp_kernel_op_186 * tmp_kernel_op_27 +
                                    tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41 ) +
                      src_dof_5 * tmp_kernel_op_189 + src_dof_6 * tmp_kernel_op_196 + src_dof_7 * tmp_kernel_op_203 +
                      src_dof_8 * tmp_kernel_op_210 + src_dof_9 * tmp_kernel_op_217;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_97 + src_dof_1 * tmp_kernel_op_150 + src_dof_2 * tmp_kernel_op_164 +
                      src_dof_3 * tmp_kernel_op_178 + src_dof_4 * tmp_kernel_op_189 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                    tmp_kernel_op_185 * tmp_kernel_op_19 + tmp_kernel_op_186 * tmp_kernel_op_26 +
                                    tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40 ) +
                      src_dof_6 * tmp_kernel_op_218 + src_dof_7 * tmp_kernel_op_219 + src_dof_8 * tmp_kernel_op_220 +
                      src_dof_9 * tmp_kernel_op_221;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_98 + src_dof_1 * tmp_kernel_op_151 + src_dof_2 * tmp_kernel_op_165 +
                      src_dof_3 * tmp_kernel_op_179 + src_dof_4 * tmp_kernel_op_196 + src_dof_5 * tmp_kernel_op_218 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                    tmp_kernel_op_19 * tmp_kernel_op_192 + tmp_kernel_op_193 * tmp_kernel_op_26 +
                                    tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40 ) +
                      src_dof_7 * tmp_kernel_op_222 + src_dof_8 * tmp_kernel_op_223 + src_dof_9 * tmp_kernel_op_224;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_122 + src_dof_1 * tmp_kernel_op_154 + src_dof_2 * tmp_kernel_op_167 +
                      src_dof_3 * tmp_kernel_op_180 + src_dof_4 * tmp_kernel_op_203 + src_dof_5 * tmp_kernel_op_219 +
                      src_dof_6 * tmp_kernel_op_222 +
                      src_dof_7 *
                          ( tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                          ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                            tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                            tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                            tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_226 + src_dof_9 * tmp_kernel_op_227;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_129 + src_dof_1 * tmp_kernel_op_155 + src_dof_2 * tmp_kernel_op_168 +
                      src_dof_3 * tmp_kernel_op_181 + src_dof_4 * tmp_kernel_op_210 + src_dof_5 * tmp_kernel_op_220 +
                      src_dof_6 * tmp_kernel_op_223 + src_dof_7 * tmp_kernel_op_226 +
                      src_dof_8 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_228;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_136 + src_dof_1 * tmp_kernel_op_156 + src_dof_2 * tmp_kernel_op_169 +
                      src_dof_3 * tmp_kernel_op_182 + src_dof_4 * tmp_kernel_op_217 + src_dof_5 * tmp_kernel_op_221 +
                      src_dof_6 * tmp_kernel_op_224 + src_dof_7 * tmp_kernel_op_227 + src_dof_8 * tmp_kernel_op_228 +
                      src_dof_9 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMass::apply_P2ElementwiseBoundaryMass_facet_id_2_macro_3D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 + tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_52 + 1.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_55 =
                      tmp_kernel_op_54 * ( tmp_kernel_op_47 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_51 +
                                           tmp_kernel_op_53 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_56 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_60 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_56 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_63 =
                      tmp_kernel_op_62 * ( tmp_kernel_op_53 + tmp_kernel_op_57 + tmp_kernel_op_58 + tmp_kernel_op_59 +
                                           tmp_kernel_op_61 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_64 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_65 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_68 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_64 + tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_70 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_71 =
                      tmp_kernel_op_70 * ( tmp_kernel_op_53 + tmp_kernel_op_65 + tmp_kernel_op_66 + tmp_kernel_op_67 +
                                           tmp_kernel_op_69 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_72 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_74 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_76 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_72 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_79 =
                      tmp_kernel_op_78 * ( tmp_kernel_op_53 + tmp_kernel_op_73 + tmp_kernel_op_74 + tmp_kernel_op_75 +
                                           tmp_kernel_op_77 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_83 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_84 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_80 + tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_87 =
                      tmp_kernel_op_86 * ( tmp_kernel_op_53 + tmp_kernel_op_81 + tmp_kernel_op_82 + tmp_kernel_op_83 +
                                           tmp_kernel_op_85 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_89 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_92 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_88 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_95 =
                      tmp_kernel_op_94 * ( tmp_kernel_op_53 + tmp_kernel_op_89 + tmp_kernel_op_90 + tmp_kernel_op_91 +
                                           tmp_kernel_op_93 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_96 =
                      tmp_kernel_op_46 * tmp_kernel_op_55 + tmp_kernel_op_56 * tmp_kernel_op_63 +
                      tmp_kernel_op_64 * tmp_kernel_op_71 + tmp_kernel_op_72 * tmp_kernel_op_79 +
                      tmp_kernel_op_80 * tmp_kernel_op_87 + tmp_kernel_op_88 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_97 =
                      tmp_kernel_op_50 * tmp_kernel_op_55 + tmp_kernel_op_60 * tmp_kernel_op_63 +
                      tmp_kernel_op_68 * tmp_kernel_op_71 + tmp_kernel_op_76 * tmp_kernel_op_79 +
                      tmp_kernel_op_84 * tmp_kernel_op_87 + tmp_kernel_op_92 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_49 * tmp_kernel_op_55 + tmp_kernel_op_59 * tmp_kernel_op_63 +
                      tmp_kernel_op_67 * tmp_kernel_op_71 + tmp_kernel_op_75 * tmp_kernel_op_79 +
                      tmp_kernel_op_83 * tmp_kernel_op_87 + tmp_kernel_op_91 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_47 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_65 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_102 = tmp_kernel_op_73 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_81 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_89 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_105 =
                      tmp_kernel_op_100 * tmp_kernel_op_63 + tmp_kernel_op_101 * tmp_kernel_op_71 +
                      tmp_kernel_op_102 * tmp_kernel_op_79 + tmp_kernel_op_103 * tmp_kernel_op_87 +
                      tmp_kernel_op_104 * tmp_kernel_op_95 + tmp_kernel_op_55 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_58 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_66 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_109 = tmp_kernel_op_74 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_82 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_111 = tmp_kernel_op_90 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_106 * tmp_kernel_op_55 + tmp_kernel_op_107 * tmp_kernel_op_63 +
                      tmp_kernel_op_108 * tmp_kernel_op_71 + tmp_kernel_op_109 * tmp_kernel_op_79 +
                      tmp_kernel_op_110 * tmp_kernel_op_87 + tmp_kernel_op_111 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_113 = tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_113 * tmp_kernel_op_55 + tmp_kernel_op_113 * tmp_kernel_op_63 +
                      tmp_kernel_op_113 * tmp_kernel_op_71 + tmp_kernel_op_113 * tmp_kernel_op_79 +
                      tmp_kernel_op_113 * tmp_kernel_op_87 + tmp_kernel_op_113 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_69;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_77;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_85;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_116 * tmp_kernel_op_55 + tmp_kernel_op_117 * tmp_kernel_op_63 +
                      tmp_kernel_op_118 * tmp_kernel_op_71 + tmp_kernel_op_119 * tmp_kernel_op_79 +
                      tmp_kernel_op_120 * tmp_kernel_op_87 + tmp_kernel_op_121 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_46 - tmp_kernel_op_49 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_56 - tmp_kernel_op_59 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_64 - tmp_kernel_op_67 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_72 - tmp_kernel_op_75 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_80 - tmp_kernel_op_83 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_88 - tmp_kernel_op_91 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_123 * tmp_kernel_op_55 + tmp_kernel_op_124 * tmp_kernel_op_63 +
                      tmp_kernel_op_125 * tmp_kernel_op_71 + tmp_kernel_op_126 * tmp_kernel_op_79 +
                      tmp_kernel_op_127 * tmp_kernel_op_87 + tmp_kernel_op_128 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_59 - tmp_kernel_op_60 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_67 - tmp_kernel_op_68 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_75 - tmp_kernel_op_76 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_83 - tmp_kernel_op_84 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_91 - tmp_kernel_op_92 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_130 * tmp_kernel_op_55 + tmp_kernel_op_131 * tmp_kernel_op_63 +
                      tmp_kernel_op_132 * tmp_kernel_op_71 + tmp_kernel_op_133 * tmp_kernel_op_79 +
                      tmp_kernel_op_134 * tmp_kernel_op_87 + tmp_kernel_op_135 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_54 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_78 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_86 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_94 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_54 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_100 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_101 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_102 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_103 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_104 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_143 * tmp_kernel_op_46 + tmp_kernel_op_144 * tmp_kernel_op_56 +
                      tmp_kernel_op_145 * tmp_kernel_op_64 + tmp_kernel_op_146 * tmp_kernel_op_72 +
                      tmp_kernel_op_147 * tmp_kernel_op_80 + tmp_kernel_op_148 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_68 + tmp_kernel_op_146 * tmp_kernel_op_76 +
                      tmp_kernel_op_147 * tmp_kernel_op_84 + tmp_kernel_op_148 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_59 +
                      tmp_kernel_op_145 * tmp_kernel_op_67 + tmp_kernel_op_146 * tmp_kernel_op_75 +
                      tmp_kernel_op_147 * tmp_kernel_op_83 + tmp_kernel_op_148 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_106 * tmp_kernel_op_143 + tmp_kernel_op_107 * tmp_kernel_op_144 +
                      tmp_kernel_op_108 * tmp_kernel_op_145 + tmp_kernel_op_109 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_111 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_113 * tmp_kernel_op_143 + tmp_kernel_op_113 * tmp_kernel_op_144 +
                      tmp_kernel_op_113 * tmp_kernel_op_145 + tmp_kernel_op_113 * tmp_kernel_op_146 +
                      tmp_kernel_op_113 * tmp_kernel_op_147 + tmp_kernel_op_113 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_106 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_107 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_108 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_109 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_110 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_111 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_157 * tmp_kernel_op_46 + tmp_kernel_op_158 * tmp_kernel_op_56 +
                      tmp_kernel_op_159 * tmp_kernel_op_64 + tmp_kernel_op_160 * tmp_kernel_op_72 +
                      tmp_kernel_op_161 * tmp_kernel_op_80 + tmp_kernel_op_162 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_68 + tmp_kernel_op_160 * tmp_kernel_op_76 +
                      tmp_kernel_op_161 * tmp_kernel_op_84 + tmp_kernel_op_162 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_59 +
                      tmp_kernel_op_159 * tmp_kernel_op_67 + tmp_kernel_op_160 * tmp_kernel_op_75 +
                      tmp_kernel_op_161 * tmp_kernel_op_83 + tmp_kernel_op_162 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_113 * tmp_kernel_op_157 + tmp_kernel_op_113 * tmp_kernel_op_158 +
                      tmp_kernel_op_113 * tmp_kernel_op_159 + tmp_kernel_op_113 * tmp_kernel_op_160 +
                      tmp_kernel_op_113 * tmp_kernel_op_161 + tmp_kernel_op_113 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_113 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_113 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_113 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_113 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_113 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_113 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_46 + tmp_kernel_op_172 * tmp_kernel_op_56 +
                      tmp_kernel_op_173 * tmp_kernel_op_64 + tmp_kernel_op_174 * tmp_kernel_op_72 +
                      tmp_kernel_op_175 * tmp_kernel_op_80 + tmp_kernel_op_176 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_68 + tmp_kernel_op_174 * tmp_kernel_op_76 +
                      tmp_kernel_op_175 * tmp_kernel_op_84 + tmp_kernel_op_176 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_59 +
                      tmp_kernel_op_173 * tmp_kernel_op_67 + tmp_kernel_op_174 * tmp_kernel_op_75 +
                      tmp_kernel_op_175 * tmp_kernel_op_83 + tmp_kernel_op_176 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_121 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_46 + tmp_kernel_op_198 * tmp_kernel_op_56 +
                      tmp_kernel_op_199 * tmp_kernel_op_64 + tmp_kernel_op_200 * tmp_kernel_op_72 +
                      tmp_kernel_op_201 * tmp_kernel_op_80 + tmp_kernel_op_202 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_128 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_46 + tmp_kernel_op_205 * tmp_kernel_op_56 +
                      tmp_kernel_op_206 * tmp_kernel_op_64 + tmp_kernel_op_207 * tmp_kernel_op_72 +
                      tmp_kernel_op_208 * tmp_kernel_op_80 + tmp_kernel_op_209 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_135 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_46 + tmp_kernel_op_212 * tmp_kernel_op_56 +
                      tmp_kernel_op_213 * tmp_kernel_op_64 + tmp_kernel_op_214 * tmp_kernel_op_72 +
                      tmp_kernel_op_215 * tmp_kernel_op_80 + tmp_kernel_op_216 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_68 + tmp_kernel_op_200 * tmp_kernel_op_76 +
                      tmp_kernel_op_201 * tmp_kernel_op_84 + tmp_kernel_op_202 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_68 + tmp_kernel_op_207 * tmp_kernel_op_76 +
                      tmp_kernel_op_208 * tmp_kernel_op_84 + tmp_kernel_op_209 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_68 + tmp_kernel_op_214 * tmp_kernel_op_76 +
                      tmp_kernel_op_215 * tmp_kernel_op_84 + tmp_kernel_op_216 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_59 +
                      tmp_kernel_op_199 * tmp_kernel_op_67 + tmp_kernel_op_200 * tmp_kernel_op_75 +
                      tmp_kernel_op_201 * tmp_kernel_op_83 + tmp_kernel_op_202 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_59 +
                      tmp_kernel_op_206 * tmp_kernel_op_67 + tmp_kernel_op_207 * tmp_kernel_op_75 +
                      tmp_kernel_op_208 * tmp_kernel_op_83 + tmp_kernel_op_209 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_59 +
                      tmp_kernel_op_213 * tmp_kernel_op_67 + tmp_kernel_op_214 * tmp_kernel_op_75 +
                      tmp_kernel_op_215 * tmp_kernel_op_83 + tmp_kernel_op_216 * tmp_kernel_op_91;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 * ( tmp_kernel_op_10 *
                                        ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                          ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                                    tmp_kernel_op_17 *
                                        ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                                          ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                                    tmp_kernel_op_24 *
                                        ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                                          ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                                    tmp_kernel_op_31 *
                                        ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                                          ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                                    tmp_kernel_op_38 *
                                        ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                                          ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                                    tmp_kernel_op_45 *
                                        ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                          ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_105 + src_dof_2 * tmp_kernel_op_112 + src_dof_3 * tmp_kernel_op_114 +
                      src_dof_4 * tmp_kernel_op_96 + src_dof_5 * tmp_kernel_op_97 + src_dof_6 * tmp_kernel_op_98 +
                      src_dof_7 * tmp_kernel_op_122 + src_dof_8 * tmp_kernel_op_129 + src_dof_9 * tmp_kernel_op_136;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_105 +
                      src_dof_1 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_152 + src_dof_3 * tmp_kernel_op_153 + src_dof_4 * tmp_kernel_op_149 +
                      src_dof_5 * tmp_kernel_op_150 + src_dof_6 * tmp_kernel_op_151 + src_dof_7 * tmp_kernel_op_154 +
                      src_dof_8 * tmp_kernel_op_155 + src_dof_9 * tmp_kernel_op_156;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_112 + src_dof_1 * tmp_kernel_op_152 +
                      src_dof_2 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_166 + src_dof_4 * tmp_kernel_op_163 + src_dof_5 * tmp_kernel_op_164 +
                      src_dof_6 * tmp_kernel_op_165 + src_dof_7 * tmp_kernel_op_167 + src_dof_8 * tmp_kernel_op_168 +
                      src_dof_9 * tmp_kernel_op_169;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_114 + src_dof_1 * tmp_kernel_op_153 + src_dof_2 * tmp_kernel_op_166 +
                      src_dof_3 * ( tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) ) +
                      src_dof_4 * tmp_kernel_op_177 + src_dof_5 * tmp_kernel_op_178 + src_dof_6 * tmp_kernel_op_179 +
                      src_dof_7 * tmp_kernel_op_180 + src_dof_8 * tmp_kernel_op_181 + src_dof_9 * tmp_kernel_op_182;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_96 + src_dof_1 * tmp_kernel_op_149 + src_dof_2 * tmp_kernel_op_163 +
                      src_dof_3 * tmp_kernel_op_177 +
                      src_dof_4 * ( tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                    tmp_kernel_op_185 * tmp_kernel_op_20 + tmp_kernel_op_186 * tmp_kernel_op_27 +
                                    tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41 ) +
                      src_dof_5 * tmp_kernel_op_189 + src_dof_6 * tmp_kernel_op_196 + src_dof_7 * tmp_kernel_op_203 +
                      src_dof_8 * tmp_kernel_op_210 + src_dof_9 * tmp_kernel_op_217;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_97 + src_dof_1 * tmp_kernel_op_150 + src_dof_2 * tmp_kernel_op_164 +
                      src_dof_3 * tmp_kernel_op_178 + src_dof_4 * tmp_kernel_op_189 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                    tmp_kernel_op_185 * tmp_kernel_op_19 + tmp_kernel_op_186 * tmp_kernel_op_26 +
                                    tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40 ) +
                      src_dof_6 * tmp_kernel_op_218 + src_dof_7 * tmp_kernel_op_219 + src_dof_8 * tmp_kernel_op_220 +
                      src_dof_9 * tmp_kernel_op_221;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_98 + src_dof_1 * tmp_kernel_op_151 + src_dof_2 * tmp_kernel_op_165 +
                      src_dof_3 * tmp_kernel_op_179 + src_dof_4 * tmp_kernel_op_196 + src_dof_5 * tmp_kernel_op_218 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                    tmp_kernel_op_19 * tmp_kernel_op_192 + tmp_kernel_op_193 * tmp_kernel_op_26 +
                                    tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40 ) +
                      src_dof_7 * tmp_kernel_op_222 + src_dof_8 * tmp_kernel_op_223 + src_dof_9 * tmp_kernel_op_224;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_122 + src_dof_1 * tmp_kernel_op_154 + src_dof_2 * tmp_kernel_op_167 +
                      src_dof_3 * tmp_kernel_op_180 + src_dof_4 * tmp_kernel_op_203 + src_dof_5 * tmp_kernel_op_219 +
                      src_dof_6 * tmp_kernel_op_222 +
                      src_dof_7 *
                          ( tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                          ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                            tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                            tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                            tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_226 + src_dof_9 * tmp_kernel_op_227;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_129 + src_dof_1 * tmp_kernel_op_155 + src_dof_2 * tmp_kernel_op_168 +
                      src_dof_3 * tmp_kernel_op_181 + src_dof_4 * tmp_kernel_op_210 + src_dof_5 * tmp_kernel_op_220 +
                      src_dof_6 * tmp_kernel_op_223 + src_dof_7 * tmp_kernel_op_226 +
                      src_dof_8 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_228;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_136 + src_dof_1 * tmp_kernel_op_156 + src_dof_2 * tmp_kernel_op_169 +
                      src_dof_3 * tmp_kernel_op_182 + src_dof_4 * tmp_kernel_op_217 + src_dof_5 * tmp_kernel_op_221 +
                      src_dof_6 * tmp_kernel_op_224 + src_dof_7 * tmp_kernel_op_227 + src_dof_8 * tmp_kernel_op_228 +
                      src_dof_9 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_DOWN */
         const walberla::float64 tmp_coords_jac_0_BLUE_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_6_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_8_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 tmp_coords_jac_9_BLUE_DOWN   = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_0_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) +
             tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_1_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) +
             tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_2_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) +
             tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
         const walberla::float64 jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
         const walberla::float64 jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
         const walberla::float64 jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
         const walberla::float64 jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
         const walberla::float64 jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 src_dof_0 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_0_BLUE_DOWN ) +
                                  ( jac_affine_1_0_BLUE_DOWN * jac_affine_1_0_BLUE_DOWN ) +
                                  ( jac_affine_2_0_BLUE_DOWN * jac_affine_2_0_BLUE_DOWN ) ) *
                                    ( ( jac_affine_0_1_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN ) +
                                      ( jac_affine_1_1_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN ) +
                                      ( jac_affine_2_1_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) ) -
                                ( ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN +
                                    jac_affine_1_0_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN +
                                    jac_affine_2_0_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) *
                                  ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN +
                                    jac_affine_1_0_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN +
                                    jac_affine_2_0_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 + tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_52 + 1.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_55 =
                      tmp_kernel_op_54 * ( tmp_kernel_op_47 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_51 +
                                           tmp_kernel_op_53 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_56 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_60 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_56 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_63 =
                      tmp_kernel_op_62 * ( tmp_kernel_op_53 + tmp_kernel_op_57 + tmp_kernel_op_58 + tmp_kernel_op_59 +
                                           tmp_kernel_op_61 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_64 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_65 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_68 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_64 + tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_70 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_71 =
                      tmp_kernel_op_70 * ( tmp_kernel_op_53 + tmp_kernel_op_65 + tmp_kernel_op_66 + tmp_kernel_op_67 +
                                           tmp_kernel_op_69 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_72 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_74 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_76 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_72 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_79 =
                      tmp_kernel_op_78 * ( tmp_kernel_op_53 + tmp_kernel_op_73 + tmp_kernel_op_74 + tmp_kernel_op_75 +
                                           tmp_kernel_op_77 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_83 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_84 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_80 + tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_87 =
                      tmp_kernel_op_86 * ( tmp_kernel_op_53 + tmp_kernel_op_81 + tmp_kernel_op_82 + tmp_kernel_op_83 +
                                           tmp_kernel_op_85 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_89 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_92 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_88 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_95 =
                      tmp_kernel_op_94 * ( tmp_kernel_op_53 + tmp_kernel_op_89 + tmp_kernel_op_90 + tmp_kernel_op_91 +
                                           tmp_kernel_op_93 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_96 =
                      tmp_kernel_op_46 * tmp_kernel_op_55 + tmp_kernel_op_56 * tmp_kernel_op_63 +
                      tmp_kernel_op_64 * tmp_kernel_op_71 + tmp_kernel_op_72 * tmp_kernel_op_79 +
                      tmp_kernel_op_80 * tmp_kernel_op_87 + tmp_kernel_op_88 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_97 =
                      tmp_kernel_op_50 * tmp_kernel_op_55 + tmp_kernel_op_60 * tmp_kernel_op_63 +
                      tmp_kernel_op_68 * tmp_kernel_op_71 + tmp_kernel_op_76 * tmp_kernel_op_79 +
                      tmp_kernel_op_84 * tmp_kernel_op_87 + tmp_kernel_op_92 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_49 * tmp_kernel_op_55 + tmp_kernel_op_59 * tmp_kernel_op_63 +
                      tmp_kernel_op_67 * tmp_kernel_op_71 + tmp_kernel_op_75 * tmp_kernel_op_79 +
                      tmp_kernel_op_83 * tmp_kernel_op_87 + tmp_kernel_op_91 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_47 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_65 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_102 = tmp_kernel_op_73 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_81 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_89 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_105 =
                      tmp_kernel_op_100 * tmp_kernel_op_63 + tmp_kernel_op_101 * tmp_kernel_op_71 +
                      tmp_kernel_op_102 * tmp_kernel_op_79 + tmp_kernel_op_103 * tmp_kernel_op_87 +
                      tmp_kernel_op_104 * tmp_kernel_op_95 + tmp_kernel_op_55 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_58 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_66 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_109 = tmp_kernel_op_74 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_82 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_111 = tmp_kernel_op_90 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_106 * tmp_kernel_op_55 + tmp_kernel_op_107 * tmp_kernel_op_63 +
                      tmp_kernel_op_108 * tmp_kernel_op_71 + tmp_kernel_op_109 * tmp_kernel_op_79 +
                      tmp_kernel_op_110 * tmp_kernel_op_87 + tmp_kernel_op_111 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_113 = tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_113 * tmp_kernel_op_55 + tmp_kernel_op_113 * tmp_kernel_op_63 +
                      tmp_kernel_op_113 * tmp_kernel_op_71 + tmp_kernel_op_113 * tmp_kernel_op_79 +
                      tmp_kernel_op_113 * tmp_kernel_op_87 + tmp_kernel_op_113 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_69;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_77;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_85;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_116 * tmp_kernel_op_55 + tmp_kernel_op_117 * tmp_kernel_op_63 +
                      tmp_kernel_op_118 * tmp_kernel_op_71 + tmp_kernel_op_119 * tmp_kernel_op_79 +
                      tmp_kernel_op_120 * tmp_kernel_op_87 + tmp_kernel_op_121 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_46 - tmp_kernel_op_49 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_56 - tmp_kernel_op_59 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_64 - tmp_kernel_op_67 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_72 - tmp_kernel_op_75 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_80 - tmp_kernel_op_83 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_88 - tmp_kernel_op_91 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_123 * tmp_kernel_op_55 + tmp_kernel_op_124 * tmp_kernel_op_63 +
                      tmp_kernel_op_125 * tmp_kernel_op_71 + tmp_kernel_op_126 * tmp_kernel_op_79 +
                      tmp_kernel_op_127 * tmp_kernel_op_87 + tmp_kernel_op_128 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_59 - tmp_kernel_op_60 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_67 - tmp_kernel_op_68 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_75 - tmp_kernel_op_76 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_83 - tmp_kernel_op_84 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_91 - tmp_kernel_op_92 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_130 * tmp_kernel_op_55 + tmp_kernel_op_131 * tmp_kernel_op_63 +
                      tmp_kernel_op_132 * tmp_kernel_op_71 + tmp_kernel_op_133 * tmp_kernel_op_79 +
                      tmp_kernel_op_134 * tmp_kernel_op_87 + tmp_kernel_op_135 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_54 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_78 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_86 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_94 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_54 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_100 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_101 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_102 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_103 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_104 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_143 * tmp_kernel_op_46 + tmp_kernel_op_144 * tmp_kernel_op_56 +
                      tmp_kernel_op_145 * tmp_kernel_op_64 + tmp_kernel_op_146 * tmp_kernel_op_72 +
                      tmp_kernel_op_147 * tmp_kernel_op_80 + tmp_kernel_op_148 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_68 + tmp_kernel_op_146 * tmp_kernel_op_76 +
                      tmp_kernel_op_147 * tmp_kernel_op_84 + tmp_kernel_op_148 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_59 +
                      tmp_kernel_op_145 * tmp_kernel_op_67 + tmp_kernel_op_146 * tmp_kernel_op_75 +
                      tmp_kernel_op_147 * tmp_kernel_op_83 + tmp_kernel_op_148 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_106 * tmp_kernel_op_143 + tmp_kernel_op_107 * tmp_kernel_op_144 +
                      tmp_kernel_op_108 * tmp_kernel_op_145 + tmp_kernel_op_109 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_111 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_113 * tmp_kernel_op_143 + tmp_kernel_op_113 * tmp_kernel_op_144 +
                      tmp_kernel_op_113 * tmp_kernel_op_145 + tmp_kernel_op_113 * tmp_kernel_op_146 +
                      tmp_kernel_op_113 * tmp_kernel_op_147 + tmp_kernel_op_113 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_106 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_107 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_108 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_109 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_110 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_111 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_157 * tmp_kernel_op_46 + tmp_kernel_op_158 * tmp_kernel_op_56 +
                      tmp_kernel_op_159 * tmp_kernel_op_64 + tmp_kernel_op_160 * tmp_kernel_op_72 +
                      tmp_kernel_op_161 * tmp_kernel_op_80 + tmp_kernel_op_162 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_68 + tmp_kernel_op_160 * tmp_kernel_op_76 +
                      tmp_kernel_op_161 * tmp_kernel_op_84 + tmp_kernel_op_162 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_59 +
                      tmp_kernel_op_159 * tmp_kernel_op_67 + tmp_kernel_op_160 * tmp_kernel_op_75 +
                      tmp_kernel_op_161 * tmp_kernel_op_83 + tmp_kernel_op_162 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_113 * tmp_kernel_op_157 + tmp_kernel_op_113 * tmp_kernel_op_158 +
                      tmp_kernel_op_113 * tmp_kernel_op_159 + tmp_kernel_op_113 * tmp_kernel_op_160 +
                      tmp_kernel_op_113 * tmp_kernel_op_161 + tmp_kernel_op_113 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_113 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_113 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_113 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_113 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_113 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_113 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_46 + tmp_kernel_op_172 * tmp_kernel_op_56 +
                      tmp_kernel_op_173 * tmp_kernel_op_64 + tmp_kernel_op_174 * tmp_kernel_op_72 +
                      tmp_kernel_op_175 * tmp_kernel_op_80 + tmp_kernel_op_176 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_68 + tmp_kernel_op_174 * tmp_kernel_op_76 +
                      tmp_kernel_op_175 * tmp_kernel_op_84 + tmp_kernel_op_176 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_59 +
                      tmp_kernel_op_173 * tmp_kernel_op_67 + tmp_kernel_op_174 * tmp_kernel_op_75 +
                      tmp_kernel_op_175 * tmp_kernel_op_83 + tmp_kernel_op_176 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_121 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_46 + tmp_kernel_op_198 * tmp_kernel_op_56 +
                      tmp_kernel_op_199 * tmp_kernel_op_64 + tmp_kernel_op_200 * tmp_kernel_op_72 +
                      tmp_kernel_op_201 * tmp_kernel_op_80 + tmp_kernel_op_202 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_128 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_46 + tmp_kernel_op_205 * tmp_kernel_op_56 +
                      tmp_kernel_op_206 * tmp_kernel_op_64 + tmp_kernel_op_207 * tmp_kernel_op_72 +
                      tmp_kernel_op_208 * tmp_kernel_op_80 + tmp_kernel_op_209 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_135 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_46 + tmp_kernel_op_212 * tmp_kernel_op_56 +
                      tmp_kernel_op_213 * tmp_kernel_op_64 + tmp_kernel_op_214 * tmp_kernel_op_72 +
                      tmp_kernel_op_215 * tmp_kernel_op_80 + tmp_kernel_op_216 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_68 + tmp_kernel_op_200 * tmp_kernel_op_76 +
                      tmp_kernel_op_201 * tmp_kernel_op_84 + tmp_kernel_op_202 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_68 + tmp_kernel_op_207 * tmp_kernel_op_76 +
                      tmp_kernel_op_208 * tmp_kernel_op_84 + tmp_kernel_op_209 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_68 + tmp_kernel_op_214 * tmp_kernel_op_76 +
                      tmp_kernel_op_215 * tmp_kernel_op_84 + tmp_kernel_op_216 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_59 +
                      tmp_kernel_op_199 * tmp_kernel_op_67 + tmp_kernel_op_200 * tmp_kernel_op_75 +
                      tmp_kernel_op_201 * tmp_kernel_op_83 + tmp_kernel_op_202 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_59 +
                      tmp_kernel_op_206 * tmp_kernel_op_67 + tmp_kernel_op_207 * tmp_kernel_op_75 +
                      tmp_kernel_op_208 * tmp_kernel_op_83 + tmp_kernel_op_209 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_59 +
                      tmp_kernel_op_213 * tmp_kernel_op_67 + tmp_kernel_op_214 * tmp_kernel_op_75 +
                      tmp_kernel_op_215 * tmp_kernel_op_83 + tmp_kernel_op_216 * tmp_kernel_op_91;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 * ( tmp_kernel_op_10 *
                                        ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                          ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                                    tmp_kernel_op_17 *
                                        ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                                          ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                                    tmp_kernel_op_24 *
                                        ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                                          ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                                    tmp_kernel_op_31 *
                                        ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                                          ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                                    tmp_kernel_op_38 *
                                        ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                                          ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                                    tmp_kernel_op_45 *
                                        ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                          ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_105 + src_dof_2 * tmp_kernel_op_112 + src_dof_3 * tmp_kernel_op_114 +
                      src_dof_4 * tmp_kernel_op_96 + src_dof_5 * tmp_kernel_op_97 + src_dof_6 * tmp_kernel_op_98 +
                      src_dof_7 * tmp_kernel_op_122 + src_dof_8 * tmp_kernel_op_129 + src_dof_9 * tmp_kernel_op_136;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_105 +
                      src_dof_1 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_152 + src_dof_3 * tmp_kernel_op_153 + src_dof_4 * tmp_kernel_op_149 +
                      src_dof_5 * tmp_kernel_op_150 + src_dof_6 * tmp_kernel_op_151 + src_dof_7 * tmp_kernel_op_154 +
                      src_dof_8 * tmp_kernel_op_155 + src_dof_9 * tmp_kernel_op_156;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_112 + src_dof_1 * tmp_kernel_op_152 +
                      src_dof_2 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_166 + src_dof_4 * tmp_kernel_op_163 + src_dof_5 * tmp_kernel_op_164 +
                      src_dof_6 * tmp_kernel_op_165 + src_dof_7 * tmp_kernel_op_167 + src_dof_8 * tmp_kernel_op_168 +
                      src_dof_9 * tmp_kernel_op_169;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_114 + src_dof_1 * tmp_kernel_op_153 + src_dof_2 * tmp_kernel_op_166 +
                      src_dof_3 * ( tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) ) +
                      src_dof_4 * tmp_kernel_op_177 + src_dof_5 * tmp_kernel_op_178 + src_dof_6 * tmp_kernel_op_179 +
                      src_dof_7 * tmp_kernel_op_180 + src_dof_8 * tmp_kernel_op_181 + src_dof_9 * tmp_kernel_op_182;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_96 + src_dof_1 * tmp_kernel_op_149 + src_dof_2 * tmp_kernel_op_163 +
                      src_dof_3 * tmp_kernel_op_177 +
                      src_dof_4 * ( tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                    tmp_kernel_op_185 * tmp_kernel_op_20 + tmp_kernel_op_186 * tmp_kernel_op_27 +
                                    tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41 ) +
                      src_dof_5 * tmp_kernel_op_189 + src_dof_6 * tmp_kernel_op_196 + src_dof_7 * tmp_kernel_op_203 +
                      src_dof_8 * tmp_kernel_op_210 + src_dof_9 * tmp_kernel_op_217;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_97 + src_dof_1 * tmp_kernel_op_150 + src_dof_2 * tmp_kernel_op_164 +
                      src_dof_3 * tmp_kernel_op_178 + src_dof_4 * tmp_kernel_op_189 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                    tmp_kernel_op_185 * tmp_kernel_op_19 + tmp_kernel_op_186 * tmp_kernel_op_26 +
                                    tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40 ) +
                      src_dof_6 * tmp_kernel_op_218 + src_dof_7 * tmp_kernel_op_219 + src_dof_8 * tmp_kernel_op_220 +
                      src_dof_9 * tmp_kernel_op_221;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_98 + src_dof_1 * tmp_kernel_op_151 + src_dof_2 * tmp_kernel_op_165 +
                      src_dof_3 * tmp_kernel_op_179 + src_dof_4 * tmp_kernel_op_196 + src_dof_5 * tmp_kernel_op_218 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                    tmp_kernel_op_19 * tmp_kernel_op_192 + tmp_kernel_op_193 * tmp_kernel_op_26 +
                                    tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40 ) +
                      src_dof_7 * tmp_kernel_op_222 + src_dof_8 * tmp_kernel_op_223 + src_dof_9 * tmp_kernel_op_224;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_122 + src_dof_1 * tmp_kernel_op_154 + src_dof_2 * tmp_kernel_op_167 +
                      src_dof_3 * tmp_kernel_op_180 + src_dof_4 * tmp_kernel_op_203 + src_dof_5 * tmp_kernel_op_219 +
                      src_dof_6 * tmp_kernel_op_222 +
                      src_dof_7 *
                          ( tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                          ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                            tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                            tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                            tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_226 + src_dof_9 * tmp_kernel_op_227;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_129 + src_dof_1 * tmp_kernel_op_155 + src_dof_2 * tmp_kernel_op_168 +
                      src_dof_3 * tmp_kernel_op_181 + src_dof_4 * tmp_kernel_op_210 + src_dof_5 * tmp_kernel_op_220 +
                      src_dof_6 * tmp_kernel_op_223 + src_dof_7 * tmp_kernel_op_226 +
                      src_dof_8 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_228;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_136 + src_dof_1 * tmp_kernel_op_156 + src_dof_2 * tmp_kernel_op_169 +
                      src_dof_3 * tmp_kernel_op_182 + src_dof_4 * tmp_kernel_op_217 + src_dof_5 * tmp_kernel_op_221 +
                      src_dof_6 * tmp_kernel_op_224 + src_dof_7 * tmp_kernel_op_227 + src_dof_8 * tmp_kernel_op_228 +
                      src_dof_9 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) ) );
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_3 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMass::apply_P2ElementwiseBoundaryMass_facet_id_3_macro_3D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_0_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 jac_affine_0_0_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 src_dof_0 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 = _data_srcVertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 + tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_52 + 1.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_55 =
                      tmp_kernel_op_54 * ( tmp_kernel_op_47 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_51 +
                                           tmp_kernel_op_53 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_56 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_60 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_56 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_63 =
                      tmp_kernel_op_62 * ( tmp_kernel_op_53 + tmp_kernel_op_57 + tmp_kernel_op_58 + tmp_kernel_op_59 +
                                           tmp_kernel_op_61 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_64 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_65 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_68 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_64 + tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_70 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_71 =
                      tmp_kernel_op_70 * ( tmp_kernel_op_53 + tmp_kernel_op_65 + tmp_kernel_op_66 + tmp_kernel_op_67 +
                                           tmp_kernel_op_69 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_72 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_74 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_76 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_72 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_79 =
                      tmp_kernel_op_78 * ( tmp_kernel_op_53 + tmp_kernel_op_73 + tmp_kernel_op_74 + tmp_kernel_op_75 +
                                           tmp_kernel_op_77 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_83 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_84 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_80 + tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_87 =
                      tmp_kernel_op_86 * ( tmp_kernel_op_53 + tmp_kernel_op_81 + tmp_kernel_op_82 + tmp_kernel_op_83 +
                                           tmp_kernel_op_85 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_89 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_92 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_88 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_95 =
                      tmp_kernel_op_94 * ( tmp_kernel_op_53 + tmp_kernel_op_89 + tmp_kernel_op_90 + tmp_kernel_op_91 +
                                           tmp_kernel_op_93 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_96 =
                      tmp_kernel_op_46 * tmp_kernel_op_55 + tmp_kernel_op_56 * tmp_kernel_op_63 +
                      tmp_kernel_op_64 * tmp_kernel_op_71 + tmp_kernel_op_72 * tmp_kernel_op_79 +
                      tmp_kernel_op_80 * tmp_kernel_op_87 + tmp_kernel_op_88 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_97 =
                      tmp_kernel_op_50 * tmp_kernel_op_55 + tmp_kernel_op_60 * tmp_kernel_op_63 +
                      tmp_kernel_op_68 * tmp_kernel_op_71 + tmp_kernel_op_76 * tmp_kernel_op_79 +
                      tmp_kernel_op_84 * tmp_kernel_op_87 + tmp_kernel_op_92 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_49 * tmp_kernel_op_55 + tmp_kernel_op_59 * tmp_kernel_op_63 +
                      tmp_kernel_op_67 * tmp_kernel_op_71 + tmp_kernel_op_75 * tmp_kernel_op_79 +
                      tmp_kernel_op_83 * tmp_kernel_op_87 + tmp_kernel_op_91 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_47 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_65 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_102 = tmp_kernel_op_73 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_81 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_89 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_105 =
                      tmp_kernel_op_100 * tmp_kernel_op_63 + tmp_kernel_op_101 * tmp_kernel_op_71 +
                      tmp_kernel_op_102 * tmp_kernel_op_79 + tmp_kernel_op_103 * tmp_kernel_op_87 +
                      tmp_kernel_op_104 * tmp_kernel_op_95 + tmp_kernel_op_55 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_58 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_66 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_109 = tmp_kernel_op_74 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_82 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_111 = tmp_kernel_op_90 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_106 * tmp_kernel_op_55 + tmp_kernel_op_107 * tmp_kernel_op_63 +
                      tmp_kernel_op_108 * tmp_kernel_op_71 + tmp_kernel_op_109 * tmp_kernel_op_79 +
                      tmp_kernel_op_110 * tmp_kernel_op_87 + tmp_kernel_op_111 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_113 = tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_113 * tmp_kernel_op_55 + tmp_kernel_op_113 * tmp_kernel_op_63 +
                      tmp_kernel_op_113 * tmp_kernel_op_71 + tmp_kernel_op_113 * tmp_kernel_op_79 +
                      tmp_kernel_op_113 * tmp_kernel_op_87 + tmp_kernel_op_113 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_69;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_77;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_85;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_116 * tmp_kernel_op_55 + tmp_kernel_op_117 * tmp_kernel_op_63 +
                      tmp_kernel_op_118 * tmp_kernel_op_71 + tmp_kernel_op_119 * tmp_kernel_op_79 +
                      tmp_kernel_op_120 * tmp_kernel_op_87 + tmp_kernel_op_121 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_46 - tmp_kernel_op_49 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_56 - tmp_kernel_op_59 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_64 - tmp_kernel_op_67 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_72 - tmp_kernel_op_75 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_80 - tmp_kernel_op_83 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_88 - tmp_kernel_op_91 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_123 * tmp_kernel_op_55 + tmp_kernel_op_124 * tmp_kernel_op_63 +
                      tmp_kernel_op_125 * tmp_kernel_op_71 + tmp_kernel_op_126 * tmp_kernel_op_79 +
                      tmp_kernel_op_127 * tmp_kernel_op_87 + tmp_kernel_op_128 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_59 - tmp_kernel_op_60 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_67 - tmp_kernel_op_68 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_75 - tmp_kernel_op_76 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_83 - tmp_kernel_op_84 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_91 - tmp_kernel_op_92 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_130 * tmp_kernel_op_55 + tmp_kernel_op_131 * tmp_kernel_op_63 +
                      tmp_kernel_op_132 * tmp_kernel_op_71 + tmp_kernel_op_133 * tmp_kernel_op_79 +
                      tmp_kernel_op_134 * tmp_kernel_op_87 + tmp_kernel_op_135 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_54 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_78 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_86 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_94 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_54 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_100 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_101 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_102 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_103 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_104 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_143 * tmp_kernel_op_46 + tmp_kernel_op_144 * tmp_kernel_op_56 +
                      tmp_kernel_op_145 * tmp_kernel_op_64 + tmp_kernel_op_146 * tmp_kernel_op_72 +
                      tmp_kernel_op_147 * tmp_kernel_op_80 + tmp_kernel_op_148 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_68 + tmp_kernel_op_146 * tmp_kernel_op_76 +
                      tmp_kernel_op_147 * tmp_kernel_op_84 + tmp_kernel_op_148 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_59 +
                      tmp_kernel_op_145 * tmp_kernel_op_67 + tmp_kernel_op_146 * tmp_kernel_op_75 +
                      tmp_kernel_op_147 * tmp_kernel_op_83 + tmp_kernel_op_148 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_106 * tmp_kernel_op_143 + tmp_kernel_op_107 * tmp_kernel_op_144 +
                      tmp_kernel_op_108 * tmp_kernel_op_145 + tmp_kernel_op_109 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_111 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_113 * tmp_kernel_op_143 + tmp_kernel_op_113 * tmp_kernel_op_144 +
                      tmp_kernel_op_113 * tmp_kernel_op_145 + tmp_kernel_op_113 * tmp_kernel_op_146 +
                      tmp_kernel_op_113 * tmp_kernel_op_147 + tmp_kernel_op_113 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_106 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_107 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_108 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_109 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_110 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_111 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_157 * tmp_kernel_op_46 + tmp_kernel_op_158 * tmp_kernel_op_56 +
                      tmp_kernel_op_159 * tmp_kernel_op_64 + tmp_kernel_op_160 * tmp_kernel_op_72 +
                      tmp_kernel_op_161 * tmp_kernel_op_80 + tmp_kernel_op_162 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_68 + tmp_kernel_op_160 * tmp_kernel_op_76 +
                      tmp_kernel_op_161 * tmp_kernel_op_84 + tmp_kernel_op_162 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_59 +
                      tmp_kernel_op_159 * tmp_kernel_op_67 + tmp_kernel_op_160 * tmp_kernel_op_75 +
                      tmp_kernel_op_161 * tmp_kernel_op_83 + tmp_kernel_op_162 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_113 * tmp_kernel_op_157 + tmp_kernel_op_113 * tmp_kernel_op_158 +
                      tmp_kernel_op_113 * tmp_kernel_op_159 + tmp_kernel_op_113 * tmp_kernel_op_160 +
                      tmp_kernel_op_113 * tmp_kernel_op_161 + tmp_kernel_op_113 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_113 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_113 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_113 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_113 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_113 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_113 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_46 + tmp_kernel_op_172 * tmp_kernel_op_56 +
                      tmp_kernel_op_173 * tmp_kernel_op_64 + tmp_kernel_op_174 * tmp_kernel_op_72 +
                      tmp_kernel_op_175 * tmp_kernel_op_80 + tmp_kernel_op_176 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_68 + tmp_kernel_op_174 * tmp_kernel_op_76 +
                      tmp_kernel_op_175 * tmp_kernel_op_84 + tmp_kernel_op_176 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_59 +
                      tmp_kernel_op_173 * tmp_kernel_op_67 + tmp_kernel_op_174 * tmp_kernel_op_75 +
                      tmp_kernel_op_175 * tmp_kernel_op_83 + tmp_kernel_op_176 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_121 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_46 + tmp_kernel_op_198 * tmp_kernel_op_56 +
                      tmp_kernel_op_199 * tmp_kernel_op_64 + tmp_kernel_op_200 * tmp_kernel_op_72 +
                      tmp_kernel_op_201 * tmp_kernel_op_80 + tmp_kernel_op_202 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_128 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_46 + tmp_kernel_op_205 * tmp_kernel_op_56 +
                      tmp_kernel_op_206 * tmp_kernel_op_64 + tmp_kernel_op_207 * tmp_kernel_op_72 +
                      tmp_kernel_op_208 * tmp_kernel_op_80 + tmp_kernel_op_209 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_135 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_46 + tmp_kernel_op_212 * tmp_kernel_op_56 +
                      tmp_kernel_op_213 * tmp_kernel_op_64 + tmp_kernel_op_214 * tmp_kernel_op_72 +
                      tmp_kernel_op_215 * tmp_kernel_op_80 + tmp_kernel_op_216 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_68 + tmp_kernel_op_200 * tmp_kernel_op_76 +
                      tmp_kernel_op_201 * tmp_kernel_op_84 + tmp_kernel_op_202 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_68 + tmp_kernel_op_207 * tmp_kernel_op_76 +
                      tmp_kernel_op_208 * tmp_kernel_op_84 + tmp_kernel_op_209 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_68 + tmp_kernel_op_214 * tmp_kernel_op_76 +
                      tmp_kernel_op_215 * tmp_kernel_op_84 + tmp_kernel_op_216 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_59 +
                      tmp_kernel_op_199 * tmp_kernel_op_67 + tmp_kernel_op_200 * tmp_kernel_op_75 +
                      tmp_kernel_op_201 * tmp_kernel_op_83 + tmp_kernel_op_202 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_59 +
                      tmp_kernel_op_206 * tmp_kernel_op_67 + tmp_kernel_op_207 * tmp_kernel_op_75 +
                      tmp_kernel_op_208 * tmp_kernel_op_83 + tmp_kernel_op_209 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_59 +
                      tmp_kernel_op_213 * tmp_kernel_op_67 + tmp_kernel_op_214 * tmp_kernel_op_75 +
                      tmp_kernel_op_215 * tmp_kernel_op_83 + tmp_kernel_op_216 * tmp_kernel_op_91;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 * ( tmp_kernel_op_10 *
                                        ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                          ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                                    tmp_kernel_op_17 *
                                        ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                                          ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                                    tmp_kernel_op_24 *
                                        ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                                          ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                                    tmp_kernel_op_31 *
                                        ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                                          ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                                    tmp_kernel_op_38 *
                                        ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                                          ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                                    tmp_kernel_op_45 *
                                        ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                          ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_105 + src_dof_2 * tmp_kernel_op_112 + src_dof_3 * tmp_kernel_op_114 +
                      src_dof_4 * tmp_kernel_op_96 + src_dof_5 * tmp_kernel_op_97 + src_dof_6 * tmp_kernel_op_98 +
                      src_dof_7 * tmp_kernel_op_122 + src_dof_8 * tmp_kernel_op_129 + src_dof_9 * tmp_kernel_op_136;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_105 +
                      src_dof_1 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_152 + src_dof_3 * tmp_kernel_op_153 + src_dof_4 * tmp_kernel_op_149 +
                      src_dof_5 * tmp_kernel_op_150 + src_dof_6 * tmp_kernel_op_151 + src_dof_7 * tmp_kernel_op_154 +
                      src_dof_8 * tmp_kernel_op_155 + src_dof_9 * tmp_kernel_op_156;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_112 + src_dof_1 * tmp_kernel_op_152 +
                      src_dof_2 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_166 + src_dof_4 * tmp_kernel_op_163 + src_dof_5 * tmp_kernel_op_164 +
                      src_dof_6 * tmp_kernel_op_165 + src_dof_7 * tmp_kernel_op_167 + src_dof_8 * tmp_kernel_op_168 +
                      src_dof_9 * tmp_kernel_op_169;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_114 + src_dof_1 * tmp_kernel_op_153 + src_dof_2 * tmp_kernel_op_166 +
                      src_dof_3 * ( tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) ) +
                      src_dof_4 * tmp_kernel_op_177 + src_dof_5 * tmp_kernel_op_178 + src_dof_6 * tmp_kernel_op_179 +
                      src_dof_7 * tmp_kernel_op_180 + src_dof_8 * tmp_kernel_op_181 + src_dof_9 * tmp_kernel_op_182;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_96 + src_dof_1 * tmp_kernel_op_149 + src_dof_2 * tmp_kernel_op_163 +
                      src_dof_3 * tmp_kernel_op_177 +
                      src_dof_4 * ( tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                    tmp_kernel_op_185 * tmp_kernel_op_20 + tmp_kernel_op_186 * tmp_kernel_op_27 +
                                    tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41 ) +
                      src_dof_5 * tmp_kernel_op_189 + src_dof_6 * tmp_kernel_op_196 + src_dof_7 * tmp_kernel_op_203 +
                      src_dof_8 * tmp_kernel_op_210 + src_dof_9 * tmp_kernel_op_217;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_97 + src_dof_1 * tmp_kernel_op_150 + src_dof_2 * tmp_kernel_op_164 +
                      src_dof_3 * tmp_kernel_op_178 + src_dof_4 * tmp_kernel_op_189 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                    tmp_kernel_op_185 * tmp_kernel_op_19 + tmp_kernel_op_186 * tmp_kernel_op_26 +
                                    tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40 ) +
                      src_dof_6 * tmp_kernel_op_218 + src_dof_7 * tmp_kernel_op_219 + src_dof_8 * tmp_kernel_op_220 +
                      src_dof_9 * tmp_kernel_op_221;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_98 + src_dof_1 * tmp_kernel_op_151 + src_dof_2 * tmp_kernel_op_165 +
                      src_dof_3 * tmp_kernel_op_179 + src_dof_4 * tmp_kernel_op_196 + src_dof_5 * tmp_kernel_op_218 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                    tmp_kernel_op_19 * tmp_kernel_op_192 + tmp_kernel_op_193 * tmp_kernel_op_26 +
                                    tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40 ) +
                      src_dof_7 * tmp_kernel_op_222 + src_dof_8 * tmp_kernel_op_223 + src_dof_9 * tmp_kernel_op_224;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_122 + src_dof_1 * tmp_kernel_op_154 + src_dof_2 * tmp_kernel_op_167 +
                      src_dof_3 * tmp_kernel_op_180 + src_dof_4 * tmp_kernel_op_203 + src_dof_5 * tmp_kernel_op_219 +
                      src_dof_6 * tmp_kernel_op_222 +
                      src_dof_7 *
                          ( tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                          ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                            tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                            tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                            tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_226 + src_dof_9 * tmp_kernel_op_227;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_129 + src_dof_1 * tmp_kernel_op_155 + src_dof_2 * tmp_kernel_op_168 +
                      src_dof_3 * tmp_kernel_op_181 + src_dof_4 * tmp_kernel_op_210 + src_dof_5 * tmp_kernel_op_220 +
                      src_dof_6 * tmp_kernel_op_223 + src_dof_7 * tmp_kernel_op_226 +
                      src_dof_8 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_228;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_136 + src_dof_1 * tmp_kernel_op_156 + src_dof_2 * tmp_kernel_op_169 +
                      src_dof_3 * tmp_kernel_op_182 + src_dof_4 * tmp_kernel_op_217 + src_dof_5 * tmp_kernel_op_221 +
                      src_dof_6 * tmp_kernel_op_224 + src_dof_7 * tmp_kernel_op_227 + src_dof_8 * tmp_kernel_op_228 +
                      src_dof_9 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) ) );
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_DOWN */
         const walberla::float64 tmp_coords_jac_0_GREEN_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_3_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_4_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_5_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_6_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_7_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_8_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_9_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_0_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 + tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_1_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 + tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 jac_affine_0_0_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
         const walberla::float64 jac_affine_0_1_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
         const walberla::float64 jac_affine_1_0_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
         const walberla::float64 jac_affine_1_1_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
         const walberla::float64 jac_affine_2_0_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
         const walberla::float64 jac_affine_2_1_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 src_dof_0 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_1 =
                      _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  const walberla::float64 src_dof_2 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_3 =
                      _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  const walberla::float64 src_dof_4 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_5 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_6 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_7 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_8 =
                      _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  const walberla::float64 src_dof_9 =
                      _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_0_GREEN_DOWN ) +
                                  ( jac_affine_1_0_GREEN_DOWN * jac_affine_1_0_GREEN_DOWN ) +
                                  ( jac_affine_2_0_GREEN_DOWN * jac_affine_2_0_GREEN_DOWN ) ) *
                                    ( ( jac_affine_0_1_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN ) +
                                      ( jac_affine_1_1_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN ) +
                                      ( jac_affine_2_1_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) ) -
                                ( ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN +
                                    jac_affine_1_0_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN +
                                    jac_affine_2_0_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) *
                                  ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN +
                                    jac_affine_1_0_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN +
                                    jac_affine_2_0_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 + tmp_kernel_op_50;
                  const walberla::float64 tmp_kernel_op_52 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_53 = tmp_kernel_op_52 + 1.0;
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_55 =
                      tmp_kernel_op_54 * ( tmp_kernel_op_47 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_51 +
                                           tmp_kernel_op_53 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_56 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_60 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_61 = tmp_kernel_op_56 + tmp_kernel_op_60;
                  const walberla::float64 tmp_kernel_op_62 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_63 =
                      tmp_kernel_op_62 * ( tmp_kernel_op_53 + tmp_kernel_op_57 + tmp_kernel_op_58 + tmp_kernel_op_59 +
                                           tmp_kernel_op_61 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_64 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_65 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_68 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_64 + tmp_kernel_op_68;
                  const walberla::float64 tmp_kernel_op_70 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_71 =
                      tmp_kernel_op_70 * ( tmp_kernel_op_53 + tmp_kernel_op_65 + tmp_kernel_op_66 + tmp_kernel_op_67 +
                                           tmp_kernel_op_69 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_72 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_74 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_76 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_72 + tmp_kernel_op_76;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_79 =
                      tmp_kernel_op_78 * ( tmp_kernel_op_53 + tmp_kernel_op_73 + tmp_kernel_op_74 + tmp_kernel_op_75 +
                                           tmp_kernel_op_77 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_83 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_84 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_80 + tmp_kernel_op_84;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_87 =
                      tmp_kernel_op_86 * ( tmp_kernel_op_53 + tmp_kernel_op_81 + tmp_kernel_op_82 + tmp_kernel_op_83 +
                                           tmp_kernel_op_85 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_89 = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_92 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_93 = tmp_kernel_op_88 + tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_94 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_95 =
                      tmp_kernel_op_94 * ( tmp_kernel_op_53 + tmp_kernel_op_89 + tmp_kernel_op_90 + tmp_kernel_op_91 +
                                           tmp_kernel_op_93 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_96 =
                      tmp_kernel_op_46 * tmp_kernel_op_55 + tmp_kernel_op_56 * tmp_kernel_op_63 +
                      tmp_kernel_op_64 * tmp_kernel_op_71 + tmp_kernel_op_72 * tmp_kernel_op_79 +
                      tmp_kernel_op_80 * tmp_kernel_op_87 + tmp_kernel_op_88 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_97 =
                      tmp_kernel_op_50 * tmp_kernel_op_55 + tmp_kernel_op_60 * tmp_kernel_op_63 +
                      tmp_kernel_op_68 * tmp_kernel_op_71 + tmp_kernel_op_76 * tmp_kernel_op_79 +
                      tmp_kernel_op_84 * tmp_kernel_op_87 + tmp_kernel_op_92 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_98 =
                      tmp_kernel_op_49 * tmp_kernel_op_55 + tmp_kernel_op_59 * tmp_kernel_op_63 +
                      tmp_kernel_op_67 * tmp_kernel_op_71 + tmp_kernel_op_75 * tmp_kernel_op_79 +
                      tmp_kernel_op_83 * tmp_kernel_op_87 + tmp_kernel_op_91 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_47 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_101 = tmp_kernel_op_65 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_102 = tmp_kernel_op_73 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_81 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_89 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_105 =
                      tmp_kernel_op_100 * tmp_kernel_op_63 + tmp_kernel_op_101 * tmp_kernel_op_71 +
                      tmp_kernel_op_102 * tmp_kernel_op_79 + tmp_kernel_op_103 * tmp_kernel_op_87 +
                      tmp_kernel_op_104 * tmp_kernel_op_95 + tmp_kernel_op_55 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_58 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_66 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_109 = tmp_kernel_op_74 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_82 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_111 = tmp_kernel_op_90 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_106 * tmp_kernel_op_55 + tmp_kernel_op_107 * tmp_kernel_op_63 +
                      tmp_kernel_op_108 * tmp_kernel_op_71 + tmp_kernel_op_109 * tmp_kernel_op_79 +
                      tmp_kernel_op_110 * tmp_kernel_op_87 + tmp_kernel_op_111 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_113 = tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_113 * tmp_kernel_op_55 + tmp_kernel_op_113 * tmp_kernel_op_63 +
                      tmp_kernel_op_113 * tmp_kernel_op_71 + tmp_kernel_op_113 * tmp_kernel_op_79 +
                      tmp_kernel_op_113 * tmp_kernel_op_87 + tmp_kernel_op_113 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_61;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_69;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_77;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_85;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_93;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_116 * tmp_kernel_op_55 + tmp_kernel_op_117 * tmp_kernel_op_63 +
                      tmp_kernel_op_118 * tmp_kernel_op_71 + tmp_kernel_op_119 * tmp_kernel_op_79 +
                      tmp_kernel_op_120 * tmp_kernel_op_87 + tmp_kernel_op_121 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_46 - tmp_kernel_op_49 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_56 - tmp_kernel_op_59 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_64 - tmp_kernel_op_67 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_72 - tmp_kernel_op_75 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_80 - tmp_kernel_op_83 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_88 - tmp_kernel_op_91 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_123 * tmp_kernel_op_55 + tmp_kernel_op_124 * tmp_kernel_op_63 +
                      tmp_kernel_op_125 * tmp_kernel_op_71 + tmp_kernel_op_126 * tmp_kernel_op_79 +
                      tmp_kernel_op_127 * tmp_kernel_op_87 + tmp_kernel_op_128 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_59 - tmp_kernel_op_60 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_67 - tmp_kernel_op_68 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_75 - tmp_kernel_op_76 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_83 - tmp_kernel_op_84 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_91 - tmp_kernel_op_92 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_130 * tmp_kernel_op_55 + tmp_kernel_op_131 * tmp_kernel_op_63 +
                      tmp_kernel_op_132 * tmp_kernel_op_71 + tmp_kernel_op_133 * tmp_kernel_op_79 +
                      tmp_kernel_op_134 * tmp_kernel_op_87 + tmp_kernel_op_135 * tmp_kernel_op_95;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_54 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_62 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_70 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_78 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_86 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_94 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_54 * tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_100 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_101 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_102 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_103 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_104 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_143 * tmp_kernel_op_46 + tmp_kernel_op_144 * tmp_kernel_op_56 +
                      tmp_kernel_op_145 * tmp_kernel_op_64 + tmp_kernel_op_146 * tmp_kernel_op_72 +
                      tmp_kernel_op_147 * tmp_kernel_op_80 + tmp_kernel_op_148 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_68 + tmp_kernel_op_146 * tmp_kernel_op_76 +
                      tmp_kernel_op_147 * tmp_kernel_op_84 + tmp_kernel_op_148 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_59 +
                      tmp_kernel_op_145 * tmp_kernel_op_67 + tmp_kernel_op_146 * tmp_kernel_op_75 +
                      tmp_kernel_op_147 * tmp_kernel_op_83 + tmp_kernel_op_148 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_106 * tmp_kernel_op_143 + tmp_kernel_op_107 * tmp_kernel_op_144 +
                      tmp_kernel_op_108 * tmp_kernel_op_145 + tmp_kernel_op_109 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_111 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_113 * tmp_kernel_op_143 + tmp_kernel_op_113 * tmp_kernel_op_144 +
                      tmp_kernel_op_113 * tmp_kernel_op_145 + tmp_kernel_op_113 * tmp_kernel_op_146 +
                      tmp_kernel_op_113 * tmp_kernel_op_147 + tmp_kernel_op_113 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_106 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_107 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_108 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_109 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_110 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_111 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_157 * tmp_kernel_op_46 + tmp_kernel_op_158 * tmp_kernel_op_56 +
                      tmp_kernel_op_159 * tmp_kernel_op_64 + tmp_kernel_op_160 * tmp_kernel_op_72 +
                      tmp_kernel_op_161 * tmp_kernel_op_80 + tmp_kernel_op_162 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_68 + tmp_kernel_op_160 * tmp_kernel_op_76 +
                      tmp_kernel_op_161 * tmp_kernel_op_84 + tmp_kernel_op_162 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_59 +
                      tmp_kernel_op_159 * tmp_kernel_op_67 + tmp_kernel_op_160 * tmp_kernel_op_75 +
                      tmp_kernel_op_161 * tmp_kernel_op_83 + tmp_kernel_op_162 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_113 * tmp_kernel_op_157 + tmp_kernel_op_113 * tmp_kernel_op_158 +
                      tmp_kernel_op_113 * tmp_kernel_op_159 + tmp_kernel_op_113 * tmp_kernel_op_160 +
                      tmp_kernel_op_113 * tmp_kernel_op_161 + tmp_kernel_op_113 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_113 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_113 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_113 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_113 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_113 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_113 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_46 + tmp_kernel_op_172 * tmp_kernel_op_56 +
                      tmp_kernel_op_173 * tmp_kernel_op_64 + tmp_kernel_op_174 * tmp_kernel_op_72 +
                      tmp_kernel_op_175 * tmp_kernel_op_80 + tmp_kernel_op_176 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_68 + tmp_kernel_op_174 * tmp_kernel_op_76 +
                      tmp_kernel_op_175 * tmp_kernel_op_84 + tmp_kernel_op_176 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_59 +
                      tmp_kernel_op_173 * tmp_kernel_op_67 + tmp_kernel_op_174 * tmp_kernel_op_75 +
                      tmp_kernel_op_175 * tmp_kernel_op_83 + tmp_kernel_op_176 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_121 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_46 + tmp_kernel_op_198 * tmp_kernel_op_56 +
                      tmp_kernel_op_199 * tmp_kernel_op_64 + tmp_kernel_op_200 * tmp_kernel_op_72 +
                      tmp_kernel_op_201 * tmp_kernel_op_80 + tmp_kernel_op_202 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_128 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_46 + tmp_kernel_op_205 * tmp_kernel_op_56 +
                      tmp_kernel_op_206 * tmp_kernel_op_64 + tmp_kernel_op_207 * tmp_kernel_op_72 +
                      tmp_kernel_op_208 * tmp_kernel_op_80 + tmp_kernel_op_209 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_54;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_70;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_78;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_86;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_135 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_46 + tmp_kernel_op_212 * tmp_kernel_op_56 +
                      tmp_kernel_op_213 * tmp_kernel_op_64 + tmp_kernel_op_214 * tmp_kernel_op_72 +
                      tmp_kernel_op_215 * tmp_kernel_op_80 + tmp_kernel_op_216 * tmp_kernel_op_88;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_68 + tmp_kernel_op_200 * tmp_kernel_op_76 +
                      tmp_kernel_op_201 * tmp_kernel_op_84 + tmp_kernel_op_202 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_68 + tmp_kernel_op_207 * tmp_kernel_op_76 +
                      tmp_kernel_op_208 * tmp_kernel_op_84 + tmp_kernel_op_209 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_68 + tmp_kernel_op_214 * tmp_kernel_op_76 +
                      tmp_kernel_op_215 * tmp_kernel_op_84 + tmp_kernel_op_216 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_59 +
                      tmp_kernel_op_199 * tmp_kernel_op_67 + tmp_kernel_op_200 * tmp_kernel_op_75 +
                      tmp_kernel_op_201 * tmp_kernel_op_83 + tmp_kernel_op_202 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_59 +
                      tmp_kernel_op_206 * tmp_kernel_op_67 + tmp_kernel_op_207 * tmp_kernel_op_75 +
                      tmp_kernel_op_208 * tmp_kernel_op_83 + tmp_kernel_op_209 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_59 +
                      tmp_kernel_op_213 * tmp_kernel_op_67 + tmp_kernel_op_214 * tmp_kernel_op_75 +
                      tmp_kernel_op_215 * tmp_kernel_op_83 + tmp_kernel_op_216 * tmp_kernel_op_91;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMatVec_0 =
                      src_dof_0 * ( tmp_kernel_op_10 *
                                        ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                          ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                                    tmp_kernel_op_17 *
                                        ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                                          ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                                    tmp_kernel_op_24 *
                                        ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                                          ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                                            0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                                    tmp_kernel_op_31 *
                                        ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                                          ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                                            0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                                    tmp_kernel_op_38 *
                                        ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                                          ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                                            0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                                    tmp_kernel_op_45 *
                                        ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                                          ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                                            0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_1 * tmp_kernel_op_105 + src_dof_2 * tmp_kernel_op_112 + src_dof_3 * tmp_kernel_op_114 +
                      src_dof_4 * tmp_kernel_op_96 + src_dof_5 * tmp_kernel_op_97 + src_dof_6 * tmp_kernel_op_98 +
                      src_dof_7 * tmp_kernel_op_122 + src_dof_8 * tmp_kernel_op_129 + src_dof_9 * tmp_kernel_op_136;
                  const walberla::float64 elMatVec_1 =
                      src_dof_0 * tmp_kernel_op_105 +
                      src_dof_1 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) ) ) +
                      src_dof_2 * tmp_kernel_op_152 + src_dof_3 * tmp_kernel_op_153 + src_dof_4 * tmp_kernel_op_149 +
                      src_dof_5 * tmp_kernel_op_150 + src_dof_6 * tmp_kernel_op_151 + src_dof_7 * tmp_kernel_op_154 +
                      src_dof_8 * tmp_kernel_op_155 + src_dof_9 * tmp_kernel_op_156;
                  const walberla::float64 elMatVec_2 =
                      src_dof_0 * tmp_kernel_op_112 + src_dof_1 * tmp_kernel_op_152 +
                      src_dof_2 *
                          ( tmp_kernel_op_137 *
                                ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                            tmp_kernel_op_138 *
                                ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                            tmp_kernel_op_139 *
                                ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_140 *
                                ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                            tmp_kernel_op_141 *
                                ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                            tmp_kernel_op_142 *
                                ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) ) ) +
                      src_dof_3 * tmp_kernel_op_166 + src_dof_4 * tmp_kernel_op_163 + src_dof_5 * tmp_kernel_op_164 +
                      src_dof_6 * tmp_kernel_op_165 + src_dof_7 * tmp_kernel_op_167 + src_dof_8 * tmp_kernel_op_168 +
                      src_dof_9 * tmp_kernel_op_169;
                  const walberla::float64 elMatVec_3 =
                      src_dof_0 * tmp_kernel_op_114 + src_dof_1 * tmp_kernel_op_153 + src_dof_2 * tmp_kernel_op_166 +
                      src_dof_3 * ( tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                    tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) ) +
                      src_dof_4 * tmp_kernel_op_177 + src_dof_5 * tmp_kernel_op_178 + src_dof_6 * tmp_kernel_op_179 +
                      src_dof_7 * tmp_kernel_op_180 + src_dof_8 * tmp_kernel_op_181 + src_dof_9 * tmp_kernel_op_182;
                  const walberla::float64 elMatVec_4 =
                      src_dof_0 * tmp_kernel_op_96 + src_dof_1 * tmp_kernel_op_149 + src_dof_2 * tmp_kernel_op_163 +
                      src_dof_3 * tmp_kernel_op_177 +
                      src_dof_4 * ( tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                    tmp_kernel_op_185 * tmp_kernel_op_20 + tmp_kernel_op_186 * tmp_kernel_op_27 +
                                    tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41 ) +
                      src_dof_5 * tmp_kernel_op_189 + src_dof_6 * tmp_kernel_op_196 + src_dof_7 * tmp_kernel_op_203 +
                      src_dof_8 * tmp_kernel_op_210 + src_dof_9 * tmp_kernel_op_217;
                  const walberla::float64 elMatVec_5 =
                      src_dof_0 * tmp_kernel_op_97 + src_dof_1 * tmp_kernel_op_150 + src_dof_2 * tmp_kernel_op_164 +
                      src_dof_3 * tmp_kernel_op_178 + src_dof_4 * tmp_kernel_op_189 +
                      src_dof_5 * ( tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                    tmp_kernel_op_185 * tmp_kernel_op_19 + tmp_kernel_op_186 * tmp_kernel_op_26 +
                                    tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40 ) +
                      src_dof_6 * tmp_kernel_op_218 + src_dof_7 * tmp_kernel_op_219 + src_dof_8 * tmp_kernel_op_220 +
                      src_dof_9 * tmp_kernel_op_221;
                  const walberla::float64 elMatVec_6 =
                      src_dof_0 * tmp_kernel_op_98 + src_dof_1 * tmp_kernel_op_151 + src_dof_2 * tmp_kernel_op_165 +
                      src_dof_3 * tmp_kernel_op_179 + src_dof_4 * tmp_kernel_op_196 + src_dof_5 * tmp_kernel_op_218 +
                      src_dof_6 * ( tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                    tmp_kernel_op_19 * tmp_kernel_op_192 + tmp_kernel_op_193 * tmp_kernel_op_26 +
                                    tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40 ) +
                      src_dof_7 * tmp_kernel_op_222 + src_dof_8 * tmp_kernel_op_223 + src_dof_9 * tmp_kernel_op_224;
                  const walberla::float64 elMatVec_7 =
                      src_dof_0 * tmp_kernel_op_122 + src_dof_1 * tmp_kernel_op_154 + src_dof_2 * tmp_kernel_op_167 +
                      src_dof_3 * tmp_kernel_op_180 + src_dof_4 * tmp_kernel_op_203 + src_dof_5 * tmp_kernel_op_219 +
                      src_dof_6 * tmp_kernel_op_222 +
                      src_dof_7 *
                          ( tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                            tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                          ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                            tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                            tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                            tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                            tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                          ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) ) ) +
                      src_dof_8 * tmp_kernel_op_226 + src_dof_9 * tmp_kernel_op_227;
                  const walberla::float64 elMatVec_8 =
                      src_dof_0 * tmp_kernel_op_129 + src_dof_1 * tmp_kernel_op_155 + src_dof_2 * tmp_kernel_op_168 +
                      src_dof_3 * tmp_kernel_op_181 + src_dof_4 * tmp_kernel_op_210 + src_dof_5 * tmp_kernel_op_220 +
                      src_dof_6 * tmp_kernel_op_223 + src_dof_7 * tmp_kernel_op_226 +
                      src_dof_8 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_2 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) ) ) +
                      src_dof_9 * tmp_kernel_op_228;
                  const walberla::float64 elMatVec_9 =
                      src_dof_0 * tmp_kernel_op_136 + src_dof_1 * tmp_kernel_op_156 + src_dof_2 * tmp_kernel_op_169 +
                      src_dof_3 * tmp_kernel_op_182 + src_dof_4 * tmp_kernel_op_217 + src_dof_5 * tmp_kernel_op_221 +
                      src_dof_6 * tmp_kernel_op_224 + src_dof_7 * tmp_kernel_op_227 + src_dof_8 * tmp_kernel_op_228 +
                      src_dof_9 *
                          ( tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_0 - tmp_kernel_op_1 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                            tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                                 ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                            tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                                 ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                            tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                                 ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                            tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                                 ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                                   ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) ) );
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_0 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) +
                                                   1];
                  _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) +
                                  1] =
                      elMatVec_1 +
                      _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) ) +
                                      1];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                    ( 6 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_2 +
                      _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                      ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                          ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                        ( 6 ) ) +
                                      ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                          ( micro_edges_per_macro_edge + 3 ) ) /
                                        ( 6 ) )];
                  _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                  ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                  ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                      ( micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) ) -
                                  ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                      ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                    ( 6 ) )] =
                      elMatVec_3 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                       ( micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                     ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_4 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                    ( micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_5 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                        ( micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                  ( 6 ) )] =
                      elMatVec_6 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                    ( micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_7 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) )] =
                      elMatVec_8 +
                      _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                    5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) )];
                  _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                        ( micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) -
                                ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                    ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                  ( 6 ) ) +
                                1] =
                      elMatVec_9 +
                      _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                    ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                            ( micro_edges_per_macro_edge + 2 ) ) /
                                          ( 6 ) ) -
                                    ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                        ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                      ( 6 ) ) +
                                    1];
               }
      }
   }
}
void P2ElementwiseBoundaryMass::apply_P2ElementwiseBoundaryMass_facet_id_0_macro_2D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 jac_affine_0_0_GRAY = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
            for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 + micro_edges_per_macro_edge; ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 src_dof_0 =
                   _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_1 = _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               const walberla::float64 src_dof_2 = _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_3 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_4 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_5 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 =
                   tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_8 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_10 = 0.25;
               const walberla::float64 tmp_kernel_op_11 = tmp_kernel_op_10 * 2.0;
               const walberla::float64 tmp_kernel_op_12 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_13 =
                   tmp_kernel_op_11 + tmp_kernel_op_12 - 1.5 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_8 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_15 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_15 * 2.0;
               const walberla::float64 tmp_kernel_op_17 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_18 =
                   tmp_kernel_op_16 + tmp_kernel_op_17 - 2.6618950038622251 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_19 = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_20 = tmp_kernel_op_7 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_13 * tmp_kernel_op_14;
               const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_18 * tmp_kernel_op_19;
               const walberla::float64 tmp_kernel_op_23 =
                   tmp_kernel_op_12 * tmp_kernel_op_21 + tmp_kernel_op_17 * tmp_kernel_op_22 + tmp_kernel_op_20 * tmp_kernel_op_3;
               const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_1 - 0.1127016653792583;
               const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_11 - 0.5;
               const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_16 - 0.8872983346207417;
               const walberla::float64 tmp_kernel_op_27 = tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_25 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_26;
               const int64_t           tmp_kernel_op_28 = tmp_kernel_op_5;
               const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_20 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_22 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const int64_t           tmp_kernel_op_30 = tmp_kernel_op_4 * 4;
               const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_32 = -tmp_kernel_op_12 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_33 = -tmp_kernel_op_17 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_20 * tmp_kernel_op_31 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_32 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_0 * -4.0 - tmp_kernel_op_3 + 0.45080666151703319;
               const walberla::float64 tmp_kernel_op_36 = tmp_kernel_op_10 * -4.0 - tmp_kernel_op_12 + 2.0;
               const walberla::float64 tmp_kernel_op_37 = tmp_kernel_op_15 * -4.0 - tmp_kernel_op_17 + 3.5491933384829668;
               const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_20 * tmp_kernel_op_35 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_37;
               const walberla::float64 tmp_kernel_op_39 = tmp_kernel_op_24 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_40 = tmp_kernel_op_14 * tmp_kernel_op_25;
               const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_19 * tmp_kernel_op_26;
               const walberla::float64 tmp_kernel_op_42 =
                   tmp_kernel_op_12 * tmp_kernel_op_40 + tmp_kernel_op_17 * tmp_kernel_op_41 + tmp_kernel_op_3 * tmp_kernel_op_39;
               const walberla::float64 tmp_kernel_op_43 = tmp_kernel_op_39 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_40 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_44 = tmp_kernel_op_31 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_41;
               const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_35 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_41;
               const int64_t           tmp_kernel_op_46 = ( (int64_t) ( ( tmp_kernel_op_28 * tmp_kernel_op_28 ) ) );
               const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_50 =
                   tmp_kernel_op_12 * tmp_kernel_op_48 + tmp_kernel_op_17 * tmp_kernel_op_49 + tmp_kernel_op_3 * tmp_kernel_op_47;
               const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_31 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_49;
               const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_35 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_49;
               const int64_t           tmp_kernel_op_53 = tmp_kernel_op_4 * 16;
               const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_31 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_14 * tmp_kernel_op_32;
               const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_19 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_57 =
                   tmp_kernel_op_12 * tmp_kernel_op_55 + tmp_kernel_op_17 * tmp_kernel_op_56 + tmp_kernel_op_3 * tmp_kernel_op_54;
               const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_12 * tmp_kernel_op_14 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_17 * tmp_kernel_op_19 * tmp_kernel_op_37 +
                                                          tmp_kernel_op_3 * tmp_kernel_op_35 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_35 * tmp_kernel_op_54 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_55 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_56;
               const walberla::float64 elMatVec_0 = src_dof_0 * ( ( tmp_kernel_op_13 * tmp_kernel_op_13 ) * tmp_kernel_op_14 +
                                                                  ( tmp_kernel_op_18 * tmp_kernel_op_18 ) * tmp_kernel_op_19 +
                                                                  ( tmp_kernel_op_7 * tmp_kernel_op_7 ) * tmp_kernel_op_9 ) +
                                                    src_dof_1 * tmp_kernel_op_27 + src_dof_2 * tmp_kernel_op_29 +
                                                    src_dof_3 * tmp_kernel_op_23 + src_dof_4 * tmp_kernel_op_34 +
                                                    src_dof_5 * tmp_kernel_op_38;
               const walberla::float64 elMatVec_1 = src_dof_0 * tmp_kernel_op_27 +
                                                    src_dof_1 * ( tmp_kernel_op_14 * ( tmp_kernel_op_25 * tmp_kernel_op_25 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_26 * tmp_kernel_op_26 ) +
                                                                  ( tmp_kernel_op_24 * tmp_kernel_op_24 ) * tmp_kernel_op_9 ) +
                                                    src_dof_2 * tmp_kernel_op_43 + src_dof_3 * tmp_kernel_op_42 +
                                                    src_dof_4 * tmp_kernel_op_44 + src_dof_5 * tmp_kernel_op_45;
               const walberla::float64 elMatVec_2 =
                   src_dof_0 * tmp_kernel_op_29 + src_dof_1 * tmp_kernel_op_43 +
                   src_dof_2 * ( tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                 tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                 tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) ) +
                   src_dof_3 * tmp_kernel_op_50 + src_dof_4 * tmp_kernel_op_51 + src_dof_5 * tmp_kernel_op_52;
               const walberla::float64 elMatVec_3 =
                   src_dof_0 * tmp_kernel_op_23 + src_dof_1 * tmp_kernel_op_42 + src_dof_2 * tmp_kernel_op_50 +
                   src_dof_3 * ( tmp_kernel_op_0 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                 tmp_kernel_op_10 * tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                 tmp_kernel_op_15 * tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) ) +
                   src_dof_4 * tmp_kernel_op_57 + src_dof_5 * tmp_kernel_op_58;
               const walberla::float64 elMatVec_4 = src_dof_0 * tmp_kernel_op_34 + src_dof_1 * tmp_kernel_op_44 +
                                                    src_dof_2 * tmp_kernel_op_51 + src_dof_3 * tmp_kernel_op_57 +
                                                    src_dof_4 * ( tmp_kernel_op_14 * ( tmp_kernel_op_32 * tmp_kernel_op_32 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_33 * tmp_kernel_op_33 ) +
                                                                  ( tmp_kernel_op_31 * tmp_kernel_op_31 ) * tmp_kernel_op_9 ) +
                                                    src_dof_5 * tmp_kernel_op_59;
               const walberla::float64 elMatVec_5 = src_dof_0 * tmp_kernel_op_38 + src_dof_1 * tmp_kernel_op_45 +
                                                    src_dof_2 * tmp_kernel_op_52 + src_dof_3 * tmp_kernel_op_58 +
                                                    src_dof_4 * tmp_kernel_op_59 +
                                                    src_dof_5 * ( tmp_kernel_op_14 * ( tmp_kernel_op_36 * tmp_kernel_op_36 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_37 * tmp_kernel_op_37 ) +
                                                                  ( tmp_kernel_op_35 * tmp_kernel_op_35 ) * tmp_kernel_op_9 );
               _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatVec_0 +
                   _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] =
                   elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                               ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] =
                   elMatVec_2 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatVec_3 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                             2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatVec_4 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatVec_5 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
            }
      }
   }
}
void P2ElementwiseBoundaryMass::apply_P2ElementwiseBoundaryMass_facet_id_1_macro_2D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_2_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 jac_affine_0_0_GRAY = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < micro_edges_per_macro_edge; ctr_1 += 1 )
            for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 src_dof_0 =
                   _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_1 = _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_2 = _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               const walberla::float64 src_dof_3 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_4 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_5 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 =
                   tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_8 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_10 = 0.25;
               const walberla::float64 tmp_kernel_op_11 = tmp_kernel_op_10 * 2.0;
               const walberla::float64 tmp_kernel_op_12 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_13 =
                   tmp_kernel_op_11 + tmp_kernel_op_12 - 1.5 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_8 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_15 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_15 * 2.0;
               const walberla::float64 tmp_kernel_op_17 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_18 =
                   tmp_kernel_op_16 + tmp_kernel_op_17 - 2.6618950038622251 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_19 = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_20 = tmp_kernel_op_7 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_13 * tmp_kernel_op_14;
               const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_18 * tmp_kernel_op_19;
               const walberla::float64 tmp_kernel_op_23 =
                   tmp_kernel_op_12 * tmp_kernel_op_21 + tmp_kernel_op_17 * tmp_kernel_op_22 + tmp_kernel_op_20 * tmp_kernel_op_3;
               const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_1 - 0.1127016653792583;
               const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_11 - 0.5;
               const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_16 - 0.8872983346207417;
               const walberla::float64 tmp_kernel_op_27 = tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_25 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_26;
               const int64_t           tmp_kernel_op_28 = tmp_kernel_op_5;
               const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_20 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_22 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const int64_t           tmp_kernel_op_30 = tmp_kernel_op_4 * 4;
               const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_32 = -tmp_kernel_op_12 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_33 = -tmp_kernel_op_17 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_20 * tmp_kernel_op_31 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_32 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_0 * -4.0 - tmp_kernel_op_3 + 0.45080666151703319;
               const walberla::float64 tmp_kernel_op_36 = tmp_kernel_op_10 * -4.0 - tmp_kernel_op_12 + 2.0;
               const walberla::float64 tmp_kernel_op_37 = tmp_kernel_op_15 * -4.0 - tmp_kernel_op_17 + 3.5491933384829668;
               const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_20 * tmp_kernel_op_35 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_37;
               const walberla::float64 tmp_kernel_op_39 = tmp_kernel_op_24 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_40 = tmp_kernel_op_14 * tmp_kernel_op_25;
               const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_19 * tmp_kernel_op_26;
               const walberla::float64 tmp_kernel_op_42 =
                   tmp_kernel_op_12 * tmp_kernel_op_40 + tmp_kernel_op_17 * tmp_kernel_op_41 + tmp_kernel_op_3 * tmp_kernel_op_39;
               const walberla::float64 tmp_kernel_op_43 = tmp_kernel_op_39 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_40 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_44 = tmp_kernel_op_31 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_41;
               const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_35 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_41;
               const int64_t           tmp_kernel_op_46 = ( (int64_t) ( ( tmp_kernel_op_28 * tmp_kernel_op_28 ) ) );
               const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_50 =
                   tmp_kernel_op_12 * tmp_kernel_op_48 + tmp_kernel_op_17 * tmp_kernel_op_49 + tmp_kernel_op_3 * tmp_kernel_op_47;
               const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_31 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_49;
               const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_35 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_49;
               const int64_t           tmp_kernel_op_53 = tmp_kernel_op_4 * 16;
               const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_31 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_14 * tmp_kernel_op_32;
               const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_19 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_57 =
                   tmp_kernel_op_12 * tmp_kernel_op_55 + tmp_kernel_op_17 * tmp_kernel_op_56 + tmp_kernel_op_3 * tmp_kernel_op_54;
               const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_12 * tmp_kernel_op_14 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_17 * tmp_kernel_op_19 * tmp_kernel_op_37 +
                                                          tmp_kernel_op_3 * tmp_kernel_op_35 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_35 * tmp_kernel_op_54 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_55 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_56;
               const walberla::float64 elMatVec_0 = src_dof_0 * ( ( tmp_kernel_op_13 * tmp_kernel_op_13 ) * tmp_kernel_op_14 +
                                                                  ( tmp_kernel_op_18 * tmp_kernel_op_18 ) * tmp_kernel_op_19 +
                                                                  ( tmp_kernel_op_7 * tmp_kernel_op_7 ) * tmp_kernel_op_9 ) +
                                                    src_dof_1 * tmp_kernel_op_27 + src_dof_2 * tmp_kernel_op_29 +
                                                    src_dof_3 * tmp_kernel_op_23 + src_dof_4 * tmp_kernel_op_34 +
                                                    src_dof_5 * tmp_kernel_op_38;
               const walberla::float64 elMatVec_1 = src_dof_0 * tmp_kernel_op_27 +
                                                    src_dof_1 * ( tmp_kernel_op_14 * ( tmp_kernel_op_25 * tmp_kernel_op_25 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_26 * tmp_kernel_op_26 ) +
                                                                  ( tmp_kernel_op_24 * tmp_kernel_op_24 ) * tmp_kernel_op_9 ) +
                                                    src_dof_2 * tmp_kernel_op_43 + src_dof_3 * tmp_kernel_op_42 +
                                                    src_dof_4 * tmp_kernel_op_44 + src_dof_5 * tmp_kernel_op_45;
               const walberla::float64 elMatVec_2 =
                   src_dof_0 * tmp_kernel_op_29 + src_dof_1 * tmp_kernel_op_43 +
                   src_dof_2 * ( tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                 tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                 tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) ) +
                   src_dof_3 * tmp_kernel_op_50 + src_dof_4 * tmp_kernel_op_51 + src_dof_5 * tmp_kernel_op_52;
               const walberla::float64 elMatVec_3 =
                   src_dof_0 * tmp_kernel_op_23 + src_dof_1 * tmp_kernel_op_42 + src_dof_2 * tmp_kernel_op_50 +
                   src_dof_3 * ( tmp_kernel_op_0 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                 tmp_kernel_op_10 * tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                 tmp_kernel_op_15 * tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) ) +
                   src_dof_4 * tmp_kernel_op_57 + src_dof_5 * tmp_kernel_op_58;
               const walberla::float64 elMatVec_4 = src_dof_0 * tmp_kernel_op_34 + src_dof_1 * tmp_kernel_op_44 +
                                                    src_dof_2 * tmp_kernel_op_51 + src_dof_3 * tmp_kernel_op_57 +
                                                    src_dof_4 * ( tmp_kernel_op_14 * ( tmp_kernel_op_32 * tmp_kernel_op_32 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_33 * tmp_kernel_op_33 ) +
                                                                  ( tmp_kernel_op_31 * tmp_kernel_op_31 ) * tmp_kernel_op_9 ) +
                                                    src_dof_5 * tmp_kernel_op_59;
               const walberla::float64 elMatVec_5 = src_dof_0 * tmp_kernel_op_38 + src_dof_1 * tmp_kernel_op_45 +
                                                    src_dof_2 * tmp_kernel_op_52 + src_dof_3 * tmp_kernel_op_58 +
                                                    src_dof_4 * tmp_kernel_op_59 +
                                                    src_dof_5 * ( tmp_kernel_op_14 * ( tmp_kernel_op_36 * tmp_kernel_op_36 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_37 * tmp_kernel_op_37 ) +
                                                                  ( tmp_kernel_op_35 * tmp_kernel_op_35 ) * tmp_kernel_op_9 );
               _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatVec_0 +
                   _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                               ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] =
                   elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] =
                   elMatVec_2 + _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatVec_3 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatVec_4 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                             2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatVec_5 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
            }
      }
   }
}
void P2ElementwiseBoundaryMass::apply_P2ElementwiseBoundaryMass_facet_id_2_macro_2D(
    walberla::float64* RESTRICT _data_dstEdge,
    walberla::float64* RESTRICT _data_dstVertex,
    walberla::float64* RESTRICT _data_srcEdge,
    walberla::float64* RESTRICT _data_srcVertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_2_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 jac_affine_0_0_GRAY     = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY     = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < micro_edges_per_macro_edge; ctr_1 += 1 )
            for ( int64_t ctr_0 = -ctr_1 + micro_edges_per_macro_edge - 1; ctr_0 < -ctr_1 + micro_edges_per_macro_edge;
                  ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 src_dof_0 = _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               const walberla::float64 src_dof_1 = _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_2 =
                   _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_3 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_4 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               const walberla::float64 src_dof_5 =
                   _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 =
                   tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_8 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_10 = 0.25;
               const walberla::float64 tmp_kernel_op_11 = tmp_kernel_op_10 * 2.0;
               const walberla::float64 tmp_kernel_op_12 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_13 =
                   tmp_kernel_op_11 + tmp_kernel_op_12 - 1.5 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_8 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_15 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_15 * 2.0;
               const walberla::float64 tmp_kernel_op_17 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_18 =
                   tmp_kernel_op_16 + tmp_kernel_op_17 - 2.6618950038622251 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_19 = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_20 = tmp_kernel_op_7 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_13 * tmp_kernel_op_14;
               const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_18 * tmp_kernel_op_19;
               const walberla::float64 tmp_kernel_op_23 =
                   tmp_kernel_op_12 * tmp_kernel_op_21 + tmp_kernel_op_17 * tmp_kernel_op_22 + tmp_kernel_op_20 * tmp_kernel_op_3;
               const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_1 - 0.1127016653792583;
               const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_11 - 0.5;
               const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_16 - 0.8872983346207417;
               const walberla::float64 tmp_kernel_op_27 = tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_25 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_26;
               const int64_t           tmp_kernel_op_28 = tmp_kernel_op_5;
               const walberla::float64 tmp_kernel_op_29 = tmp_kernel_op_20 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_22 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const int64_t           tmp_kernel_op_30 = tmp_kernel_op_4 * 4;
               const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_32 = -tmp_kernel_op_12 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_33 = -tmp_kernel_op_17 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_20 * tmp_kernel_op_31 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_32 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_0 * -4.0 - tmp_kernel_op_3 + 0.45080666151703319;
               const walberla::float64 tmp_kernel_op_36 = tmp_kernel_op_10 * -4.0 - tmp_kernel_op_12 + 2.0;
               const walberla::float64 tmp_kernel_op_37 = tmp_kernel_op_15 * -4.0 - tmp_kernel_op_17 + 3.5491933384829668;
               const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_20 * tmp_kernel_op_35 +
                                                          tmp_kernel_op_21 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_37;
               const walberla::float64 tmp_kernel_op_39 = tmp_kernel_op_24 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_40 = tmp_kernel_op_14 * tmp_kernel_op_25;
               const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_19 * tmp_kernel_op_26;
               const walberla::float64 tmp_kernel_op_42 =
                   tmp_kernel_op_12 * tmp_kernel_op_40 + tmp_kernel_op_17 * tmp_kernel_op_41 + tmp_kernel_op_3 * tmp_kernel_op_39;
               const walberla::float64 tmp_kernel_op_43 = tmp_kernel_op_39 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_40 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                          tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_44 = tmp_kernel_op_31 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_41;
               const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_35 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_41;
               const int64_t           tmp_kernel_op_46 = ( (int64_t) ( ( tmp_kernel_op_28 * tmp_kernel_op_28 ) ) );
               const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
               const walberla::float64 tmp_kernel_op_50 =
                   tmp_kernel_op_12 * tmp_kernel_op_48 + tmp_kernel_op_17 * tmp_kernel_op_49 + tmp_kernel_op_3 * tmp_kernel_op_47;
               const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_31 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_49;
               const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_35 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_49;
               const int64_t           tmp_kernel_op_53 = tmp_kernel_op_4 * 16;
               const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_31 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_14 * tmp_kernel_op_32;
               const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_19 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_57 =
                   tmp_kernel_op_12 * tmp_kernel_op_55 + tmp_kernel_op_17 * tmp_kernel_op_56 + tmp_kernel_op_3 * tmp_kernel_op_54;
               const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_12 * tmp_kernel_op_14 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_17 * tmp_kernel_op_19 * tmp_kernel_op_37 +
                                                          tmp_kernel_op_3 * tmp_kernel_op_35 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_35 * tmp_kernel_op_54 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_55 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_56;
               const walberla::float64 elMatVec_0 = src_dof_0 * ( ( tmp_kernel_op_13 * tmp_kernel_op_13 ) * tmp_kernel_op_14 +
                                                                  ( tmp_kernel_op_18 * tmp_kernel_op_18 ) * tmp_kernel_op_19 +
                                                                  ( tmp_kernel_op_7 * tmp_kernel_op_7 ) * tmp_kernel_op_9 ) +
                                                    src_dof_1 * tmp_kernel_op_27 + src_dof_2 * tmp_kernel_op_29 +
                                                    src_dof_3 * tmp_kernel_op_23 + src_dof_4 * tmp_kernel_op_34 +
                                                    src_dof_5 * tmp_kernel_op_38;
               const walberla::float64 elMatVec_1 = src_dof_0 * tmp_kernel_op_27 +
                                                    src_dof_1 * ( tmp_kernel_op_14 * ( tmp_kernel_op_25 * tmp_kernel_op_25 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_26 * tmp_kernel_op_26 ) +
                                                                  ( tmp_kernel_op_24 * tmp_kernel_op_24 ) * tmp_kernel_op_9 ) +
                                                    src_dof_2 * tmp_kernel_op_43 + src_dof_3 * tmp_kernel_op_42 +
                                                    src_dof_4 * tmp_kernel_op_44 + src_dof_5 * tmp_kernel_op_45;
               const walberla::float64 elMatVec_2 =
                   src_dof_0 * tmp_kernel_op_29 + src_dof_1 * tmp_kernel_op_43 +
                   src_dof_2 * ( tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                 tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                 tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) ) +
                   src_dof_3 * tmp_kernel_op_50 + src_dof_4 * tmp_kernel_op_51 + src_dof_5 * tmp_kernel_op_52;
               const walberla::float64 elMatVec_3 =
                   src_dof_0 * tmp_kernel_op_23 + src_dof_1 * tmp_kernel_op_42 + src_dof_2 * tmp_kernel_op_50 +
                   src_dof_3 * ( tmp_kernel_op_0 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                 tmp_kernel_op_10 * tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                 tmp_kernel_op_15 * tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) ) +
                   src_dof_4 * tmp_kernel_op_57 + src_dof_5 * tmp_kernel_op_58;
               const walberla::float64 elMatVec_4 = src_dof_0 * tmp_kernel_op_34 + src_dof_1 * tmp_kernel_op_44 +
                                                    src_dof_2 * tmp_kernel_op_51 + src_dof_3 * tmp_kernel_op_57 +
                                                    src_dof_4 * ( tmp_kernel_op_14 * ( tmp_kernel_op_32 * tmp_kernel_op_32 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_33 * tmp_kernel_op_33 ) +
                                                                  ( tmp_kernel_op_31 * tmp_kernel_op_31 ) * tmp_kernel_op_9 ) +
                                                    src_dof_5 * tmp_kernel_op_59;
               const walberla::float64 elMatVec_5 = src_dof_0 * tmp_kernel_op_38 + src_dof_1 * tmp_kernel_op_45 +
                                                    src_dof_2 * tmp_kernel_op_52 + src_dof_3 * tmp_kernel_op_58 +
                                                    src_dof_4 * tmp_kernel_op_59 +
                                                    src_dof_5 * ( tmp_kernel_op_14 * ( tmp_kernel_op_36 * tmp_kernel_op_36 ) +
                                                                  tmp_kernel_op_19 * ( tmp_kernel_op_37 * tmp_kernel_op_37 ) +
                                                                  ( tmp_kernel_op_35 * tmp_kernel_op_35 ) * tmp_kernel_op_9 );
               _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] =
                   elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                               ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] =
                   elMatVec_1 + _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatVec_2 +
                   _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                             2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatVec_3 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatVec_4 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatVec_5 +
                   _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                 ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
            }
      }
   }
}
void P2ElementwiseBoundaryMass::toMatrix_P2ElementwiseBoundaryMass_facet_id_0_macro_3D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_0comp2,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_1comp2,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    walberla::float64                    macro_vertex_coord_id_2comp2,
    walberla::float64                    macro_vertex_coord_id_3comp0,
    walberla::float64                    macro_vertex_coord_id_3comp1,
    walberla::float64                    macro_vertex_coord_id_3comp2,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_50 + tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_53 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_53 + 1.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_56 =
                      tmp_kernel_op_55 * ( tmp_kernel_op_46 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_52 +
                                           tmp_kernel_op_54 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_62 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_61 + tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_65 =
                      tmp_kernel_op_64 * ( tmp_kernel_op_54 + tmp_kernel_op_57 + tmp_kernel_op_59 + tmp_kernel_op_60 +
                                           tmp_kernel_op_63 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_66 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_70 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_71 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_72 = tmp_kernel_op_70 + tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_74 =
                      tmp_kernel_op_73 * ( tmp_kernel_op_54 + tmp_kernel_op_66 + tmp_kernel_op_68 + tmp_kernel_op_69 +
                                           tmp_kernel_op_72 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_76 = tmp_kernel_op_75 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_79 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_79 + tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_83 =
                      tmp_kernel_op_82 * ( tmp_kernel_op_54 + tmp_kernel_op_75 + tmp_kernel_op_77 + tmp_kernel_op_78 +
                                           tmp_kernel_op_81 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_84 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_87 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_89 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_92 =
                      tmp_kernel_op_91 * ( tmp_kernel_op_54 + tmp_kernel_op_84 + tmp_kernel_op_86 + tmp_kernel_op_87 +
                                           tmp_kernel_op_90 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_93  = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_94  = tmp_kernel_op_93 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_95  = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_96  = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_97  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_98  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_97 + tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_101 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_54 + tmp_kernel_op_93 + tmp_kernel_op_95 + tmp_kernel_op_96 +
                                            tmp_kernel_op_99 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_102 =
                      tmp_kernel_op_101 * tmp_kernel_op_94 + tmp_kernel_op_47 * tmp_kernel_op_56 +
                      tmp_kernel_op_58 * tmp_kernel_op_65 + tmp_kernel_op_67 * tmp_kernel_op_74 +
                      tmp_kernel_op_76 * tmp_kernel_op_83 + tmp_kernel_op_85 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_59 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_68 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_77 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_86 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_95 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_109 =
                      tmp_kernel_op_101 * tmp_kernel_op_108 + tmp_kernel_op_103 * tmp_kernel_op_56 +
                      tmp_kernel_op_104 * tmp_kernel_op_65 + tmp_kernel_op_105 * tmp_kernel_op_74 +
                      tmp_kernel_op_106 * tmp_kernel_op_83 + tmp_kernel_op_107 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_111 =
                      tmp_kernel_op_101 * tmp_kernel_op_110 + tmp_kernel_op_110 * tmp_kernel_op_56 +
                      tmp_kernel_op_110 * tmp_kernel_op_65 + tmp_kernel_op_110 * tmp_kernel_op_74 +
                      tmp_kernel_op_110 * tmp_kernel_op_83 + tmp_kernel_op_110 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_101 * tmp_kernel_op_98 + tmp_kernel_op_51 * tmp_kernel_op_56 +
                      tmp_kernel_op_62 * tmp_kernel_op_65 + tmp_kernel_op_71 * tmp_kernel_op_74 +
                      tmp_kernel_op_80 * tmp_kernel_op_83 + tmp_kernel_op_89 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_113 =
                      tmp_kernel_op_101 * tmp_kernel_op_97 + tmp_kernel_op_50 * tmp_kernel_op_56 +
                      tmp_kernel_op_61 * tmp_kernel_op_65 + tmp_kernel_op_70 * tmp_kernel_op_74 +
                      tmp_kernel_op_79 * tmp_kernel_op_83 + tmp_kernel_op_88 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_101 * tmp_kernel_op_96 + tmp_kernel_op_49 * tmp_kernel_op_56 +
                      tmp_kernel_op_60 * tmp_kernel_op_65 + tmp_kernel_op_69 * tmp_kernel_op_74 +
                      tmp_kernel_op_78 * tmp_kernel_op_83 + tmp_kernel_op_87 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_101 * tmp_kernel_op_121 + tmp_kernel_op_116 * tmp_kernel_op_56 +
                      tmp_kernel_op_117 * tmp_kernel_op_65 + tmp_kernel_op_118 * tmp_kernel_op_74 +
                      tmp_kernel_op_119 * tmp_kernel_op_83 + tmp_kernel_op_120 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_51 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_62 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_71 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_80 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_89 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_98 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_101 * tmp_kernel_op_128 + tmp_kernel_op_123 * tmp_kernel_op_56 +
                      tmp_kernel_op_124 * tmp_kernel_op_65 + tmp_kernel_op_125 * tmp_kernel_op_74 +
                      tmp_kernel_op_126 * tmp_kernel_op_83 + tmp_kernel_op_127 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_61 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_70 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_79 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_88 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_97 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_101 * tmp_kernel_op_135 + tmp_kernel_op_130 * tmp_kernel_op_56 +
                      tmp_kernel_op_131 * tmp_kernel_op_65 + tmp_kernel_op_132 * tmp_kernel_op_74 +
                      tmp_kernel_op_133 * tmp_kernel_op_83 + tmp_kernel_op_134 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_55 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_64 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_73 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_91 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_47 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_58 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_67 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_76 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_85 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_100 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_103 * tmp_kernel_op_143 + tmp_kernel_op_104 * tmp_kernel_op_144 +
                      tmp_kernel_op_105 * tmp_kernel_op_145 + tmp_kernel_op_106 * tmp_kernel_op_146 +
                      tmp_kernel_op_107 * tmp_kernel_op_147 + tmp_kernel_op_108 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_110 * tmp_kernel_op_143 + tmp_kernel_op_110 * tmp_kernel_op_144 +
                      tmp_kernel_op_110 * tmp_kernel_op_145 + tmp_kernel_op_110 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_110 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_51 + tmp_kernel_op_144 * tmp_kernel_op_62 +
                      tmp_kernel_op_145 * tmp_kernel_op_71 + tmp_kernel_op_146 * tmp_kernel_op_80 +
                      tmp_kernel_op_147 * tmp_kernel_op_89 + tmp_kernel_op_148 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_61 +
                      tmp_kernel_op_145 * tmp_kernel_op_70 + tmp_kernel_op_146 * tmp_kernel_op_79 +
                      tmp_kernel_op_147 * tmp_kernel_op_88 + tmp_kernel_op_148 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_69 + tmp_kernel_op_146 * tmp_kernel_op_78 +
                      tmp_kernel_op_147 * tmp_kernel_op_87 + tmp_kernel_op_148 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_103 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_104 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_105 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_106 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_107 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_100 * tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_110 * tmp_kernel_op_157 + tmp_kernel_op_110 * tmp_kernel_op_158 +
                      tmp_kernel_op_110 * tmp_kernel_op_159 + tmp_kernel_op_110 * tmp_kernel_op_160 +
                      tmp_kernel_op_110 * tmp_kernel_op_161 + tmp_kernel_op_110 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_51 + tmp_kernel_op_158 * tmp_kernel_op_62 +
                      tmp_kernel_op_159 * tmp_kernel_op_71 + tmp_kernel_op_160 * tmp_kernel_op_80 +
                      tmp_kernel_op_161 * tmp_kernel_op_89 + tmp_kernel_op_162 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_61 +
                      tmp_kernel_op_159 * tmp_kernel_op_70 + tmp_kernel_op_160 * tmp_kernel_op_79 +
                      tmp_kernel_op_161 * tmp_kernel_op_88 + tmp_kernel_op_162 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_69 + tmp_kernel_op_160 * tmp_kernel_op_78 +
                      tmp_kernel_op_161 * tmp_kernel_op_87 + tmp_kernel_op_162 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_110 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_110 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_110 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_110 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_110 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_100 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_51 + tmp_kernel_op_172 * tmp_kernel_op_62 +
                      tmp_kernel_op_173 * tmp_kernel_op_71 + tmp_kernel_op_174 * tmp_kernel_op_80 +
                      tmp_kernel_op_175 * tmp_kernel_op_89 + tmp_kernel_op_176 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_61 +
                      tmp_kernel_op_173 * tmp_kernel_op_70 + tmp_kernel_op_174 * tmp_kernel_op_79 +
                      tmp_kernel_op_175 * tmp_kernel_op_88 + tmp_kernel_op_176 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_69 + tmp_kernel_op_174 * tmp_kernel_op_78 +
                      tmp_kernel_op_175 * tmp_kernel_op_87 + tmp_kernel_op_176 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_100 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_51 + tmp_kernel_op_198 * tmp_kernel_op_62 +
                      tmp_kernel_op_199 * tmp_kernel_op_71 + tmp_kernel_op_200 * tmp_kernel_op_80 +
                      tmp_kernel_op_201 * tmp_kernel_op_89 + tmp_kernel_op_202 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_100 * tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_51 + tmp_kernel_op_205 * tmp_kernel_op_62 +
                      tmp_kernel_op_206 * tmp_kernel_op_71 + tmp_kernel_op_207 * tmp_kernel_op_80 +
                      tmp_kernel_op_208 * tmp_kernel_op_89 + tmp_kernel_op_209 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_100 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_51 + tmp_kernel_op_212 * tmp_kernel_op_62 +
                      tmp_kernel_op_213 * tmp_kernel_op_71 + tmp_kernel_op_214 * tmp_kernel_op_80 +
                      tmp_kernel_op_215 * tmp_kernel_op_89 + tmp_kernel_op_216 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_61 +
                      tmp_kernel_op_199 * tmp_kernel_op_70 + tmp_kernel_op_200 * tmp_kernel_op_79 +
                      tmp_kernel_op_201 * tmp_kernel_op_88 + tmp_kernel_op_202 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_61 +
                      tmp_kernel_op_206 * tmp_kernel_op_70 + tmp_kernel_op_207 * tmp_kernel_op_79 +
                      tmp_kernel_op_208 * tmp_kernel_op_88 + tmp_kernel_op_209 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_61 +
                      tmp_kernel_op_213 * tmp_kernel_op_70 + tmp_kernel_op_214 * tmp_kernel_op_79 +
                      tmp_kernel_op_215 * tmp_kernel_op_88 + tmp_kernel_op_216 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_69 + tmp_kernel_op_200 * tmp_kernel_op_78 +
                      tmp_kernel_op_201 * tmp_kernel_op_87 + tmp_kernel_op_202 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_69 + tmp_kernel_op_207 * tmp_kernel_op_78 +
                      tmp_kernel_op_208 * tmp_kernel_op_87 + tmp_kernel_op_209 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_69 + tmp_kernel_op_214 * tmp_kernel_op_78 +
                      tmp_kernel_op_215 * tmp_kernel_op_87 + tmp_kernel_op_216 * tmp_kernel_op_96;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_102;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_109;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_111;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_112;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_113;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_114;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_122;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_129;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_136;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_102;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_149;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_150;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_151;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_152;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_153;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_154;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_155;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_156;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_109;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_149;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_163;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_164;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_165;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_166;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_167;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_168;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_169;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_111;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_150;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_163;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_177;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_178;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_179;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_180;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_181;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_182;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_112;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_151;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_164;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_177;
                  const walberla::float64 elMat_4_4 = tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_20 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_27 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_189;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_196;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_203;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_210;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_217;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_113;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_152;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_165;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_178;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_189;
                  const walberla::float64 elMat_5_5 = tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_19 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_218;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_219;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_220;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_221;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_114;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_153;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_166;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_179;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_196;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_218;
                  const walberla::float64 elMat_6_6 = tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                                      tmp_kernel_op_19 * tmp_kernel_op_192 +
                                                      tmp_kernel_op_193 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_222;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_223;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_224;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_122;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_154;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_167;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_180;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_203;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_219;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_222;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_226;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_227;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_129;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_155;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_168;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_181;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_210;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_220;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_223;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_226;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_136;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_156;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_169;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_182;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_217;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_221;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_224;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_227;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
      {
         /* CellType.BLUE_UP */
         const walberla::float64 tmp_coords_jac_0_BLUE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_6_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_3_0_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) +
             tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_3_1_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) +
             tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_3_2_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) +
             tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
         const walberla::float64 jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
         const walberla::float64 jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
         const walberla::float64 jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
         const walberla::float64 jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
         const walberla::float64 jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = pow(
                      abs( ( ( jac_affine_0_0_BLUE_UP * jac_affine_0_0_BLUE_UP ) +
                             ( jac_affine_1_0_BLUE_UP * jac_affine_1_0_BLUE_UP ) +
                             ( jac_affine_2_0_BLUE_UP * jac_affine_2_0_BLUE_UP ) ) *
                               ( ( jac_affine_0_1_BLUE_UP * jac_affine_0_1_BLUE_UP ) +
                                 ( jac_affine_1_1_BLUE_UP * jac_affine_1_1_BLUE_UP ) +
                                 ( jac_affine_2_1_BLUE_UP * jac_affine_2_1_BLUE_UP ) ) -
                           ( ( jac_affine_0_0_BLUE_UP * jac_affine_0_1_BLUE_UP + jac_affine_1_0_BLUE_UP * jac_affine_1_1_BLUE_UP +
                               jac_affine_2_0_BLUE_UP * jac_affine_2_1_BLUE_UP ) *
                             ( jac_affine_0_0_BLUE_UP * jac_affine_0_1_BLUE_UP + jac_affine_1_0_BLUE_UP * jac_affine_1_1_BLUE_UP +
                               jac_affine_2_0_BLUE_UP * jac_affine_2_1_BLUE_UP ) ) ),
                      0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_50 + tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_53 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_53 + 1.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_56 =
                      tmp_kernel_op_55 * ( tmp_kernel_op_46 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_52 +
                                           tmp_kernel_op_54 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_62 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_61 + tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_65 =
                      tmp_kernel_op_64 * ( tmp_kernel_op_54 + tmp_kernel_op_57 + tmp_kernel_op_59 + tmp_kernel_op_60 +
                                           tmp_kernel_op_63 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_66 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_70 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_71 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_72 = tmp_kernel_op_70 + tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_74 =
                      tmp_kernel_op_73 * ( tmp_kernel_op_54 + tmp_kernel_op_66 + tmp_kernel_op_68 + tmp_kernel_op_69 +
                                           tmp_kernel_op_72 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_76 = tmp_kernel_op_75 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_79 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_79 + tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_83 =
                      tmp_kernel_op_82 * ( tmp_kernel_op_54 + tmp_kernel_op_75 + tmp_kernel_op_77 + tmp_kernel_op_78 +
                                           tmp_kernel_op_81 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_84 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_87 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_89 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_92 =
                      tmp_kernel_op_91 * ( tmp_kernel_op_54 + tmp_kernel_op_84 + tmp_kernel_op_86 + tmp_kernel_op_87 +
                                           tmp_kernel_op_90 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_93  = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_94  = tmp_kernel_op_93 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_95  = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_96  = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_97  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_98  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_97 + tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_101 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_54 + tmp_kernel_op_93 + tmp_kernel_op_95 + tmp_kernel_op_96 +
                                            tmp_kernel_op_99 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_102 =
                      tmp_kernel_op_101 * tmp_kernel_op_94 + tmp_kernel_op_47 * tmp_kernel_op_56 +
                      tmp_kernel_op_58 * tmp_kernel_op_65 + tmp_kernel_op_67 * tmp_kernel_op_74 +
                      tmp_kernel_op_76 * tmp_kernel_op_83 + tmp_kernel_op_85 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_59 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_68 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_77 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_86 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_95 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_109 =
                      tmp_kernel_op_101 * tmp_kernel_op_108 + tmp_kernel_op_103 * tmp_kernel_op_56 +
                      tmp_kernel_op_104 * tmp_kernel_op_65 + tmp_kernel_op_105 * tmp_kernel_op_74 +
                      tmp_kernel_op_106 * tmp_kernel_op_83 + tmp_kernel_op_107 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_111 =
                      tmp_kernel_op_101 * tmp_kernel_op_110 + tmp_kernel_op_110 * tmp_kernel_op_56 +
                      tmp_kernel_op_110 * tmp_kernel_op_65 + tmp_kernel_op_110 * tmp_kernel_op_74 +
                      tmp_kernel_op_110 * tmp_kernel_op_83 + tmp_kernel_op_110 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_101 * tmp_kernel_op_98 + tmp_kernel_op_51 * tmp_kernel_op_56 +
                      tmp_kernel_op_62 * tmp_kernel_op_65 + tmp_kernel_op_71 * tmp_kernel_op_74 +
                      tmp_kernel_op_80 * tmp_kernel_op_83 + tmp_kernel_op_89 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_113 =
                      tmp_kernel_op_101 * tmp_kernel_op_97 + tmp_kernel_op_50 * tmp_kernel_op_56 +
                      tmp_kernel_op_61 * tmp_kernel_op_65 + tmp_kernel_op_70 * tmp_kernel_op_74 +
                      tmp_kernel_op_79 * tmp_kernel_op_83 + tmp_kernel_op_88 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_101 * tmp_kernel_op_96 + tmp_kernel_op_49 * tmp_kernel_op_56 +
                      tmp_kernel_op_60 * tmp_kernel_op_65 + tmp_kernel_op_69 * tmp_kernel_op_74 +
                      tmp_kernel_op_78 * tmp_kernel_op_83 + tmp_kernel_op_87 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_101 * tmp_kernel_op_121 + tmp_kernel_op_116 * tmp_kernel_op_56 +
                      tmp_kernel_op_117 * tmp_kernel_op_65 + tmp_kernel_op_118 * tmp_kernel_op_74 +
                      tmp_kernel_op_119 * tmp_kernel_op_83 + tmp_kernel_op_120 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_51 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_62 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_71 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_80 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_89 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_98 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_101 * tmp_kernel_op_128 + tmp_kernel_op_123 * tmp_kernel_op_56 +
                      tmp_kernel_op_124 * tmp_kernel_op_65 + tmp_kernel_op_125 * tmp_kernel_op_74 +
                      tmp_kernel_op_126 * tmp_kernel_op_83 + tmp_kernel_op_127 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_61 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_70 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_79 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_88 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_97 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_101 * tmp_kernel_op_135 + tmp_kernel_op_130 * tmp_kernel_op_56 +
                      tmp_kernel_op_131 * tmp_kernel_op_65 + tmp_kernel_op_132 * tmp_kernel_op_74 +
                      tmp_kernel_op_133 * tmp_kernel_op_83 + tmp_kernel_op_134 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_55 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_64 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_73 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_91 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_47 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_58 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_67 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_76 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_85 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_100 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_103 * tmp_kernel_op_143 + tmp_kernel_op_104 * tmp_kernel_op_144 +
                      tmp_kernel_op_105 * tmp_kernel_op_145 + tmp_kernel_op_106 * tmp_kernel_op_146 +
                      tmp_kernel_op_107 * tmp_kernel_op_147 + tmp_kernel_op_108 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_110 * tmp_kernel_op_143 + tmp_kernel_op_110 * tmp_kernel_op_144 +
                      tmp_kernel_op_110 * tmp_kernel_op_145 + tmp_kernel_op_110 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_110 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_51 + tmp_kernel_op_144 * tmp_kernel_op_62 +
                      tmp_kernel_op_145 * tmp_kernel_op_71 + tmp_kernel_op_146 * tmp_kernel_op_80 +
                      tmp_kernel_op_147 * tmp_kernel_op_89 + tmp_kernel_op_148 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_61 +
                      tmp_kernel_op_145 * tmp_kernel_op_70 + tmp_kernel_op_146 * tmp_kernel_op_79 +
                      tmp_kernel_op_147 * tmp_kernel_op_88 + tmp_kernel_op_148 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_69 + tmp_kernel_op_146 * tmp_kernel_op_78 +
                      tmp_kernel_op_147 * tmp_kernel_op_87 + tmp_kernel_op_148 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_103 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_104 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_105 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_106 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_107 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_100 * tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_110 * tmp_kernel_op_157 + tmp_kernel_op_110 * tmp_kernel_op_158 +
                      tmp_kernel_op_110 * tmp_kernel_op_159 + tmp_kernel_op_110 * tmp_kernel_op_160 +
                      tmp_kernel_op_110 * tmp_kernel_op_161 + tmp_kernel_op_110 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_51 + tmp_kernel_op_158 * tmp_kernel_op_62 +
                      tmp_kernel_op_159 * tmp_kernel_op_71 + tmp_kernel_op_160 * tmp_kernel_op_80 +
                      tmp_kernel_op_161 * tmp_kernel_op_89 + tmp_kernel_op_162 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_61 +
                      tmp_kernel_op_159 * tmp_kernel_op_70 + tmp_kernel_op_160 * tmp_kernel_op_79 +
                      tmp_kernel_op_161 * tmp_kernel_op_88 + tmp_kernel_op_162 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_69 + tmp_kernel_op_160 * tmp_kernel_op_78 +
                      tmp_kernel_op_161 * tmp_kernel_op_87 + tmp_kernel_op_162 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_110 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_110 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_110 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_110 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_110 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_100 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_51 + tmp_kernel_op_172 * tmp_kernel_op_62 +
                      tmp_kernel_op_173 * tmp_kernel_op_71 + tmp_kernel_op_174 * tmp_kernel_op_80 +
                      tmp_kernel_op_175 * tmp_kernel_op_89 + tmp_kernel_op_176 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_61 +
                      tmp_kernel_op_173 * tmp_kernel_op_70 + tmp_kernel_op_174 * tmp_kernel_op_79 +
                      tmp_kernel_op_175 * tmp_kernel_op_88 + tmp_kernel_op_176 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_69 + tmp_kernel_op_174 * tmp_kernel_op_78 +
                      tmp_kernel_op_175 * tmp_kernel_op_87 + tmp_kernel_op_176 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_100 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_51 + tmp_kernel_op_198 * tmp_kernel_op_62 +
                      tmp_kernel_op_199 * tmp_kernel_op_71 + tmp_kernel_op_200 * tmp_kernel_op_80 +
                      tmp_kernel_op_201 * tmp_kernel_op_89 + tmp_kernel_op_202 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_100 * tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_51 + tmp_kernel_op_205 * tmp_kernel_op_62 +
                      tmp_kernel_op_206 * tmp_kernel_op_71 + tmp_kernel_op_207 * tmp_kernel_op_80 +
                      tmp_kernel_op_208 * tmp_kernel_op_89 + tmp_kernel_op_209 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_100 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_51 + tmp_kernel_op_212 * tmp_kernel_op_62 +
                      tmp_kernel_op_213 * tmp_kernel_op_71 + tmp_kernel_op_214 * tmp_kernel_op_80 +
                      tmp_kernel_op_215 * tmp_kernel_op_89 + tmp_kernel_op_216 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_61 +
                      tmp_kernel_op_199 * tmp_kernel_op_70 + tmp_kernel_op_200 * tmp_kernel_op_79 +
                      tmp_kernel_op_201 * tmp_kernel_op_88 + tmp_kernel_op_202 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_61 +
                      tmp_kernel_op_206 * tmp_kernel_op_70 + tmp_kernel_op_207 * tmp_kernel_op_79 +
                      tmp_kernel_op_208 * tmp_kernel_op_88 + tmp_kernel_op_209 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_61 +
                      tmp_kernel_op_213 * tmp_kernel_op_70 + tmp_kernel_op_214 * tmp_kernel_op_79 +
                      tmp_kernel_op_215 * tmp_kernel_op_88 + tmp_kernel_op_216 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_69 + tmp_kernel_op_200 * tmp_kernel_op_78 +
                      tmp_kernel_op_201 * tmp_kernel_op_87 + tmp_kernel_op_202 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_69 + tmp_kernel_op_207 * tmp_kernel_op_78 +
                      tmp_kernel_op_208 * tmp_kernel_op_87 + tmp_kernel_op_209 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_69 + tmp_kernel_op_214 * tmp_kernel_op_78 +
                      tmp_kernel_op_215 * tmp_kernel_op_87 + tmp_kernel_op_216 * tmp_kernel_op_96;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_102;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_109;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_111;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_112;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_113;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_114;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_122;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_129;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_136;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_102;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_149;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_150;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_151;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_152;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_153;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_154;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_155;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_156;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_109;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_149;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_163;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_164;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_165;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_166;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_167;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_168;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_169;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_111;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_150;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_163;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_177;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_178;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_179;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_180;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_181;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_182;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_112;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_151;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_164;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_177;
                  const walberla::float64 elMat_4_4 = tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_20 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_27 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_189;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_196;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_203;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_210;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_217;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_113;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_152;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_165;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_178;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_189;
                  const walberla::float64 elMat_5_5 = tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_19 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_218;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_219;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_220;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_221;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_114;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_153;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_166;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_179;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_196;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_218;
                  const walberla::float64 elMat_6_6 = tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                                      tmp_kernel_op_19 * tmp_kernel_op_192 +
                                                      tmp_kernel_op_193 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_222;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_223;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_224;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_122;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_154;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_167;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_180;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_203;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_219;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_222;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_226;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_227;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_129;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_155;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_168;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_181;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_210;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_220;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_223;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_226;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_136;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_156;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_169;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_182;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_217;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_221;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_224;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_227;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
   }
}
void P2ElementwiseBoundaryMass::toMatrix_P2ElementwiseBoundaryMass_facet_id_1_macro_3D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_0comp2,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_1comp2,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    walberla::float64                    macro_vertex_coord_id_2comp2,
    walberla::float64                    macro_vertex_coord_id_3comp0,
    walberla::float64                    macro_vertex_coord_id_3comp1,
    walberla::float64                    macro_vertex_coord_id_3comp2,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_50 + tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_53 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_53 + 1.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_56 =
                      tmp_kernel_op_55 * ( tmp_kernel_op_46 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_52 +
                                           tmp_kernel_op_54 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_62 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_61 + tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_65 =
                      tmp_kernel_op_64 * ( tmp_kernel_op_54 + tmp_kernel_op_57 + tmp_kernel_op_59 + tmp_kernel_op_60 +
                                           tmp_kernel_op_63 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_66 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_70 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_71 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_72 = tmp_kernel_op_70 + tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_74 =
                      tmp_kernel_op_73 * ( tmp_kernel_op_54 + tmp_kernel_op_66 + tmp_kernel_op_68 + tmp_kernel_op_69 +
                                           tmp_kernel_op_72 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_76 = tmp_kernel_op_75 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_79 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_79 + tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_83 =
                      tmp_kernel_op_82 * ( tmp_kernel_op_54 + tmp_kernel_op_75 + tmp_kernel_op_77 + tmp_kernel_op_78 +
                                           tmp_kernel_op_81 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_84 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_87 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_89 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_92 =
                      tmp_kernel_op_91 * ( tmp_kernel_op_54 + tmp_kernel_op_84 + tmp_kernel_op_86 + tmp_kernel_op_87 +
                                           tmp_kernel_op_90 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_93  = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_94  = tmp_kernel_op_93 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_95  = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_96  = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_97  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_98  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_97 + tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_101 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_54 + tmp_kernel_op_93 + tmp_kernel_op_95 + tmp_kernel_op_96 +
                                            tmp_kernel_op_99 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_102 =
                      tmp_kernel_op_101 * tmp_kernel_op_94 + tmp_kernel_op_47 * tmp_kernel_op_56 +
                      tmp_kernel_op_58 * tmp_kernel_op_65 + tmp_kernel_op_67 * tmp_kernel_op_74 +
                      tmp_kernel_op_76 * tmp_kernel_op_83 + tmp_kernel_op_85 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_59 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_68 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_77 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_86 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_95 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_109 =
                      tmp_kernel_op_101 * tmp_kernel_op_108 + tmp_kernel_op_103 * tmp_kernel_op_56 +
                      tmp_kernel_op_104 * tmp_kernel_op_65 + tmp_kernel_op_105 * tmp_kernel_op_74 +
                      tmp_kernel_op_106 * tmp_kernel_op_83 + tmp_kernel_op_107 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_111 =
                      tmp_kernel_op_101 * tmp_kernel_op_110 + tmp_kernel_op_110 * tmp_kernel_op_56 +
                      tmp_kernel_op_110 * tmp_kernel_op_65 + tmp_kernel_op_110 * tmp_kernel_op_74 +
                      tmp_kernel_op_110 * tmp_kernel_op_83 + tmp_kernel_op_110 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_101 * tmp_kernel_op_98 + tmp_kernel_op_51 * tmp_kernel_op_56 +
                      tmp_kernel_op_62 * tmp_kernel_op_65 + tmp_kernel_op_71 * tmp_kernel_op_74 +
                      tmp_kernel_op_80 * tmp_kernel_op_83 + tmp_kernel_op_89 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_113 =
                      tmp_kernel_op_101 * tmp_kernel_op_97 + tmp_kernel_op_50 * tmp_kernel_op_56 +
                      tmp_kernel_op_61 * tmp_kernel_op_65 + tmp_kernel_op_70 * tmp_kernel_op_74 +
                      tmp_kernel_op_79 * tmp_kernel_op_83 + tmp_kernel_op_88 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_101 * tmp_kernel_op_96 + tmp_kernel_op_49 * tmp_kernel_op_56 +
                      tmp_kernel_op_60 * tmp_kernel_op_65 + tmp_kernel_op_69 * tmp_kernel_op_74 +
                      tmp_kernel_op_78 * tmp_kernel_op_83 + tmp_kernel_op_87 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_101 * tmp_kernel_op_121 + tmp_kernel_op_116 * tmp_kernel_op_56 +
                      tmp_kernel_op_117 * tmp_kernel_op_65 + tmp_kernel_op_118 * tmp_kernel_op_74 +
                      tmp_kernel_op_119 * tmp_kernel_op_83 + tmp_kernel_op_120 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_51 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_62 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_71 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_80 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_89 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_98 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_101 * tmp_kernel_op_128 + tmp_kernel_op_123 * tmp_kernel_op_56 +
                      tmp_kernel_op_124 * tmp_kernel_op_65 + tmp_kernel_op_125 * tmp_kernel_op_74 +
                      tmp_kernel_op_126 * tmp_kernel_op_83 + tmp_kernel_op_127 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_61 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_70 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_79 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_88 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_97 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_101 * tmp_kernel_op_135 + tmp_kernel_op_130 * tmp_kernel_op_56 +
                      tmp_kernel_op_131 * tmp_kernel_op_65 + tmp_kernel_op_132 * tmp_kernel_op_74 +
                      tmp_kernel_op_133 * tmp_kernel_op_83 + tmp_kernel_op_134 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_55 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_64 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_73 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_91 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_47 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_58 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_67 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_76 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_85 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_100 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_103 * tmp_kernel_op_143 + tmp_kernel_op_104 * tmp_kernel_op_144 +
                      tmp_kernel_op_105 * tmp_kernel_op_145 + tmp_kernel_op_106 * tmp_kernel_op_146 +
                      tmp_kernel_op_107 * tmp_kernel_op_147 + tmp_kernel_op_108 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_110 * tmp_kernel_op_143 + tmp_kernel_op_110 * tmp_kernel_op_144 +
                      tmp_kernel_op_110 * tmp_kernel_op_145 + tmp_kernel_op_110 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_110 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_51 + tmp_kernel_op_144 * tmp_kernel_op_62 +
                      tmp_kernel_op_145 * tmp_kernel_op_71 + tmp_kernel_op_146 * tmp_kernel_op_80 +
                      tmp_kernel_op_147 * tmp_kernel_op_89 + tmp_kernel_op_148 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_61 +
                      tmp_kernel_op_145 * tmp_kernel_op_70 + tmp_kernel_op_146 * tmp_kernel_op_79 +
                      tmp_kernel_op_147 * tmp_kernel_op_88 + tmp_kernel_op_148 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_69 + tmp_kernel_op_146 * tmp_kernel_op_78 +
                      tmp_kernel_op_147 * tmp_kernel_op_87 + tmp_kernel_op_148 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_103 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_104 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_105 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_106 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_107 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_100 * tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_110 * tmp_kernel_op_157 + tmp_kernel_op_110 * tmp_kernel_op_158 +
                      tmp_kernel_op_110 * tmp_kernel_op_159 + tmp_kernel_op_110 * tmp_kernel_op_160 +
                      tmp_kernel_op_110 * tmp_kernel_op_161 + tmp_kernel_op_110 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_51 + tmp_kernel_op_158 * tmp_kernel_op_62 +
                      tmp_kernel_op_159 * tmp_kernel_op_71 + tmp_kernel_op_160 * tmp_kernel_op_80 +
                      tmp_kernel_op_161 * tmp_kernel_op_89 + tmp_kernel_op_162 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_61 +
                      tmp_kernel_op_159 * tmp_kernel_op_70 + tmp_kernel_op_160 * tmp_kernel_op_79 +
                      tmp_kernel_op_161 * tmp_kernel_op_88 + tmp_kernel_op_162 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_69 + tmp_kernel_op_160 * tmp_kernel_op_78 +
                      tmp_kernel_op_161 * tmp_kernel_op_87 + tmp_kernel_op_162 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_110 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_110 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_110 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_110 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_110 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_100 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_51 + tmp_kernel_op_172 * tmp_kernel_op_62 +
                      tmp_kernel_op_173 * tmp_kernel_op_71 + tmp_kernel_op_174 * tmp_kernel_op_80 +
                      tmp_kernel_op_175 * tmp_kernel_op_89 + tmp_kernel_op_176 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_61 +
                      tmp_kernel_op_173 * tmp_kernel_op_70 + tmp_kernel_op_174 * tmp_kernel_op_79 +
                      tmp_kernel_op_175 * tmp_kernel_op_88 + tmp_kernel_op_176 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_69 + tmp_kernel_op_174 * tmp_kernel_op_78 +
                      tmp_kernel_op_175 * tmp_kernel_op_87 + tmp_kernel_op_176 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_100 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_51 + tmp_kernel_op_198 * tmp_kernel_op_62 +
                      tmp_kernel_op_199 * tmp_kernel_op_71 + tmp_kernel_op_200 * tmp_kernel_op_80 +
                      tmp_kernel_op_201 * tmp_kernel_op_89 + tmp_kernel_op_202 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_100 * tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_51 + tmp_kernel_op_205 * tmp_kernel_op_62 +
                      tmp_kernel_op_206 * tmp_kernel_op_71 + tmp_kernel_op_207 * tmp_kernel_op_80 +
                      tmp_kernel_op_208 * tmp_kernel_op_89 + tmp_kernel_op_209 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_100 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_51 + tmp_kernel_op_212 * tmp_kernel_op_62 +
                      tmp_kernel_op_213 * tmp_kernel_op_71 + tmp_kernel_op_214 * tmp_kernel_op_80 +
                      tmp_kernel_op_215 * tmp_kernel_op_89 + tmp_kernel_op_216 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_61 +
                      tmp_kernel_op_199 * tmp_kernel_op_70 + tmp_kernel_op_200 * tmp_kernel_op_79 +
                      tmp_kernel_op_201 * tmp_kernel_op_88 + tmp_kernel_op_202 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_61 +
                      tmp_kernel_op_206 * tmp_kernel_op_70 + tmp_kernel_op_207 * tmp_kernel_op_79 +
                      tmp_kernel_op_208 * tmp_kernel_op_88 + tmp_kernel_op_209 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_61 +
                      tmp_kernel_op_213 * tmp_kernel_op_70 + tmp_kernel_op_214 * tmp_kernel_op_79 +
                      tmp_kernel_op_215 * tmp_kernel_op_88 + tmp_kernel_op_216 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_69 + tmp_kernel_op_200 * tmp_kernel_op_78 +
                      tmp_kernel_op_201 * tmp_kernel_op_87 + tmp_kernel_op_202 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_69 + tmp_kernel_op_207 * tmp_kernel_op_78 +
                      tmp_kernel_op_208 * tmp_kernel_op_87 + tmp_kernel_op_209 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_69 + tmp_kernel_op_214 * tmp_kernel_op_78 +
                      tmp_kernel_op_215 * tmp_kernel_op_87 + tmp_kernel_op_216 * tmp_kernel_op_96;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_102;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_109;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_111;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_112;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_113;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_114;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_122;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_129;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_136;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_102;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_149;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_150;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_151;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_152;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_153;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_154;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_155;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_156;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_109;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_149;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_163;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_164;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_165;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_166;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_167;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_168;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_169;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_111;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_150;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_163;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_177;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_178;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_179;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_180;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_181;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_182;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_112;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_151;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_164;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_177;
                  const walberla::float64 elMat_4_4 = tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_20 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_27 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_189;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_196;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_203;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_210;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_217;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_113;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_152;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_165;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_178;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_189;
                  const walberla::float64 elMat_5_5 = tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_19 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_218;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_219;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_220;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_221;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_114;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_153;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_166;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_179;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_196;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_218;
                  const walberla::float64 elMat_6_6 = tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                                      tmp_kernel_op_19 * tmp_kernel_op_192 +
                                                      tmp_kernel_op_193 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_222;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_223;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_224;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_122;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_154;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_167;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_180;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_203;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_219;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_222;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_226;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_227;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_129;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_155;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_168;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_181;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_210;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_220;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_223;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_226;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_136;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_156;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_169;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_182;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_217;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_221;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_224;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_227;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
      {
         /* CellType.GREEN_UP */
         const walberla::float64 tmp_coords_jac_0_GREEN_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_6_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
         const walberla::float64 p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
         const walberla::float64 p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
         const walberla::float64 p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_2_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_2_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_2_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_3_0_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
         const walberla::float64 jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
         const walberla::float64 jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
         const walberla::float64 jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
         const walberla::float64 jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
         const walberla::float64 jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_GREEN_UP * jac_affine_0_0_GREEN_UP ) +
                                  ( jac_affine_1_0_GREEN_UP * jac_affine_1_0_GREEN_UP ) +
                                  ( jac_affine_2_0_GREEN_UP * jac_affine_2_0_GREEN_UP ) ) *
                                    ( ( jac_affine_0_1_GREEN_UP * jac_affine_0_1_GREEN_UP ) +
                                      ( jac_affine_1_1_GREEN_UP * jac_affine_1_1_GREEN_UP ) +
                                      ( jac_affine_2_1_GREEN_UP * jac_affine_2_1_GREEN_UP ) ) -
                                ( ( jac_affine_0_0_GREEN_UP * jac_affine_0_1_GREEN_UP +
                                    jac_affine_1_0_GREEN_UP * jac_affine_1_1_GREEN_UP +
                                    jac_affine_2_0_GREEN_UP * jac_affine_2_1_GREEN_UP ) *
                                  ( jac_affine_0_0_GREEN_UP * jac_affine_0_1_GREEN_UP +
                                    jac_affine_1_0_GREEN_UP * jac_affine_1_1_GREEN_UP +
                                    jac_affine_2_0_GREEN_UP * jac_affine_2_1_GREEN_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_50 + tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_53 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_53 + 1.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_56 =
                      tmp_kernel_op_55 * ( tmp_kernel_op_46 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_52 +
                                           tmp_kernel_op_54 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_62 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_61 + tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_65 =
                      tmp_kernel_op_64 * ( tmp_kernel_op_54 + tmp_kernel_op_57 + tmp_kernel_op_59 + tmp_kernel_op_60 +
                                           tmp_kernel_op_63 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_66 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_70 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_71 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_72 = tmp_kernel_op_70 + tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_74 =
                      tmp_kernel_op_73 * ( tmp_kernel_op_54 + tmp_kernel_op_66 + tmp_kernel_op_68 + tmp_kernel_op_69 +
                                           tmp_kernel_op_72 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_76 = tmp_kernel_op_75 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_79 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_79 + tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_83 =
                      tmp_kernel_op_82 * ( tmp_kernel_op_54 + tmp_kernel_op_75 + tmp_kernel_op_77 + tmp_kernel_op_78 +
                                           tmp_kernel_op_81 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_84 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_87 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_89 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_92 =
                      tmp_kernel_op_91 * ( tmp_kernel_op_54 + tmp_kernel_op_84 + tmp_kernel_op_86 + tmp_kernel_op_87 +
                                           tmp_kernel_op_90 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_93  = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_94  = tmp_kernel_op_93 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_95  = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_96  = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_97  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_98  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_97 + tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_101 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_54 + tmp_kernel_op_93 + tmp_kernel_op_95 + tmp_kernel_op_96 +
                                            tmp_kernel_op_99 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_102 =
                      tmp_kernel_op_101 * tmp_kernel_op_94 + tmp_kernel_op_47 * tmp_kernel_op_56 +
                      tmp_kernel_op_58 * tmp_kernel_op_65 + tmp_kernel_op_67 * tmp_kernel_op_74 +
                      tmp_kernel_op_76 * tmp_kernel_op_83 + tmp_kernel_op_85 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_59 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_68 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_77 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_86 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_95 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_109 =
                      tmp_kernel_op_101 * tmp_kernel_op_108 + tmp_kernel_op_103 * tmp_kernel_op_56 +
                      tmp_kernel_op_104 * tmp_kernel_op_65 + tmp_kernel_op_105 * tmp_kernel_op_74 +
                      tmp_kernel_op_106 * tmp_kernel_op_83 + tmp_kernel_op_107 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_111 =
                      tmp_kernel_op_101 * tmp_kernel_op_110 + tmp_kernel_op_110 * tmp_kernel_op_56 +
                      tmp_kernel_op_110 * tmp_kernel_op_65 + tmp_kernel_op_110 * tmp_kernel_op_74 +
                      tmp_kernel_op_110 * tmp_kernel_op_83 + tmp_kernel_op_110 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_101 * tmp_kernel_op_98 + tmp_kernel_op_51 * tmp_kernel_op_56 +
                      tmp_kernel_op_62 * tmp_kernel_op_65 + tmp_kernel_op_71 * tmp_kernel_op_74 +
                      tmp_kernel_op_80 * tmp_kernel_op_83 + tmp_kernel_op_89 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_113 =
                      tmp_kernel_op_101 * tmp_kernel_op_97 + tmp_kernel_op_50 * tmp_kernel_op_56 +
                      tmp_kernel_op_61 * tmp_kernel_op_65 + tmp_kernel_op_70 * tmp_kernel_op_74 +
                      tmp_kernel_op_79 * tmp_kernel_op_83 + tmp_kernel_op_88 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_101 * tmp_kernel_op_96 + tmp_kernel_op_49 * tmp_kernel_op_56 +
                      tmp_kernel_op_60 * tmp_kernel_op_65 + tmp_kernel_op_69 * tmp_kernel_op_74 +
                      tmp_kernel_op_78 * tmp_kernel_op_83 + tmp_kernel_op_87 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_101 * tmp_kernel_op_121 + tmp_kernel_op_116 * tmp_kernel_op_56 +
                      tmp_kernel_op_117 * tmp_kernel_op_65 + tmp_kernel_op_118 * tmp_kernel_op_74 +
                      tmp_kernel_op_119 * tmp_kernel_op_83 + tmp_kernel_op_120 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_51 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_62 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_71 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_80 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_89 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_98 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_101 * tmp_kernel_op_128 + tmp_kernel_op_123 * tmp_kernel_op_56 +
                      tmp_kernel_op_124 * tmp_kernel_op_65 + tmp_kernel_op_125 * tmp_kernel_op_74 +
                      tmp_kernel_op_126 * tmp_kernel_op_83 + tmp_kernel_op_127 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_61 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_70 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_79 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_88 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_97 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_101 * tmp_kernel_op_135 + tmp_kernel_op_130 * tmp_kernel_op_56 +
                      tmp_kernel_op_131 * tmp_kernel_op_65 + tmp_kernel_op_132 * tmp_kernel_op_74 +
                      tmp_kernel_op_133 * tmp_kernel_op_83 + tmp_kernel_op_134 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_55 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_64 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_73 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_91 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_47 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_58 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_67 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_76 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_85 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_100 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_103 * tmp_kernel_op_143 + tmp_kernel_op_104 * tmp_kernel_op_144 +
                      tmp_kernel_op_105 * tmp_kernel_op_145 + tmp_kernel_op_106 * tmp_kernel_op_146 +
                      tmp_kernel_op_107 * tmp_kernel_op_147 + tmp_kernel_op_108 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_110 * tmp_kernel_op_143 + tmp_kernel_op_110 * tmp_kernel_op_144 +
                      tmp_kernel_op_110 * tmp_kernel_op_145 + tmp_kernel_op_110 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_110 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_51 + tmp_kernel_op_144 * tmp_kernel_op_62 +
                      tmp_kernel_op_145 * tmp_kernel_op_71 + tmp_kernel_op_146 * tmp_kernel_op_80 +
                      tmp_kernel_op_147 * tmp_kernel_op_89 + tmp_kernel_op_148 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_61 +
                      tmp_kernel_op_145 * tmp_kernel_op_70 + tmp_kernel_op_146 * tmp_kernel_op_79 +
                      tmp_kernel_op_147 * tmp_kernel_op_88 + tmp_kernel_op_148 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_69 + tmp_kernel_op_146 * tmp_kernel_op_78 +
                      tmp_kernel_op_147 * tmp_kernel_op_87 + tmp_kernel_op_148 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_103 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_104 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_105 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_106 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_107 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_100 * tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_110 * tmp_kernel_op_157 + tmp_kernel_op_110 * tmp_kernel_op_158 +
                      tmp_kernel_op_110 * tmp_kernel_op_159 + tmp_kernel_op_110 * tmp_kernel_op_160 +
                      tmp_kernel_op_110 * tmp_kernel_op_161 + tmp_kernel_op_110 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_51 + tmp_kernel_op_158 * tmp_kernel_op_62 +
                      tmp_kernel_op_159 * tmp_kernel_op_71 + tmp_kernel_op_160 * tmp_kernel_op_80 +
                      tmp_kernel_op_161 * tmp_kernel_op_89 + tmp_kernel_op_162 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_61 +
                      tmp_kernel_op_159 * tmp_kernel_op_70 + tmp_kernel_op_160 * tmp_kernel_op_79 +
                      tmp_kernel_op_161 * tmp_kernel_op_88 + tmp_kernel_op_162 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_69 + tmp_kernel_op_160 * tmp_kernel_op_78 +
                      tmp_kernel_op_161 * tmp_kernel_op_87 + tmp_kernel_op_162 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_110 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_110 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_110 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_110 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_110 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_100 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_51 + tmp_kernel_op_172 * tmp_kernel_op_62 +
                      tmp_kernel_op_173 * tmp_kernel_op_71 + tmp_kernel_op_174 * tmp_kernel_op_80 +
                      tmp_kernel_op_175 * tmp_kernel_op_89 + tmp_kernel_op_176 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_61 +
                      tmp_kernel_op_173 * tmp_kernel_op_70 + tmp_kernel_op_174 * tmp_kernel_op_79 +
                      tmp_kernel_op_175 * tmp_kernel_op_88 + tmp_kernel_op_176 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_69 + tmp_kernel_op_174 * tmp_kernel_op_78 +
                      tmp_kernel_op_175 * tmp_kernel_op_87 + tmp_kernel_op_176 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_100 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_51 + tmp_kernel_op_198 * tmp_kernel_op_62 +
                      tmp_kernel_op_199 * tmp_kernel_op_71 + tmp_kernel_op_200 * tmp_kernel_op_80 +
                      tmp_kernel_op_201 * tmp_kernel_op_89 + tmp_kernel_op_202 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_100 * tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_51 + tmp_kernel_op_205 * tmp_kernel_op_62 +
                      tmp_kernel_op_206 * tmp_kernel_op_71 + tmp_kernel_op_207 * tmp_kernel_op_80 +
                      tmp_kernel_op_208 * tmp_kernel_op_89 + tmp_kernel_op_209 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_100 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_51 + tmp_kernel_op_212 * tmp_kernel_op_62 +
                      tmp_kernel_op_213 * tmp_kernel_op_71 + tmp_kernel_op_214 * tmp_kernel_op_80 +
                      tmp_kernel_op_215 * tmp_kernel_op_89 + tmp_kernel_op_216 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_61 +
                      tmp_kernel_op_199 * tmp_kernel_op_70 + tmp_kernel_op_200 * tmp_kernel_op_79 +
                      tmp_kernel_op_201 * tmp_kernel_op_88 + tmp_kernel_op_202 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_61 +
                      tmp_kernel_op_206 * tmp_kernel_op_70 + tmp_kernel_op_207 * tmp_kernel_op_79 +
                      tmp_kernel_op_208 * tmp_kernel_op_88 + tmp_kernel_op_209 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_61 +
                      tmp_kernel_op_213 * tmp_kernel_op_70 + tmp_kernel_op_214 * tmp_kernel_op_79 +
                      tmp_kernel_op_215 * tmp_kernel_op_88 + tmp_kernel_op_216 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_69 + tmp_kernel_op_200 * tmp_kernel_op_78 +
                      tmp_kernel_op_201 * tmp_kernel_op_87 + tmp_kernel_op_202 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_69 + tmp_kernel_op_207 * tmp_kernel_op_78 +
                      tmp_kernel_op_208 * tmp_kernel_op_87 + tmp_kernel_op_209 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_69 + tmp_kernel_op_214 * tmp_kernel_op_78 +
                      tmp_kernel_op_215 * tmp_kernel_op_87 + tmp_kernel_op_216 * tmp_kernel_op_96;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_102;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_109;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_111;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_112;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_113;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_114;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_122;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_129;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_136;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_102;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_149;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_150;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_151;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_152;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_153;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_154;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_155;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_156;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_109;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_149;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_163;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_164;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_165;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_166;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_167;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_168;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_169;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_111;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_150;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_163;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_177;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_178;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_179;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_180;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_181;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_182;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_112;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_151;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_164;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_177;
                  const walberla::float64 elMat_4_4 = tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_20 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_27 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_189;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_196;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_203;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_210;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_217;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_113;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_152;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_165;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_178;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_189;
                  const walberla::float64 elMat_5_5 = tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_19 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_218;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_219;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_220;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_221;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_114;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_153;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_166;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_179;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_196;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_218;
                  const walberla::float64 elMat_6_6 = tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                                      tmp_kernel_op_19 * tmp_kernel_op_192 +
                                                      tmp_kernel_op_193 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_222;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_223;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_224;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_122;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_154;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_167;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_180;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_203;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_219;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_222;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_226;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_227;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_129;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_155;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_168;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_181;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_210;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_220;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_223;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_226;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_136;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_156;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_169;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_182;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_217;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_221;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_224;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_227;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
   }
}
void P2ElementwiseBoundaryMass::toMatrix_P2ElementwiseBoundaryMass_facet_id_2_macro_3D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_0comp2,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_1comp2,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    walberla::float64                    macro_vertex_coord_id_2comp2,
    walberla::float64                    macro_vertex_coord_id_3comp0,
    walberla::float64                    macro_vertex_coord_id_3comp1,
    walberla::float64                    macro_vertex_coord_id_3comp2,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_50 + tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_53 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_53 + 1.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_56 =
                      tmp_kernel_op_55 * ( tmp_kernel_op_46 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_52 +
                                           tmp_kernel_op_54 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_62 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_61 + tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_65 =
                      tmp_kernel_op_64 * ( tmp_kernel_op_54 + tmp_kernel_op_57 + tmp_kernel_op_59 + tmp_kernel_op_60 +
                                           tmp_kernel_op_63 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_66 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_70 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_71 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_72 = tmp_kernel_op_70 + tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_74 =
                      tmp_kernel_op_73 * ( tmp_kernel_op_54 + tmp_kernel_op_66 + tmp_kernel_op_68 + tmp_kernel_op_69 +
                                           tmp_kernel_op_72 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_76 = tmp_kernel_op_75 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_79 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_79 + tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_83 =
                      tmp_kernel_op_82 * ( tmp_kernel_op_54 + tmp_kernel_op_75 + tmp_kernel_op_77 + tmp_kernel_op_78 +
                                           tmp_kernel_op_81 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_84 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_87 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_89 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_92 =
                      tmp_kernel_op_91 * ( tmp_kernel_op_54 + tmp_kernel_op_84 + tmp_kernel_op_86 + tmp_kernel_op_87 +
                                           tmp_kernel_op_90 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_93  = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_94  = tmp_kernel_op_93 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_95  = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_96  = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_97  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_98  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_97 + tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_101 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_54 + tmp_kernel_op_93 + tmp_kernel_op_95 + tmp_kernel_op_96 +
                                            tmp_kernel_op_99 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_102 =
                      tmp_kernel_op_101 * tmp_kernel_op_94 + tmp_kernel_op_47 * tmp_kernel_op_56 +
                      tmp_kernel_op_58 * tmp_kernel_op_65 + tmp_kernel_op_67 * tmp_kernel_op_74 +
                      tmp_kernel_op_76 * tmp_kernel_op_83 + tmp_kernel_op_85 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_59 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_68 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_77 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_86 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_95 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_109 =
                      tmp_kernel_op_101 * tmp_kernel_op_108 + tmp_kernel_op_103 * tmp_kernel_op_56 +
                      tmp_kernel_op_104 * tmp_kernel_op_65 + tmp_kernel_op_105 * tmp_kernel_op_74 +
                      tmp_kernel_op_106 * tmp_kernel_op_83 + tmp_kernel_op_107 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_111 =
                      tmp_kernel_op_101 * tmp_kernel_op_110 + tmp_kernel_op_110 * tmp_kernel_op_56 +
                      tmp_kernel_op_110 * tmp_kernel_op_65 + tmp_kernel_op_110 * tmp_kernel_op_74 +
                      tmp_kernel_op_110 * tmp_kernel_op_83 + tmp_kernel_op_110 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_101 * tmp_kernel_op_98 + tmp_kernel_op_51 * tmp_kernel_op_56 +
                      tmp_kernel_op_62 * tmp_kernel_op_65 + tmp_kernel_op_71 * tmp_kernel_op_74 +
                      tmp_kernel_op_80 * tmp_kernel_op_83 + tmp_kernel_op_89 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_113 =
                      tmp_kernel_op_101 * tmp_kernel_op_97 + tmp_kernel_op_50 * tmp_kernel_op_56 +
                      tmp_kernel_op_61 * tmp_kernel_op_65 + tmp_kernel_op_70 * tmp_kernel_op_74 +
                      tmp_kernel_op_79 * tmp_kernel_op_83 + tmp_kernel_op_88 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_101 * tmp_kernel_op_96 + tmp_kernel_op_49 * tmp_kernel_op_56 +
                      tmp_kernel_op_60 * tmp_kernel_op_65 + tmp_kernel_op_69 * tmp_kernel_op_74 +
                      tmp_kernel_op_78 * tmp_kernel_op_83 + tmp_kernel_op_87 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_101 * tmp_kernel_op_121 + tmp_kernel_op_116 * tmp_kernel_op_56 +
                      tmp_kernel_op_117 * tmp_kernel_op_65 + tmp_kernel_op_118 * tmp_kernel_op_74 +
                      tmp_kernel_op_119 * tmp_kernel_op_83 + tmp_kernel_op_120 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_51 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_62 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_71 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_80 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_89 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_98 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_101 * tmp_kernel_op_128 + tmp_kernel_op_123 * tmp_kernel_op_56 +
                      tmp_kernel_op_124 * tmp_kernel_op_65 + tmp_kernel_op_125 * tmp_kernel_op_74 +
                      tmp_kernel_op_126 * tmp_kernel_op_83 + tmp_kernel_op_127 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_61 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_70 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_79 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_88 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_97 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_101 * tmp_kernel_op_135 + tmp_kernel_op_130 * tmp_kernel_op_56 +
                      tmp_kernel_op_131 * tmp_kernel_op_65 + tmp_kernel_op_132 * tmp_kernel_op_74 +
                      tmp_kernel_op_133 * tmp_kernel_op_83 + tmp_kernel_op_134 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_55 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_64 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_73 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_91 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_47 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_58 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_67 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_76 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_85 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_100 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_103 * tmp_kernel_op_143 + tmp_kernel_op_104 * tmp_kernel_op_144 +
                      tmp_kernel_op_105 * tmp_kernel_op_145 + tmp_kernel_op_106 * tmp_kernel_op_146 +
                      tmp_kernel_op_107 * tmp_kernel_op_147 + tmp_kernel_op_108 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_110 * tmp_kernel_op_143 + tmp_kernel_op_110 * tmp_kernel_op_144 +
                      tmp_kernel_op_110 * tmp_kernel_op_145 + tmp_kernel_op_110 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_110 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_51 + tmp_kernel_op_144 * tmp_kernel_op_62 +
                      tmp_kernel_op_145 * tmp_kernel_op_71 + tmp_kernel_op_146 * tmp_kernel_op_80 +
                      tmp_kernel_op_147 * tmp_kernel_op_89 + tmp_kernel_op_148 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_61 +
                      tmp_kernel_op_145 * tmp_kernel_op_70 + tmp_kernel_op_146 * tmp_kernel_op_79 +
                      tmp_kernel_op_147 * tmp_kernel_op_88 + tmp_kernel_op_148 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_69 + tmp_kernel_op_146 * tmp_kernel_op_78 +
                      tmp_kernel_op_147 * tmp_kernel_op_87 + tmp_kernel_op_148 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_103 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_104 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_105 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_106 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_107 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_100 * tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_110 * tmp_kernel_op_157 + tmp_kernel_op_110 * tmp_kernel_op_158 +
                      tmp_kernel_op_110 * tmp_kernel_op_159 + tmp_kernel_op_110 * tmp_kernel_op_160 +
                      tmp_kernel_op_110 * tmp_kernel_op_161 + tmp_kernel_op_110 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_51 + tmp_kernel_op_158 * tmp_kernel_op_62 +
                      tmp_kernel_op_159 * tmp_kernel_op_71 + tmp_kernel_op_160 * tmp_kernel_op_80 +
                      tmp_kernel_op_161 * tmp_kernel_op_89 + tmp_kernel_op_162 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_61 +
                      tmp_kernel_op_159 * tmp_kernel_op_70 + tmp_kernel_op_160 * tmp_kernel_op_79 +
                      tmp_kernel_op_161 * tmp_kernel_op_88 + tmp_kernel_op_162 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_69 + tmp_kernel_op_160 * tmp_kernel_op_78 +
                      tmp_kernel_op_161 * tmp_kernel_op_87 + tmp_kernel_op_162 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_110 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_110 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_110 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_110 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_110 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_100 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_51 + tmp_kernel_op_172 * tmp_kernel_op_62 +
                      tmp_kernel_op_173 * tmp_kernel_op_71 + tmp_kernel_op_174 * tmp_kernel_op_80 +
                      tmp_kernel_op_175 * tmp_kernel_op_89 + tmp_kernel_op_176 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_61 +
                      tmp_kernel_op_173 * tmp_kernel_op_70 + tmp_kernel_op_174 * tmp_kernel_op_79 +
                      tmp_kernel_op_175 * tmp_kernel_op_88 + tmp_kernel_op_176 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_69 + tmp_kernel_op_174 * tmp_kernel_op_78 +
                      tmp_kernel_op_175 * tmp_kernel_op_87 + tmp_kernel_op_176 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_100 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_51 + tmp_kernel_op_198 * tmp_kernel_op_62 +
                      tmp_kernel_op_199 * tmp_kernel_op_71 + tmp_kernel_op_200 * tmp_kernel_op_80 +
                      tmp_kernel_op_201 * tmp_kernel_op_89 + tmp_kernel_op_202 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_100 * tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_51 + tmp_kernel_op_205 * tmp_kernel_op_62 +
                      tmp_kernel_op_206 * tmp_kernel_op_71 + tmp_kernel_op_207 * tmp_kernel_op_80 +
                      tmp_kernel_op_208 * tmp_kernel_op_89 + tmp_kernel_op_209 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_100 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_51 + tmp_kernel_op_212 * tmp_kernel_op_62 +
                      tmp_kernel_op_213 * tmp_kernel_op_71 + tmp_kernel_op_214 * tmp_kernel_op_80 +
                      tmp_kernel_op_215 * tmp_kernel_op_89 + tmp_kernel_op_216 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_61 +
                      tmp_kernel_op_199 * tmp_kernel_op_70 + tmp_kernel_op_200 * tmp_kernel_op_79 +
                      tmp_kernel_op_201 * tmp_kernel_op_88 + tmp_kernel_op_202 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_61 +
                      tmp_kernel_op_206 * tmp_kernel_op_70 + tmp_kernel_op_207 * tmp_kernel_op_79 +
                      tmp_kernel_op_208 * tmp_kernel_op_88 + tmp_kernel_op_209 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_61 +
                      tmp_kernel_op_213 * tmp_kernel_op_70 + tmp_kernel_op_214 * tmp_kernel_op_79 +
                      tmp_kernel_op_215 * tmp_kernel_op_88 + tmp_kernel_op_216 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_69 + tmp_kernel_op_200 * tmp_kernel_op_78 +
                      tmp_kernel_op_201 * tmp_kernel_op_87 + tmp_kernel_op_202 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_69 + tmp_kernel_op_207 * tmp_kernel_op_78 +
                      tmp_kernel_op_208 * tmp_kernel_op_87 + tmp_kernel_op_209 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_69 + tmp_kernel_op_214 * tmp_kernel_op_78 +
                      tmp_kernel_op_215 * tmp_kernel_op_87 + tmp_kernel_op_216 * tmp_kernel_op_96;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_102;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_109;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_111;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_112;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_113;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_114;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_122;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_129;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_136;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_102;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_149;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_150;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_151;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_152;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_153;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_154;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_155;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_156;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_109;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_149;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_163;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_164;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_165;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_166;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_167;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_168;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_169;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_111;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_150;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_163;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_177;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_178;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_179;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_180;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_181;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_182;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_112;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_151;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_164;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_177;
                  const walberla::float64 elMat_4_4 = tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_20 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_27 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_189;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_196;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_203;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_210;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_217;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_113;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_152;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_165;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_178;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_189;
                  const walberla::float64 elMat_5_5 = tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_19 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_218;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_219;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_220;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_221;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_114;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_153;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_166;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_179;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_196;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_218;
                  const walberla::float64 elMat_6_6 = tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                                      tmp_kernel_op_19 * tmp_kernel_op_192 +
                                                      tmp_kernel_op_193 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_222;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_223;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_224;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_122;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_154;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_167;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_180;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_203;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_219;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_222;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_226;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_227;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_129;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_155;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_168;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_181;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_210;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_220;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_223;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_226;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_136;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_156;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_169;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_182;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_217;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_221;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_224;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_227;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
      {
         /* CellType.BLUE_DOWN */
         const walberla::float64 tmp_coords_jac_0_BLUE_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_6_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_8_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 tmp_coords_jac_9_BLUE_DOWN   = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_0_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) +
             tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_1_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) +
             tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_2_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) +
             tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
         const walberla::float64 jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
         const walberla::float64 jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
         const walberla::float64 jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
         const walberla::float64 jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
         const walberla::float64 jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_0_BLUE_DOWN ) +
                                  ( jac_affine_1_0_BLUE_DOWN * jac_affine_1_0_BLUE_DOWN ) +
                                  ( jac_affine_2_0_BLUE_DOWN * jac_affine_2_0_BLUE_DOWN ) ) *
                                    ( ( jac_affine_0_1_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN ) +
                                      ( jac_affine_1_1_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN ) +
                                      ( jac_affine_2_1_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) ) -
                                ( ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN +
                                    jac_affine_1_0_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN +
                                    jac_affine_2_0_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) *
                                  ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN +
                                    jac_affine_1_0_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN +
                                    jac_affine_2_0_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_50 + tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_53 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_53 + 1.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_56 =
                      tmp_kernel_op_55 * ( tmp_kernel_op_46 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_52 +
                                           tmp_kernel_op_54 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_62 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_61 + tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_65 =
                      tmp_kernel_op_64 * ( tmp_kernel_op_54 + tmp_kernel_op_57 + tmp_kernel_op_59 + tmp_kernel_op_60 +
                                           tmp_kernel_op_63 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_66 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_70 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_71 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_72 = tmp_kernel_op_70 + tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_74 =
                      tmp_kernel_op_73 * ( tmp_kernel_op_54 + tmp_kernel_op_66 + tmp_kernel_op_68 + tmp_kernel_op_69 +
                                           tmp_kernel_op_72 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_76 = tmp_kernel_op_75 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_79 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_79 + tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_83 =
                      tmp_kernel_op_82 * ( tmp_kernel_op_54 + tmp_kernel_op_75 + tmp_kernel_op_77 + tmp_kernel_op_78 +
                                           tmp_kernel_op_81 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_84 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_87 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_89 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_92 =
                      tmp_kernel_op_91 * ( tmp_kernel_op_54 + tmp_kernel_op_84 + tmp_kernel_op_86 + tmp_kernel_op_87 +
                                           tmp_kernel_op_90 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_93  = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_94  = tmp_kernel_op_93 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_95  = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_96  = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_97  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_98  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_97 + tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_101 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_54 + tmp_kernel_op_93 + tmp_kernel_op_95 + tmp_kernel_op_96 +
                                            tmp_kernel_op_99 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_102 =
                      tmp_kernel_op_101 * tmp_kernel_op_94 + tmp_kernel_op_47 * tmp_kernel_op_56 +
                      tmp_kernel_op_58 * tmp_kernel_op_65 + tmp_kernel_op_67 * tmp_kernel_op_74 +
                      tmp_kernel_op_76 * tmp_kernel_op_83 + tmp_kernel_op_85 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_59 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_68 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_77 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_86 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_95 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_109 =
                      tmp_kernel_op_101 * tmp_kernel_op_108 + tmp_kernel_op_103 * tmp_kernel_op_56 +
                      tmp_kernel_op_104 * tmp_kernel_op_65 + tmp_kernel_op_105 * tmp_kernel_op_74 +
                      tmp_kernel_op_106 * tmp_kernel_op_83 + tmp_kernel_op_107 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_111 =
                      tmp_kernel_op_101 * tmp_kernel_op_110 + tmp_kernel_op_110 * tmp_kernel_op_56 +
                      tmp_kernel_op_110 * tmp_kernel_op_65 + tmp_kernel_op_110 * tmp_kernel_op_74 +
                      tmp_kernel_op_110 * tmp_kernel_op_83 + tmp_kernel_op_110 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_101 * tmp_kernel_op_98 + tmp_kernel_op_51 * tmp_kernel_op_56 +
                      tmp_kernel_op_62 * tmp_kernel_op_65 + tmp_kernel_op_71 * tmp_kernel_op_74 +
                      tmp_kernel_op_80 * tmp_kernel_op_83 + tmp_kernel_op_89 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_113 =
                      tmp_kernel_op_101 * tmp_kernel_op_97 + tmp_kernel_op_50 * tmp_kernel_op_56 +
                      tmp_kernel_op_61 * tmp_kernel_op_65 + tmp_kernel_op_70 * tmp_kernel_op_74 +
                      tmp_kernel_op_79 * tmp_kernel_op_83 + tmp_kernel_op_88 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_101 * tmp_kernel_op_96 + tmp_kernel_op_49 * tmp_kernel_op_56 +
                      tmp_kernel_op_60 * tmp_kernel_op_65 + tmp_kernel_op_69 * tmp_kernel_op_74 +
                      tmp_kernel_op_78 * tmp_kernel_op_83 + tmp_kernel_op_87 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_101 * tmp_kernel_op_121 + tmp_kernel_op_116 * tmp_kernel_op_56 +
                      tmp_kernel_op_117 * tmp_kernel_op_65 + tmp_kernel_op_118 * tmp_kernel_op_74 +
                      tmp_kernel_op_119 * tmp_kernel_op_83 + tmp_kernel_op_120 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_51 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_62 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_71 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_80 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_89 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_98 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_101 * tmp_kernel_op_128 + tmp_kernel_op_123 * tmp_kernel_op_56 +
                      tmp_kernel_op_124 * tmp_kernel_op_65 + tmp_kernel_op_125 * tmp_kernel_op_74 +
                      tmp_kernel_op_126 * tmp_kernel_op_83 + tmp_kernel_op_127 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_61 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_70 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_79 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_88 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_97 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_101 * tmp_kernel_op_135 + tmp_kernel_op_130 * tmp_kernel_op_56 +
                      tmp_kernel_op_131 * tmp_kernel_op_65 + tmp_kernel_op_132 * tmp_kernel_op_74 +
                      tmp_kernel_op_133 * tmp_kernel_op_83 + tmp_kernel_op_134 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_55 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_64 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_73 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_91 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_47 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_58 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_67 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_76 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_85 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_100 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_103 * tmp_kernel_op_143 + tmp_kernel_op_104 * tmp_kernel_op_144 +
                      tmp_kernel_op_105 * tmp_kernel_op_145 + tmp_kernel_op_106 * tmp_kernel_op_146 +
                      tmp_kernel_op_107 * tmp_kernel_op_147 + tmp_kernel_op_108 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_110 * tmp_kernel_op_143 + tmp_kernel_op_110 * tmp_kernel_op_144 +
                      tmp_kernel_op_110 * tmp_kernel_op_145 + tmp_kernel_op_110 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_110 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_51 + tmp_kernel_op_144 * tmp_kernel_op_62 +
                      tmp_kernel_op_145 * tmp_kernel_op_71 + tmp_kernel_op_146 * tmp_kernel_op_80 +
                      tmp_kernel_op_147 * tmp_kernel_op_89 + tmp_kernel_op_148 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_61 +
                      tmp_kernel_op_145 * tmp_kernel_op_70 + tmp_kernel_op_146 * tmp_kernel_op_79 +
                      tmp_kernel_op_147 * tmp_kernel_op_88 + tmp_kernel_op_148 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_69 + tmp_kernel_op_146 * tmp_kernel_op_78 +
                      tmp_kernel_op_147 * tmp_kernel_op_87 + tmp_kernel_op_148 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_103 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_104 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_105 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_106 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_107 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_100 * tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_110 * tmp_kernel_op_157 + tmp_kernel_op_110 * tmp_kernel_op_158 +
                      tmp_kernel_op_110 * tmp_kernel_op_159 + tmp_kernel_op_110 * tmp_kernel_op_160 +
                      tmp_kernel_op_110 * tmp_kernel_op_161 + tmp_kernel_op_110 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_51 + tmp_kernel_op_158 * tmp_kernel_op_62 +
                      tmp_kernel_op_159 * tmp_kernel_op_71 + tmp_kernel_op_160 * tmp_kernel_op_80 +
                      tmp_kernel_op_161 * tmp_kernel_op_89 + tmp_kernel_op_162 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_61 +
                      tmp_kernel_op_159 * tmp_kernel_op_70 + tmp_kernel_op_160 * tmp_kernel_op_79 +
                      tmp_kernel_op_161 * tmp_kernel_op_88 + tmp_kernel_op_162 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_69 + tmp_kernel_op_160 * tmp_kernel_op_78 +
                      tmp_kernel_op_161 * tmp_kernel_op_87 + tmp_kernel_op_162 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_110 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_110 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_110 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_110 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_110 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_100 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_51 + tmp_kernel_op_172 * tmp_kernel_op_62 +
                      tmp_kernel_op_173 * tmp_kernel_op_71 + tmp_kernel_op_174 * tmp_kernel_op_80 +
                      tmp_kernel_op_175 * tmp_kernel_op_89 + tmp_kernel_op_176 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_61 +
                      tmp_kernel_op_173 * tmp_kernel_op_70 + tmp_kernel_op_174 * tmp_kernel_op_79 +
                      tmp_kernel_op_175 * tmp_kernel_op_88 + tmp_kernel_op_176 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_69 + tmp_kernel_op_174 * tmp_kernel_op_78 +
                      tmp_kernel_op_175 * tmp_kernel_op_87 + tmp_kernel_op_176 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_100 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_51 + tmp_kernel_op_198 * tmp_kernel_op_62 +
                      tmp_kernel_op_199 * tmp_kernel_op_71 + tmp_kernel_op_200 * tmp_kernel_op_80 +
                      tmp_kernel_op_201 * tmp_kernel_op_89 + tmp_kernel_op_202 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_100 * tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_51 + tmp_kernel_op_205 * tmp_kernel_op_62 +
                      tmp_kernel_op_206 * tmp_kernel_op_71 + tmp_kernel_op_207 * tmp_kernel_op_80 +
                      tmp_kernel_op_208 * tmp_kernel_op_89 + tmp_kernel_op_209 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_100 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_51 + tmp_kernel_op_212 * tmp_kernel_op_62 +
                      tmp_kernel_op_213 * tmp_kernel_op_71 + tmp_kernel_op_214 * tmp_kernel_op_80 +
                      tmp_kernel_op_215 * tmp_kernel_op_89 + tmp_kernel_op_216 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_61 +
                      tmp_kernel_op_199 * tmp_kernel_op_70 + tmp_kernel_op_200 * tmp_kernel_op_79 +
                      tmp_kernel_op_201 * tmp_kernel_op_88 + tmp_kernel_op_202 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_61 +
                      tmp_kernel_op_206 * tmp_kernel_op_70 + tmp_kernel_op_207 * tmp_kernel_op_79 +
                      tmp_kernel_op_208 * tmp_kernel_op_88 + tmp_kernel_op_209 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_61 +
                      tmp_kernel_op_213 * tmp_kernel_op_70 + tmp_kernel_op_214 * tmp_kernel_op_79 +
                      tmp_kernel_op_215 * tmp_kernel_op_88 + tmp_kernel_op_216 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_69 + tmp_kernel_op_200 * tmp_kernel_op_78 +
                      tmp_kernel_op_201 * tmp_kernel_op_87 + tmp_kernel_op_202 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_69 + tmp_kernel_op_207 * tmp_kernel_op_78 +
                      tmp_kernel_op_208 * tmp_kernel_op_87 + tmp_kernel_op_209 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_69 + tmp_kernel_op_214 * tmp_kernel_op_78 +
                      tmp_kernel_op_215 * tmp_kernel_op_87 + tmp_kernel_op_216 * tmp_kernel_op_96;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_102;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_109;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_111;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_112;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_113;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_114;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_122;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_129;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_136;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_102;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_149;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_150;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_151;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_152;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_153;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_154;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_155;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_156;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_109;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_149;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_163;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_164;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_165;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_166;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_167;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_168;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_169;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_111;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_150;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_163;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_177;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_178;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_179;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_180;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_181;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_182;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_112;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_151;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_164;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_177;
                  const walberla::float64 elMat_4_4 = tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_20 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_27 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_189;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_196;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_203;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_210;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_217;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_113;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_152;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_165;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_178;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_189;
                  const walberla::float64 elMat_5_5 = tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_19 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_218;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_219;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_220;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_221;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_114;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_153;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_166;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_179;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_196;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_218;
                  const walberla::float64 elMat_6_6 = tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                                      tmp_kernel_op_19 * tmp_kernel_op_192 +
                                                      tmp_kernel_op_193 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_222;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_223;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_224;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_122;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_154;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_167;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_180;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_203;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_219;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_222;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_226;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_227;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_129;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_155;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_168;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_181;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_210;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_220;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_223;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_226;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_136;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_156;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_169;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_182;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_217;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_221;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_224;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_227;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
   }
}
void P2ElementwiseBoundaryMass::toMatrix_P2ElementwiseBoundaryMass_facet_id_3_macro_3D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_0comp2,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_1comp2,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    walberla::float64                    macro_vertex_coord_id_2comp2,
    walberla::float64                    macro_vertex_coord_id_3comp0,
    walberla::float64                    macro_vertex_coord_id_3comp1,
    walberla::float64                    macro_vertex_coord_id_3comp2,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_0_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 jac_affine_0_0_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_50 + tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_53 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_53 + 1.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_56 =
                      tmp_kernel_op_55 * ( tmp_kernel_op_46 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_52 +
                                           tmp_kernel_op_54 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_62 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_61 + tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_65 =
                      tmp_kernel_op_64 * ( tmp_kernel_op_54 + tmp_kernel_op_57 + tmp_kernel_op_59 + tmp_kernel_op_60 +
                                           tmp_kernel_op_63 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_66 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_70 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_71 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_72 = tmp_kernel_op_70 + tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_74 =
                      tmp_kernel_op_73 * ( tmp_kernel_op_54 + tmp_kernel_op_66 + tmp_kernel_op_68 + tmp_kernel_op_69 +
                                           tmp_kernel_op_72 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_76 = tmp_kernel_op_75 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_79 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_79 + tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_83 =
                      tmp_kernel_op_82 * ( tmp_kernel_op_54 + tmp_kernel_op_75 + tmp_kernel_op_77 + tmp_kernel_op_78 +
                                           tmp_kernel_op_81 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_84 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_87 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_89 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_92 =
                      tmp_kernel_op_91 * ( tmp_kernel_op_54 + tmp_kernel_op_84 + tmp_kernel_op_86 + tmp_kernel_op_87 +
                                           tmp_kernel_op_90 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_93  = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_94  = tmp_kernel_op_93 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_95  = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_96  = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_97  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_98  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_97 + tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_101 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_54 + tmp_kernel_op_93 + tmp_kernel_op_95 + tmp_kernel_op_96 +
                                            tmp_kernel_op_99 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_102 =
                      tmp_kernel_op_101 * tmp_kernel_op_94 + tmp_kernel_op_47 * tmp_kernel_op_56 +
                      tmp_kernel_op_58 * tmp_kernel_op_65 + tmp_kernel_op_67 * tmp_kernel_op_74 +
                      tmp_kernel_op_76 * tmp_kernel_op_83 + tmp_kernel_op_85 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_59 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_68 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_77 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_86 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_95 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_109 =
                      tmp_kernel_op_101 * tmp_kernel_op_108 + tmp_kernel_op_103 * tmp_kernel_op_56 +
                      tmp_kernel_op_104 * tmp_kernel_op_65 + tmp_kernel_op_105 * tmp_kernel_op_74 +
                      tmp_kernel_op_106 * tmp_kernel_op_83 + tmp_kernel_op_107 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_111 =
                      tmp_kernel_op_101 * tmp_kernel_op_110 + tmp_kernel_op_110 * tmp_kernel_op_56 +
                      tmp_kernel_op_110 * tmp_kernel_op_65 + tmp_kernel_op_110 * tmp_kernel_op_74 +
                      tmp_kernel_op_110 * tmp_kernel_op_83 + tmp_kernel_op_110 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_101 * tmp_kernel_op_98 + tmp_kernel_op_51 * tmp_kernel_op_56 +
                      tmp_kernel_op_62 * tmp_kernel_op_65 + tmp_kernel_op_71 * tmp_kernel_op_74 +
                      tmp_kernel_op_80 * tmp_kernel_op_83 + tmp_kernel_op_89 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_113 =
                      tmp_kernel_op_101 * tmp_kernel_op_97 + tmp_kernel_op_50 * tmp_kernel_op_56 +
                      tmp_kernel_op_61 * tmp_kernel_op_65 + tmp_kernel_op_70 * tmp_kernel_op_74 +
                      tmp_kernel_op_79 * tmp_kernel_op_83 + tmp_kernel_op_88 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_101 * tmp_kernel_op_96 + tmp_kernel_op_49 * tmp_kernel_op_56 +
                      tmp_kernel_op_60 * tmp_kernel_op_65 + tmp_kernel_op_69 * tmp_kernel_op_74 +
                      tmp_kernel_op_78 * tmp_kernel_op_83 + tmp_kernel_op_87 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_101 * tmp_kernel_op_121 + tmp_kernel_op_116 * tmp_kernel_op_56 +
                      tmp_kernel_op_117 * tmp_kernel_op_65 + tmp_kernel_op_118 * tmp_kernel_op_74 +
                      tmp_kernel_op_119 * tmp_kernel_op_83 + tmp_kernel_op_120 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_51 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_62 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_71 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_80 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_89 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_98 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_101 * tmp_kernel_op_128 + tmp_kernel_op_123 * tmp_kernel_op_56 +
                      tmp_kernel_op_124 * tmp_kernel_op_65 + tmp_kernel_op_125 * tmp_kernel_op_74 +
                      tmp_kernel_op_126 * tmp_kernel_op_83 + tmp_kernel_op_127 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_61 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_70 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_79 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_88 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_97 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_101 * tmp_kernel_op_135 + tmp_kernel_op_130 * tmp_kernel_op_56 +
                      tmp_kernel_op_131 * tmp_kernel_op_65 + tmp_kernel_op_132 * tmp_kernel_op_74 +
                      tmp_kernel_op_133 * tmp_kernel_op_83 + tmp_kernel_op_134 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_55 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_64 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_73 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_91 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_47 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_58 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_67 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_76 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_85 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_100 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_103 * tmp_kernel_op_143 + tmp_kernel_op_104 * tmp_kernel_op_144 +
                      tmp_kernel_op_105 * tmp_kernel_op_145 + tmp_kernel_op_106 * tmp_kernel_op_146 +
                      tmp_kernel_op_107 * tmp_kernel_op_147 + tmp_kernel_op_108 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_110 * tmp_kernel_op_143 + tmp_kernel_op_110 * tmp_kernel_op_144 +
                      tmp_kernel_op_110 * tmp_kernel_op_145 + tmp_kernel_op_110 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_110 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_51 + tmp_kernel_op_144 * tmp_kernel_op_62 +
                      tmp_kernel_op_145 * tmp_kernel_op_71 + tmp_kernel_op_146 * tmp_kernel_op_80 +
                      tmp_kernel_op_147 * tmp_kernel_op_89 + tmp_kernel_op_148 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_61 +
                      tmp_kernel_op_145 * tmp_kernel_op_70 + tmp_kernel_op_146 * tmp_kernel_op_79 +
                      tmp_kernel_op_147 * tmp_kernel_op_88 + tmp_kernel_op_148 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_69 + tmp_kernel_op_146 * tmp_kernel_op_78 +
                      tmp_kernel_op_147 * tmp_kernel_op_87 + tmp_kernel_op_148 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_103 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_104 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_105 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_106 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_107 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_100 * tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_110 * tmp_kernel_op_157 + tmp_kernel_op_110 * tmp_kernel_op_158 +
                      tmp_kernel_op_110 * tmp_kernel_op_159 + tmp_kernel_op_110 * tmp_kernel_op_160 +
                      tmp_kernel_op_110 * tmp_kernel_op_161 + tmp_kernel_op_110 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_51 + tmp_kernel_op_158 * tmp_kernel_op_62 +
                      tmp_kernel_op_159 * tmp_kernel_op_71 + tmp_kernel_op_160 * tmp_kernel_op_80 +
                      tmp_kernel_op_161 * tmp_kernel_op_89 + tmp_kernel_op_162 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_61 +
                      tmp_kernel_op_159 * tmp_kernel_op_70 + tmp_kernel_op_160 * tmp_kernel_op_79 +
                      tmp_kernel_op_161 * tmp_kernel_op_88 + tmp_kernel_op_162 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_69 + tmp_kernel_op_160 * tmp_kernel_op_78 +
                      tmp_kernel_op_161 * tmp_kernel_op_87 + tmp_kernel_op_162 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_110 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_110 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_110 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_110 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_110 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_100 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_51 + tmp_kernel_op_172 * tmp_kernel_op_62 +
                      tmp_kernel_op_173 * tmp_kernel_op_71 + tmp_kernel_op_174 * tmp_kernel_op_80 +
                      tmp_kernel_op_175 * tmp_kernel_op_89 + tmp_kernel_op_176 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_61 +
                      tmp_kernel_op_173 * tmp_kernel_op_70 + tmp_kernel_op_174 * tmp_kernel_op_79 +
                      tmp_kernel_op_175 * tmp_kernel_op_88 + tmp_kernel_op_176 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_69 + tmp_kernel_op_174 * tmp_kernel_op_78 +
                      tmp_kernel_op_175 * tmp_kernel_op_87 + tmp_kernel_op_176 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_100 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_51 + tmp_kernel_op_198 * tmp_kernel_op_62 +
                      tmp_kernel_op_199 * tmp_kernel_op_71 + tmp_kernel_op_200 * tmp_kernel_op_80 +
                      tmp_kernel_op_201 * tmp_kernel_op_89 + tmp_kernel_op_202 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_100 * tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_51 + tmp_kernel_op_205 * tmp_kernel_op_62 +
                      tmp_kernel_op_206 * tmp_kernel_op_71 + tmp_kernel_op_207 * tmp_kernel_op_80 +
                      tmp_kernel_op_208 * tmp_kernel_op_89 + tmp_kernel_op_209 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_100 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_51 + tmp_kernel_op_212 * tmp_kernel_op_62 +
                      tmp_kernel_op_213 * tmp_kernel_op_71 + tmp_kernel_op_214 * tmp_kernel_op_80 +
                      tmp_kernel_op_215 * tmp_kernel_op_89 + tmp_kernel_op_216 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_61 +
                      tmp_kernel_op_199 * tmp_kernel_op_70 + tmp_kernel_op_200 * tmp_kernel_op_79 +
                      tmp_kernel_op_201 * tmp_kernel_op_88 + tmp_kernel_op_202 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_61 +
                      tmp_kernel_op_206 * tmp_kernel_op_70 + tmp_kernel_op_207 * tmp_kernel_op_79 +
                      tmp_kernel_op_208 * tmp_kernel_op_88 + tmp_kernel_op_209 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_61 +
                      tmp_kernel_op_213 * tmp_kernel_op_70 + tmp_kernel_op_214 * tmp_kernel_op_79 +
                      tmp_kernel_op_215 * tmp_kernel_op_88 + tmp_kernel_op_216 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_69 + tmp_kernel_op_200 * tmp_kernel_op_78 +
                      tmp_kernel_op_201 * tmp_kernel_op_87 + tmp_kernel_op_202 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_69 + tmp_kernel_op_207 * tmp_kernel_op_78 +
                      tmp_kernel_op_208 * tmp_kernel_op_87 + tmp_kernel_op_209 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_69 + tmp_kernel_op_214 * tmp_kernel_op_78 +
                      tmp_kernel_op_215 * tmp_kernel_op_87 + tmp_kernel_op_216 * tmp_kernel_op_96;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_102;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_109;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_111;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_112;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_113;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_114;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_122;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_129;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_136;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_102;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_149;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_150;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_151;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_152;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_153;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_154;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_155;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_156;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_109;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_149;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_163;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_164;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_165;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_166;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_167;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_168;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_169;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_111;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_150;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_163;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_177;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_178;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_179;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_180;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_181;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_182;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_112;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_151;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_164;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_177;
                  const walberla::float64 elMat_4_4 = tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_20 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_27 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_189;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_196;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_203;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_210;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_217;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_113;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_152;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_165;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_178;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_189;
                  const walberla::float64 elMat_5_5 = tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_19 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_218;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_219;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_220;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_221;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_114;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_153;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_166;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_179;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_196;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_218;
                  const walberla::float64 elMat_6_6 = tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                                      tmp_kernel_op_19 * tmp_kernel_op_192 +
                                                      tmp_kernel_op_193 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_222;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_223;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_224;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_122;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_154;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_167;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_180;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_203;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_219;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_222;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_226;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_227;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_129;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_155;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_168;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_181;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_210;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_220;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_223;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_226;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_136;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_156;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_169;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_182;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_217;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_221;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_224;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_227;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
      {
         /* CellType.GREEN_DOWN */
         const walberla::float64 tmp_coords_jac_0_GREEN_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_3_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_4_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_5_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_6_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_7_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_8_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_9_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_0_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 + tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_1_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 + tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 jac_affine_0_0_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
         const walberla::float64 jac_affine_0_1_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
         const walberla::float64 jac_affine_1_0_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
         const walberla::float64 jac_affine_1_1_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
         const walberla::float64 jac_affine_2_0_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
         const walberla::float64 jac_affine_2_1_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_0_GREEN_DOWN ) +
                                  ( jac_affine_1_0_GREEN_DOWN * jac_affine_1_0_GREEN_DOWN ) +
                                  ( jac_affine_2_0_GREEN_DOWN * jac_affine_2_0_GREEN_DOWN ) ) *
                                    ( ( jac_affine_0_1_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN ) +
                                      ( jac_affine_1_1_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN ) +
                                      ( jac_affine_2_1_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) ) -
                                ( ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN +
                                    jac_affine_1_0_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN +
                                    jac_affine_2_0_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) *
                                  ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN +
                                    jac_affine_1_0_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN +
                                    jac_affine_2_0_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_1 * 2.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_2 * 2.0;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_0 * 4.0;
                  const walberla::float64 tmp_kernel_op_50 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_3 ) );
                  const walberla::float64 tmp_kernel_op_51 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_4 ) );
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_50 + tmp_kernel_op_51;
                  const walberla::float64 tmp_kernel_op_53 = 2.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_53 + 1.0;
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_56 =
                      tmp_kernel_op_55 * ( tmp_kernel_op_46 + tmp_kernel_op_48 + tmp_kernel_op_49 + tmp_kernel_op_52 +
                                           tmp_kernel_op_54 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_12 * 2.0;
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_57 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_13 * 2.0;
                  const walberla::float64 tmp_kernel_op_60 = tmp_kernel_op_11 * 4.0;
                  const walberla::float64 tmp_kernel_op_61 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_14 ) );
                  const walberla::float64 tmp_kernel_op_62 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_15 ) );
                  const walberla::float64 tmp_kernel_op_63 = tmp_kernel_op_61 + tmp_kernel_op_62;
                  const walberla::float64 tmp_kernel_op_64 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_65 =
                      tmp_kernel_op_64 * ( tmp_kernel_op_54 + tmp_kernel_op_57 + tmp_kernel_op_59 + tmp_kernel_op_60 +
                                           tmp_kernel_op_63 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_66 = tmp_kernel_op_19 * 2.0;
                  const walberla::float64 tmp_kernel_op_67 = tmp_kernel_op_66 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_68 = tmp_kernel_op_20 * 2.0;
                  const walberla::float64 tmp_kernel_op_69 = tmp_kernel_op_18 * 4.0;
                  const walberla::float64 tmp_kernel_op_70 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_21 ) );
                  const walberla::float64 tmp_kernel_op_71 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_22 ) );
                  const walberla::float64 tmp_kernel_op_72 = tmp_kernel_op_70 + tmp_kernel_op_71;
                  const walberla::float64 tmp_kernel_op_73 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_74 =
                      tmp_kernel_op_73 * ( tmp_kernel_op_54 + tmp_kernel_op_66 + tmp_kernel_op_68 + tmp_kernel_op_69 +
                                           tmp_kernel_op_72 - 1.6621545272521054 );
                  const walberla::float64 tmp_kernel_op_75 = tmp_kernel_op_26 * 2.0;
                  const walberla::float64 tmp_kernel_op_76 = tmp_kernel_op_75 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_77 = tmp_kernel_op_27 * 2.0;
                  const walberla::float64 tmp_kernel_op_78 = tmp_kernel_op_25 * 4.0;
                  const walberla::float64 tmp_kernel_op_79 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_28 ) );
                  const walberla::float64 tmp_kernel_op_80 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_29 ) );
                  const walberla::float64 tmp_kernel_op_81 = tmp_kernel_op_79 + tmp_kernel_op_80;
                  const walberla::float64 tmp_kernel_op_82 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_83 =
                      tmp_kernel_op_82 * ( tmp_kernel_op_54 + tmp_kernel_op_75 + tmp_kernel_op_77 + tmp_kernel_op_78 +
                                           tmp_kernel_op_81 - 2.7252713594706872 );
                  const walberla::float64 tmp_kernel_op_84 = tmp_kernel_op_33 * 2.0;
                  const walberla::float64 tmp_kernel_op_85 = tmp_kernel_op_84 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_86 = tmp_kernel_op_34 * 2.0;
                  const walberla::float64 tmp_kernel_op_87 = tmp_kernel_op_32 * 4.0;
                  const walberla::float64 tmp_kernel_op_88 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_35 ) );
                  const walberla::float64 tmp_kernel_op_89 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_36 ) );
                  const walberla::float64 tmp_kernel_op_90 = tmp_kernel_op_88 + tmp_kernel_op_89;
                  const walberla::float64 tmp_kernel_op_91 = tmp_kernel_op_8 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_92 =
                      tmp_kernel_op_91 * ( tmp_kernel_op_54 + tmp_kernel_op_84 + tmp_kernel_op_86 + tmp_kernel_op_87 +
                                           tmp_kernel_op_90 - 2.6756909454957896 );
                  const walberla::float64 tmp_kernel_op_93  = tmp_kernel_op_40 * 2.0;
                  const walberla::float64 tmp_kernel_op_94  = tmp_kernel_op_93 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_95  = tmp_kernel_op_41 * 2.0;
                  const walberla::float64 tmp_kernel_op_96  = tmp_kernel_op_39 * 4.0;
                  const walberla::float64 tmp_kernel_op_97  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_98  = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_99  = tmp_kernel_op_97 + tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_100 = tmp_kernel_op_8 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_101 =
                      tmp_kernel_op_100 * ( tmp_kernel_op_54 + tmp_kernel_op_93 + tmp_kernel_op_95 + tmp_kernel_op_96 +
                                            tmp_kernel_op_99 - 0.54945728105862424 );
                  const walberla::float64 tmp_kernel_op_102 =
                      tmp_kernel_op_101 * tmp_kernel_op_94 + tmp_kernel_op_47 * tmp_kernel_op_56 +
                      tmp_kernel_op_58 * tmp_kernel_op_65 + tmp_kernel_op_67 * tmp_kernel_op_74 +
                      tmp_kernel_op_76 * tmp_kernel_op_83 + tmp_kernel_op_85 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_103 = tmp_kernel_op_48 - 0.10810301816807022;
                  const walberla::float64 tmp_kernel_op_104 = tmp_kernel_op_59 - 0.81684757298045851;
                  const walberla::float64 tmp_kernel_op_105 = tmp_kernel_op_68 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_106 = tmp_kernel_op_77 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_107 = tmp_kernel_op_86 - 0.44594849091596489;
                  const walberla::float64 tmp_kernel_op_108 = tmp_kernel_op_95 - 0.091576213509770715;
                  const walberla::float64 tmp_kernel_op_109 =
                      tmp_kernel_op_101 * tmp_kernel_op_108 + tmp_kernel_op_103 * tmp_kernel_op_56 +
                      tmp_kernel_op_104 * tmp_kernel_op_65 + tmp_kernel_op_105 * tmp_kernel_op_74 +
                      tmp_kernel_op_106 * tmp_kernel_op_83 + tmp_kernel_op_107 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_110 = tmp_kernel_op_53;
                  const walberla::float64 tmp_kernel_op_111 =
                      tmp_kernel_op_101 * tmp_kernel_op_110 + tmp_kernel_op_110 * tmp_kernel_op_56 +
                      tmp_kernel_op_110 * tmp_kernel_op_65 + tmp_kernel_op_110 * tmp_kernel_op_74 +
                      tmp_kernel_op_110 * tmp_kernel_op_83 + tmp_kernel_op_110 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_112 =
                      tmp_kernel_op_101 * tmp_kernel_op_98 + tmp_kernel_op_51 * tmp_kernel_op_56 +
                      tmp_kernel_op_62 * tmp_kernel_op_65 + tmp_kernel_op_71 * tmp_kernel_op_74 +
                      tmp_kernel_op_80 * tmp_kernel_op_83 + tmp_kernel_op_89 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_113 =
                      tmp_kernel_op_101 * tmp_kernel_op_97 + tmp_kernel_op_50 * tmp_kernel_op_56 +
                      tmp_kernel_op_61 * tmp_kernel_op_65 + tmp_kernel_op_70 * tmp_kernel_op_74 +
                      tmp_kernel_op_79 * tmp_kernel_op_83 + tmp_kernel_op_88 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_114 =
                      tmp_kernel_op_101 * tmp_kernel_op_96 + tmp_kernel_op_49 * tmp_kernel_op_56 +
                      tmp_kernel_op_60 * tmp_kernel_op_65 + tmp_kernel_op_69 * tmp_kernel_op_74 +
                      tmp_kernel_op_78 * tmp_kernel_op_83 + tmp_kernel_op_87 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_115 = 4.0 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_116 = -tmp_kernel_op_115 - tmp_kernel_op_52;
                  const walberla::float64 tmp_kernel_op_117 = -tmp_kernel_op_115 - tmp_kernel_op_63;
                  const walberla::float64 tmp_kernel_op_118 = -tmp_kernel_op_115 - tmp_kernel_op_72;
                  const walberla::float64 tmp_kernel_op_119 = -tmp_kernel_op_115 - tmp_kernel_op_81;
                  const walberla::float64 tmp_kernel_op_120 = -tmp_kernel_op_115 - tmp_kernel_op_90;
                  const walberla::float64 tmp_kernel_op_121 = -tmp_kernel_op_115 - tmp_kernel_op_99;
                  const walberla::float64 tmp_kernel_op_122 =
                      tmp_kernel_op_101 * tmp_kernel_op_121 + tmp_kernel_op_116 * tmp_kernel_op_56 +
                      tmp_kernel_op_117 * tmp_kernel_op_65 + tmp_kernel_op_118 * tmp_kernel_op_74 +
                      tmp_kernel_op_119 * tmp_kernel_op_83 + tmp_kernel_op_120 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_123 =
                      tmp_kernel_op_2 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_51 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_124 =
                      tmp_kernel_op_13 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_62 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_125 =
                      tmp_kernel_op_20 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_71 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_126 =
                      tmp_kernel_op_27 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_80 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_127 =
                      tmp_kernel_op_34 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_89 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_128 =
                      tmp_kernel_op_41 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_98 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_129 =
                      tmp_kernel_op_101 * tmp_kernel_op_128 + tmp_kernel_op_123 * tmp_kernel_op_56 +
                      tmp_kernel_op_124 * tmp_kernel_op_65 + tmp_kernel_op_125 * tmp_kernel_op_74 +
                      tmp_kernel_op_126 * tmp_kernel_op_83 + tmp_kernel_op_127 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_130 =
                      tmp_kernel_op_1 * -4.0 - tmp_kernel_op_49 - tmp_kernel_op_50 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_131 =
                      tmp_kernel_op_12 * -4.0 - tmp_kernel_op_60 - tmp_kernel_op_61 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_132 =
                      tmp_kernel_op_19 * -4.0 - tmp_kernel_op_69 - tmp_kernel_op_70 + 0.43241207267228088;
                  const walberla::float64 tmp_kernel_op_133 =
                      tmp_kernel_op_26 * -4.0 - tmp_kernel_op_78 - tmp_kernel_op_79 + 3.2673902919218341;
                  const walberla::float64 tmp_kernel_op_134 =
                      tmp_kernel_op_33 * -4.0 - tmp_kernel_op_87 - tmp_kernel_op_88 + 1.7837939636638596;
                  const walberla::float64 tmp_kernel_op_135 =
                      tmp_kernel_op_40 * -4.0 - tmp_kernel_op_96 - tmp_kernel_op_97 + 0.36630485403908286;
                  const walberla::float64 tmp_kernel_op_136 =
                      tmp_kernel_op_101 * tmp_kernel_op_135 + tmp_kernel_op_130 * tmp_kernel_op_56 +
                      tmp_kernel_op_131 * tmp_kernel_op_65 + tmp_kernel_op_132 * tmp_kernel_op_74 +
                      tmp_kernel_op_133 * tmp_kernel_op_83 + tmp_kernel_op_134 * tmp_kernel_op_92;
                  const walberla::float64 tmp_kernel_op_137 = tmp_kernel_op_55 * 4.0;
                  const walberla::float64 tmp_kernel_op_138 = tmp_kernel_op_64 * 4.0;
                  const walberla::float64 tmp_kernel_op_139 = tmp_kernel_op_73 * 4.0;
                  const walberla::float64 tmp_kernel_op_140 = tmp_kernel_op_82 * 4.0;
                  const walberla::float64 tmp_kernel_op_141 = tmp_kernel_op_91 * 4.0;
                  const walberla::float64 tmp_kernel_op_142 = tmp_kernel_op_100 * 4.0;
                  const walberla::float64 tmp_kernel_op_143 = tmp_kernel_op_47 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_144 = tmp_kernel_op_58 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_145 = tmp_kernel_op_67 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_146 = tmp_kernel_op_76 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_147 = tmp_kernel_op_85 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_148 = tmp_kernel_op_100 * tmp_kernel_op_94;
                  const walberla::float64 tmp_kernel_op_149 =
                      tmp_kernel_op_103 * tmp_kernel_op_143 + tmp_kernel_op_104 * tmp_kernel_op_144 +
                      tmp_kernel_op_105 * tmp_kernel_op_145 + tmp_kernel_op_106 * tmp_kernel_op_146 +
                      tmp_kernel_op_107 * tmp_kernel_op_147 + tmp_kernel_op_108 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_150 =
                      tmp_kernel_op_110 * tmp_kernel_op_143 + tmp_kernel_op_110 * tmp_kernel_op_144 +
                      tmp_kernel_op_110 * tmp_kernel_op_145 + tmp_kernel_op_110 * tmp_kernel_op_146 +
                      tmp_kernel_op_110 * tmp_kernel_op_147 + tmp_kernel_op_110 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_151 =
                      tmp_kernel_op_143 * tmp_kernel_op_51 + tmp_kernel_op_144 * tmp_kernel_op_62 +
                      tmp_kernel_op_145 * tmp_kernel_op_71 + tmp_kernel_op_146 * tmp_kernel_op_80 +
                      tmp_kernel_op_147 * tmp_kernel_op_89 + tmp_kernel_op_148 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_152 =
                      tmp_kernel_op_143 * tmp_kernel_op_50 + tmp_kernel_op_144 * tmp_kernel_op_61 +
                      tmp_kernel_op_145 * tmp_kernel_op_70 + tmp_kernel_op_146 * tmp_kernel_op_79 +
                      tmp_kernel_op_147 * tmp_kernel_op_88 + tmp_kernel_op_148 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_153 =
                      tmp_kernel_op_143 * tmp_kernel_op_49 + tmp_kernel_op_144 * tmp_kernel_op_60 +
                      tmp_kernel_op_145 * tmp_kernel_op_69 + tmp_kernel_op_146 * tmp_kernel_op_78 +
                      tmp_kernel_op_147 * tmp_kernel_op_87 + tmp_kernel_op_148 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_154 =
                      tmp_kernel_op_116 * tmp_kernel_op_143 + tmp_kernel_op_117 * tmp_kernel_op_144 +
                      tmp_kernel_op_118 * tmp_kernel_op_145 + tmp_kernel_op_119 * tmp_kernel_op_146 +
                      tmp_kernel_op_120 * tmp_kernel_op_147 + tmp_kernel_op_121 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_155 =
                      tmp_kernel_op_123 * tmp_kernel_op_143 + tmp_kernel_op_124 * tmp_kernel_op_144 +
                      tmp_kernel_op_125 * tmp_kernel_op_145 + tmp_kernel_op_126 * tmp_kernel_op_146 +
                      tmp_kernel_op_127 * tmp_kernel_op_147 + tmp_kernel_op_128 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_156 =
                      tmp_kernel_op_130 * tmp_kernel_op_143 + tmp_kernel_op_131 * tmp_kernel_op_144 +
                      tmp_kernel_op_132 * tmp_kernel_op_145 + tmp_kernel_op_133 * tmp_kernel_op_146 +
                      tmp_kernel_op_134 * tmp_kernel_op_147 + tmp_kernel_op_135 * tmp_kernel_op_148;
                  const walberla::float64 tmp_kernel_op_157 = tmp_kernel_op_103 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_158 = tmp_kernel_op_104 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_159 = tmp_kernel_op_105 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_160 = tmp_kernel_op_106 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_161 = tmp_kernel_op_107 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_162 = tmp_kernel_op_100 * tmp_kernel_op_108;
                  const walberla::float64 tmp_kernel_op_163 =
                      tmp_kernel_op_110 * tmp_kernel_op_157 + tmp_kernel_op_110 * tmp_kernel_op_158 +
                      tmp_kernel_op_110 * tmp_kernel_op_159 + tmp_kernel_op_110 * tmp_kernel_op_160 +
                      tmp_kernel_op_110 * tmp_kernel_op_161 + tmp_kernel_op_110 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_164 =
                      tmp_kernel_op_157 * tmp_kernel_op_51 + tmp_kernel_op_158 * tmp_kernel_op_62 +
                      tmp_kernel_op_159 * tmp_kernel_op_71 + tmp_kernel_op_160 * tmp_kernel_op_80 +
                      tmp_kernel_op_161 * tmp_kernel_op_89 + tmp_kernel_op_162 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_165 =
                      tmp_kernel_op_157 * tmp_kernel_op_50 + tmp_kernel_op_158 * tmp_kernel_op_61 +
                      tmp_kernel_op_159 * tmp_kernel_op_70 + tmp_kernel_op_160 * tmp_kernel_op_79 +
                      tmp_kernel_op_161 * tmp_kernel_op_88 + tmp_kernel_op_162 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_166 =
                      tmp_kernel_op_157 * tmp_kernel_op_49 + tmp_kernel_op_158 * tmp_kernel_op_60 +
                      tmp_kernel_op_159 * tmp_kernel_op_69 + tmp_kernel_op_160 * tmp_kernel_op_78 +
                      tmp_kernel_op_161 * tmp_kernel_op_87 + tmp_kernel_op_162 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_167 =
                      tmp_kernel_op_116 * tmp_kernel_op_157 + tmp_kernel_op_117 * tmp_kernel_op_158 +
                      tmp_kernel_op_118 * tmp_kernel_op_159 + tmp_kernel_op_119 * tmp_kernel_op_160 +
                      tmp_kernel_op_120 * tmp_kernel_op_161 + tmp_kernel_op_121 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_168 =
                      tmp_kernel_op_123 * tmp_kernel_op_157 + tmp_kernel_op_124 * tmp_kernel_op_158 +
                      tmp_kernel_op_125 * tmp_kernel_op_159 + tmp_kernel_op_126 * tmp_kernel_op_160 +
                      tmp_kernel_op_127 * tmp_kernel_op_161 + tmp_kernel_op_128 * tmp_kernel_op_162;
                  const walberla::float64 tmp_kernel_op_169 =
                      tmp_kernel_op_130 * tmp_kernel_op_157 + tmp_kernel_op_131 * tmp_kernel_op_158 +
                      tmp_kernel_op_132 * tmp_kernel_op_159 + tmp_kernel_op_133 * tmp_kernel_op_160 +
                      tmp_kernel_op_134 * tmp_kernel_op_161 + tmp_kernel_op_135 * tmp_kernel_op_162;
                  const int64_t           tmp_kernel_op_170 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_171 = tmp_kernel_op_110 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_172 = tmp_kernel_op_110 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_173 = tmp_kernel_op_110 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_174 = tmp_kernel_op_110 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_175 = tmp_kernel_op_110 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_176 = tmp_kernel_op_100 * tmp_kernel_op_110;
                  const walberla::float64 tmp_kernel_op_177 =
                      tmp_kernel_op_171 * tmp_kernel_op_51 + tmp_kernel_op_172 * tmp_kernel_op_62 +
                      tmp_kernel_op_173 * tmp_kernel_op_71 + tmp_kernel_op_174 * tmp_kernel_op_80 +
                      tmp_kernel_op_175 * tmp_kernel_op_89 + tmp_kernel_op_176 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_178 =
                      tmp_kernel_op_171 * tmp_kernel_op_50 + tmp_kernel_op_172 * tmp_kernel_op_61 +
                      tmp_kernel_op_173 * tmp_kernel_op_70 + tmp_kernel_op_174 * tmp_kernel_op_79 +
                      tmp_kernel_op_175 * tmp_kernel_op_88 + tmp_kernel_op_176 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_179 =
                      tmp_kernel_op_171 * tmp_kernel_op_49 + tmp_kernel_op_172 * tmp_kernel_op_60 +
                      tmp_kernel_op_173 * tmp_kernel_op_69 + tmp_kernel_op_174 * tmp_kernel_op_78 +
                      tmp_kernel_op_175 * tmp_kernel_op_87 + tmp_kernel_op_176 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_180 =
                      tmp_kernel_op_116 * tmp_kernel_op_171 + tmp_kernel_op_117 * tmp_kernel_op_172 +
                      tmp_kernel_op_118 * tmp_kernel_op_173 + tmp_kernel_op_119 * tmp_kernel_op_174 +
                      tmp_kernel_op_120 * tmp_kernel_op_175 + tmp_kernel_op_121 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_181 =
                      tmp_kernel_op_123 * tmp_kernel_op_171 + tmp_kernel_op_124 * tmp_kernel_op_172 +
                      tmp_kernel_op_125 * tmp_kernel_op_173 + tmp_kernel_op_126 * tmp_kernel_op_174 +
                      tmp_kernel_op_127 * tmp_kernel_op_175 + tmp_kernel_op_128 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_182 =
                      tmp_kernel_op_130 * tmp_kernel_op_171 + tmp_kernel_op_131 * tmp_kernel_op_172 +
                      tmp_kernel_op_132 * tmp_kernel_op_173 + tmp_kernel_op_133 * tmp_kernel_op_174 +
                      tmp_kernel_op_134 * tmp_kernel_op_175 + tmp_kernel_op_135 * tmp_kernel_op_176;
                  const walberla::float64 tmp_kernel_op_183 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_184 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_185 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_186 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_187 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_188 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_189 =
                      tmp_kernel_op_0 * tmp_kernel_op_183 + tmp_kernel_op_11 * tmp_kernel_op_184 +
                      tmp_kernel_op_18 * tmp_kernel_op_185 + tmp_kernel_op_186 * tmp_kernel_op_25 +
                      tmp_kernel_op_187 * tmp_kernel_op_32 + tmp_kernel_op_188 * tmp_kernel_op_39;
                  const walberla::float64 tmp_kernel_op_190 = tmp_kernel_op_10 * tmp_kernel_op_2;
                  const walberla::float64 tmp_kernel_op_191 = tmp_kernel_op_13 * tmp_kernel_op_17;
                  const walberla::float64 tmp_kernel_op_192 = tmp_kernel_op_20 * tmp_kernel_op_24;
                  const walberla::float64 tmp_kernel_op_193 = tmp_kernel_op_27 * tmp_kernel_op_31;
                  const walberla::float64 tmp_kernel_op_194 = tmp_kernel_op_34 * tmp_kernel_op_38;
                  const walberla::float64 tmp_kernel_op_195 = tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 tmp_kernel_op_196 = tmp_kernel_op_190 * ( ( walberla::float64 )( tmp_kernel_op_3 ) ) +
                                                              tmp_kernel_op_191 * ( ( walberla::float64 )( tmp_kernel_op_14 ) ) +
                                                              tmp_kernel_op_192 * ( ( walberla::float64 )( tmp_kernel_op_21 ) ) +
                                                              tmp_kernel_op_193 * ( ( walberla::float64 )( tmp_kernel_op_28 ) ) +
                                                              tmp_kernel_op_194 * ( ( walberla::float64 )( tmp_kernel_op_35 ) ) +
                                                              tmp_kernel_op_195 * ( ( walberla::float64 )( tmp_kernel_op_42 ) );
                  const walberla::float64 tmp_kernel_op_197 = tmp_kernel_op_116 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_198 = tmp_kernel_op_117 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_199 = tmp_kernel_op_118 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_200 = tmp_kernel_op_119 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_201 = tmp_kernel_op_120 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_202 = tmp_kernel_op_100 * tmp_kernel_op_121;
                  const walberla::float64 tmp_kernel_op_203 =
                      tmp_kernel_op_197 * tmp_kernel_op_51 + tmp_kernel_op_198 * tmp_kernel_op_62 +
                      tmp_kernel_op_199 * tmp_kernel_op_71 + tmp_kernel_op_200 * tmp_kernel_op_80 +
                      tmp_kernel_op_201 * tmp_kernel_op_89 + tmp_kernel_op_202 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_204 = tmp_kernel_op_123 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_205 = tmp_kernel_op_124 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_206 = tmp_kernel_op_125 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_207 = tmp_kernel_op_126 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_208 = tmp_kernel_op_127 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_209 = tmp_kernel_op_100 * tmp_kernel_op_128;
                  const walberla::float64 tmp_kernel_op_210 =
                      tmp_kernel_op_204 * tmp_kernel_op_51 + tmp_kernel_op_205 * tmp_kernel_op_62 +
                      tmp_kernel_op_206 * tmp_kernel_op_71 + tmp_kernel_op_207 * tmp_kernel_op_80 +
                      tmp_kernel_op_208 * tmp_kernel_op_89 + tmp_kernel_op_209 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_211 = tmp_kernel_op_130 * tmp_kernel_op_55;
                  const walberla::float64 tmp_kernel_op_212 = tmp_kernel_op_131 * tmp_kernel_op_64;
                  const walberla::float64 tmp_kernel_op_213 = tmp_kernel_op_132 * tmp_kernel_op_73;
                  const walberla::float64 tmp_kernel_op_214 = tmp_kernel_op_133 * tmp_kernel_op_82;
                  const walberla::float64 tmp_kernel_op_215 = tmp_kernel_op_134 * tmp_kernel_op_91;
                  const walberla::float64 tmp_kernel_op_216 = tmp_kernel_op_100 * tmp_kernel_op_135;
                  const walberla::float64 tmp_kernel_op_217 =
                      tmp_kernel_op_211 * tmp_kernel_op_51 + tmp_kernel_op_212 * tmp_kernel_op_62 +
                      tmp_kernel_op_213 * tmp_kernel_op_71 + tmp_kernel_op_214 * tmp_kernel_op_80 +
                      tmp_kernel_op_215 * tmp_kernel_op_89 + tmp_kernel_op_216 * tmp_kernel_op_98;
                  const walberla::float64 tmp_kernel_op_218 =
                      tmp_kernel_op_1 * tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_4 ) ) +
                      tmp_kernel_op_12 * tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_15 ) ) +
                      tmp_kernel_op_19 * tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_22 ) ) +
                      tmp_kernel_op_26 * tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_29 ) ) +
                      tmp_kernel_op_33 * tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_36 ) ) +
                      tmp_kernel_op_40 * tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_43 ) );
                  const walberla::float64 tmp_kernel_op_219 =
                      tmp_kernel_op_197 * tmp_kernel_op_50 + tmp_kernel_op_198 * tmp_kernel_op_61 +
                      tmp_kernel_op_199 * tmp_kernel_op_70 + tmp_kernel_op_200 * tmp_kernel_op_79 +
                      tmp_kernel_op_201 * tmp_kernel_op_88 + tmp_kernel_op_202 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_220 =
                      tmp_kernel_op_204 * tmp_kernel_op_50 + tmp_kernel_op_205 * tmp_kernel_op_61 +
                      tmp_kernel_op_206 * tmp_kernel_op_70 + tmp_kernel_op_207 * tmp_kernel_op_79 +
                      tmp_kernel_op_208 * tmp_kernel_op_88 + tmp_kernel_op_209 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_221 =
                      tmp_kernel_op_211 * tmp_kernel_op_50 + tmp_kernel_op_212 * tmp_kernel_op_61 +
                      tmp_kernel_op_213 * tmp_kernel_op_70 + tmp_kernel_op_214 * tmp_kernel_op_79 +
                      tmp_kernel_op_215 * tmp_kernel_op_88 + tmp_kernel_op_216 * tmp_kernel_op_97;
                  const walberla::float64 tmp_kernel_op_222 =
                      tmp_kernel_op_197 * tmp_kernel_op_49 + tmp_kernel_op_198 * tmp_kernel_op_60 +
                      tmp_kernel_op_199 * tmp_kernel_op_69 + tmp_kernel_op_200 * tmp_kernel_op_78 +
                      tmp_kernel_op_201 * tmp_kernel_op_87 + tmp_kernel_op_202 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_223 =
                      tmp_kernel_op_204 * tmp_kernel_op_49 + tmp_kernel_op_205 * tmp_kernel_op_60 +
                      tmp_kernel_op_206 * tmp_kernel_op_69 + tmp_kernel_op_207 * tmp_kernel_op_78 +
                      tmp_kernel_op_208 * tmp_kernel_op_87 + tmp_kernel_op_209 * tmp_kernel_op_96;
                  const walberla::float64 tmp_kernel_op_224 =
                      tmp_kernel_op_211 * tmp_kernel_op_49 + tmp_kernel_op_212 * tmp_kernel_op_60 +
                      tmp_kernel_op_213 * tmp_kernel_op_69 + tmp_kernel_op_214 * tmp_kernel_op_78 +
                      tmp_kernel_op_215 * tmp_kernel_op_87 + tmp_kernel_op_216 * tmp_kernel_op_96;
                  const int64_t           tmp_kernel_op_225 = tmp_kernel_op_6;
                  const walberla::float64 tmp_kernel_op_226 =
                      tmp_kernel_op_123 * tmp_kernel_op_197 + tmp_kernel_op_124 * tmp_kernel_op_198 +
                      tmp_kernel_op_125 * tmp_kernel_op_199 + tmp_kernel_op_126 * tmp_kernel_op_200 +
                      tmp_kernel_op_127 * tmp_kernel_op_201 + tmp_kernel_op_128 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_227 =
                      tmp_kernel_op_130 * tmp_kernel_op_197 + tmp_kernel_op_131 * tmp_kernel_op_198 +
                      tmp_kernel_op_132 * tmp_kernel_op_199 + tmp_kernel_op_133 * tmp_kernel_op_200 +
                      tmp_kernel_op_134 * tmp_kernel_op_201 + tmp_kernel_op_135 * tmp_kernel_op_202;
                  const walberla::float64 tmp_kernel_op_228 =
                      tmp_kernel_op_130 * tmp_kernel_op_204 + tmp_kernel_op_131 * tmp_kernel_op_205 +
                      tmp_kernel_op_132 * tmp_kernel_op_206 + tmp_kernel_op_133 * tmp_kernel_op_207 +
                      tmp_kernel_op_134 * tmp_kernel_op_208 + tmp_kernel_op_135 * tmp_kernel_op_209;
                  const walberla::float64 elMat_0_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_0_1 = tmp_kernel_op_102;
                  const walberla::float64 elMat_0_2 = tmp_kernel_op_109;
                  const walberla::float64 elMat_0_3 = tmp_kernel_op_111;
                  const walberla::float64 elMat_0_4 = tmp_kernel_op_112;
                  const walberla::float64 elMat_0_5 = tmp_kernel_op_113;
                  const walberla::float64 elMat_0_6 = tmp_kernel_op_114;
                  const walberla::float64 elMat_0_7 = tmp_kernel_op_122;
                  const walberla::float64 elMat_0_8 = tmp_kernel_op_129;
                  const walberla::float64 elMat_0_9 = tmp_kernel_op_136;
                  const walberla::float64 elMat_1_0 = tmp_kernel_op_102;
                  const walberla::float64 elMat_1_1 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_1_2 = tmp_kernel_op_149;
                  const walberla::float64 elMat_1_3 = tmp_kernel_op_150;
                  const walberla::float64 elMat_1_4 = tmp_kernel_op_151;
                  const walberla::float64 elMat_1_5 = tmp_kernel_op_152;
                  const walberla::float64 elMat_1_6 = tmp_kernel_op_153;
                  const walberla::float64 elMat_1_7 = tmp_kernel_op_154;
                  const walberla::float64 elMat_1_8 = tmp_kernel_op_155;
                  const walberla::float64 elMat_1_9 = tmp_kernel_op_156;
                  const walberla::float64 elMat_2_0 = tmp_kernel_op_109;
                  const walberla::float64 elMat_2_1 = tmp_kernel_op_149;
                  const walberla::float64 elMat_2_2 =
                      tmp_kernel_op_137 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_138 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_139 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_140 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_141 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_142 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMat_2_3 = tmp_kernel_op_163;
                  const walberla::float64 elMat_2_4 = tmp_kernel_op_164;
                  const walberla::float64 elMat_2_5 = tmp_kernel_op_165;
                  const walberla::float64 elMat_2_6 = tmp_kernel_op_166;
                  const walberla::float64 elMat_2_7 = tmp_kernel_op_167;
                  const walberla::float64 elMat_2_8 = tmp_kernel_op_168;
                  const walberla::float64 elMat_2_9 = tmp_kernel_op_169;
                  const walberla::float64 elMat_3_0 = tmp_kernel_op_111;
                  const walberla::float64 elMat_3_1 = tmp_kernel_op_150;
                  const walberla::float64 elMat_3_2 = tmp_kernel_op_163;
                  const walberla::float64 elMat_3_3 = tmp_kernel_op_137 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_138 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_139 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_140 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_141 * ( ( walberla::float64 )( tmp_kernel_op_170 ) ) +
                                                      tmp_kernel_op_142 * ( ( walberla::float64 )( tmp_kernel_op_170 ) );
                  const walberla::float64 elMat_3_4 = tmp_kernel_op_177;
                  const walberla::float64 elMat_3_5 = tmp_kernel_op_178;
                  const walberla::float64 elMat_3_6 = tmp_kernel_op_179;
                  const walberla::float64 elMat_3_7 = tmp_kernel_op_180;
                  const walberla::float64 elMat_3_8 = tmp_kernel_op_181;
                  const walberla::float64 elMat_3_9 = tmp_kernel_op_182;
                  const walberla::float64 elMat_4_0 = tmp_kernel_op_112;
                  const walberla::float64 elMat_4_1 = tmp_kernel_op_151;
                  const walberla::float64 elMat_4_2 = tmp_kernel_op_164;
                  const walberla::float64 elMat_4_3 = tmp_kernel_op_177;
                  const walberla::float64 elMat_4_4 = tmp_kernel_op_13 * tmp_kernel_op_184 + tmp_kernel_op_183 * tmp_kernel_op_2 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_20 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_27 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_34 + tmp_kernel_op_188 * tmp_kernel_op_41;
                  const walberla::float64 elMat_4_5 = tmp_kernel_op_189;
                  const walberla::float64 elMat_4_6 = tmp_kernel_op_196;
                  const walberla::float64 elMat_4_7 = tmp_kernel_op_203;
                  const walberla::float64 elMat_4_8 = tmp_kernel_op_210;
                  const walberla::float64 elMat_4_9 = tmp_kernel_op_217;
                  const walberla::float64 elMat_5_0 = tmp_kernel_op_113;
                  const walberla::float64 elMat_5_1 = tmp_kernel_op_152;
                  const walberla::float64 elMat_5_2 = tmp_kernel_op_165;
                  const walberla::float64 elMat_5_3 = tmp_kernel_op_178;
                  const walberla::float64 elMat_5_4 = tmp_kernel_op_189;
                  const walberla::float64 elMat_5_5 = tmp_kernel_op_1 * tmp_kernel_op_183 + tmp_kernel_op_12 * tmp_kernel_op_184 +
                                                      tmp_kernel_op_185 * tmp_kernel_op_19 +
                                                      tmp_kernel_op_186 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_187 * tmp_kernel_op_33 + tmp_kernel_op_188 * tmp_kernel_op_40;
                  const walberla::float64 elMat_5_6 = tmp_kernel_op_218;
                  const walberla::float64 elMat_5_7 = tmp_kernel_op_219;
                  const walberla::float64 elMat_5_8 = tmp_kernel_op_220;
                  const walberla::float64 elMat_5_9 = tmp_kernel_op_221;
                  const walberla::float64 elMat_6_0 = tmp_kernel_op_114;
                  const walberla::float64 elMat_6_1 = tmp_kernel_op_153;
                  const walberla::float64 elMat_6_2 = tmp_kernel_op_166;
                  const walberla::float64 elMat_6_3 = tmp_kernel_op_179;
                  const walberla::float64 elMat_6_4 = tmp_kernel_op_196;
                  const walberla::float64 elMat_6_5 = tmp_kernel_op_218;
                  const walberla::float64 elMat_6_6 = tmp_kernel_op_1 * tmp_kernel_op_190 + tmp_kernel_op_12 * tmp_kernel_op_191 +
                                                      tmp_kernel_op_19 * tmp_kernel_op_192 +
                                                      tmp_kernel_op_193 * tmp_kernel_op_26 +
                                                      tmp_kernel_op_194 * tmp_kernel_op_33 + tmp_kernel_op_195 * tmp_kernel_op_40;
                  const walberla::float64 elMat_6_7 = tmp_kernel_op_222;
                  const walberla::float64 elMat_6_8 = tmp_kernel_op_223;
                  const walberla::float64 elMat_6_9 = tmp_kernel_op_224;
                  const walberla::float64 elMat_7_0 = tmp_kernel_op_122;
                  const walberla::float64 elMat_7_1 = tmp_kernel_op_154;
                  const walberla::float64 elMat_7_2 = tmp_kernel_op_167;
                  const walberla::float64 elMat_7_3 = tmp_kernel_op_180;
                  const walberla::float64 elMat_7_4 = tmp_kernel_op_203;
                  const walberla::float64 elMat_7_5 = tmp_kernel_op_219;
                  const walberla::float64 elMat_7_6 = tmp_kernel_op_222;
                  const walberla::float64 elMat_7_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_225 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) *
                                                                    ( -tmp_kernel_op_225 - tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMat_7_8 = tmp_kernel_op_226;
                  const walberla::float64 elMat_7_9 = tmp_kernel_op_227;
                  const walberla::float64 elMat_8_0 = tmp_kernel_op_129;
                  const walberla::float64 elMat_8_1 = tmp_kernel_op_155;
                  const walberla::float64 elMat_8_2 = tmp_kernel_op_168;
                  const walberla::float64 elMat_8_3 = tmp_kernel_op_181;
                  const walberla::float64 elMat_8_4 = tmp_kernel_op_210;
                  const walberla::float64 elMat_8_5 = tmp_kernel_op_220;
                  const walberla::float64 elMat_8_6 = tmp_kernel_op_223;
                  const walberla::float64 elMat_8_7 = tmp_kernel_op_226;
                  const walberla::float64 elMat_8_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMat_8_9 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_0 = tmp_kernel_op_136;
                  const walberla::float64 elMat_9_1 = tmp_kernel_op_156;
                  const walberla::float64 elMat_9_2 = tmp_kernel_op_169;
                  const walberla::float64 elMat_9_3 = tmp_kernel_op_182;
                  const walberla::float64 elMat_9_4 = tmp_kernel_op_217;
                  const walberla::float64 elMat_9_5 = tmp_kernel_op_221;
                  const walberla::float64 elMat_9_6 = tmp_kernel_op_224;
                  const walberla::float64 elMat_9_7 = tmp_kernel_op_227;
                  const walberla::float64 elMat_9_8 = tmp_kernel_op_228;
                  const walberla::float64 elMat_9_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );

                  std::vector< uint_t > _data_rowIdx( 10 );
                  std::vector< uint_t > _data_colIdx( 10 );
                  std::vector< real_t > _data_mat( 100 );

                  _data_rowIdx[0] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[1] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_rowIdx[2] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[3] =
                      ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_rowIdx[4] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[5] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[6] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[7] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[8] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_rowIdx[9] =
                      ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );
                  _data_colIdx[0] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[1] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) +
                                                     1] ) );
                  _data_colIdx[2] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                       ( 6 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[3] =
                      ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                     ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                         ( micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) ) -
                                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                         ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                       ( 6 ) )] ) );
                  _data_colIdx[4] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[5] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                       ( micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[6] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[7] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                       ( micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[8] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                   5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) )] ) );
                  _data_colIdx[9] =
                      ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                   ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                   6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                   ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                       ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                     ( 6 ) ) +
                                                   1] ) );

                  /* Apply basis transformation */

                  _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
                  _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
                  _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
                  _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
                  _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
                  _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
                  _data_mat[6]  = ( (real_t) ( elMat_0_6 ) );
                  _data_mat[7]  = ( (real_t) ( elMat_0_7 ) );
                  _data_mat[8]  = ( (real_t) ( elMat_0_8 ) );
                  _data_mat[9]  = ( (real_t) ( elMat_0_9 ) );
                  _data_mat[10] = ( (real_t) ( elMat_1_0 ) );
                  _data_mat[11] = ( (real_t) ( elMat_1_1 ) );
                  _data_mat[12] = ( (real_t) ( elMat_1_2 ) );
                  _data_mat[13] = ( (real_t) ( elMat_1_3 ) );
                  _data_mat[14] = ( (real_t) ( elMat_1_4 ) );
                  _data_mat[15] = ( (real_t) ( elMat_1_5 ) );
                  _data_mat[16] = ( (real_t) ( elMat_1_6 ) );
                  _data_mat[17] = ( (real_t) ( elMat_1_7 ) );
                  _data_mat[18] = ( (real_t) ( elMat_1_8 ) );
                  _data_mat[19] = ( (real_t) ( elMat_1_9 ) );
                  _data_mat[20] = ( (real_t) ( elMat_2_0 ) );
                  _data_mat[21] = ( (real_t) ( elMat_2_1 ) );
                  _data_mat[22] = ( (real_t) ( elMat_2_2 ) );
                  _data_mat[23] = ( (real_t) ( elMat_2_3 ) );
                  _data_mat[24] = ( (real_t) ( elMat_2_4 ) );
                  _data_mat[25] = ( (real_t) ( elMat_2_5 ) );
                  _data_mat[26] = ( (real_t) ( elMat_2_6 ) );
                  _data_mat[27] = ( (real_t) ( elMat_2_7 ) );
                  _data_mat[28] = ( (real_t) ( elMat_2_8 ) );
                  _data_mat[29] = ( (real_t) ( elMat_2_9 ) );
                  _data_mat[30] = ( (real_t) ( elMat_3_0 ) );
                  _data_mat[31] = ( (real_t) ( elMat_3_1 ) );
                  _data_mat[32] = ( (real_t) ( elMat_3_2 ) );
                  _data_mat[33] = ( (real_t) ( elMat_3_3 ) );
                  _data_mat[34] = ( (real_t) ( elMat_3_4 ) );
                  _data_mat[35] = ( (real_t) ( elMat_3_5 ) );
                  _data_mat[36] = ( (real_t) ( elMat_3_6 ) );
                  _data_mat[37] = ( (real_t) ( elMat_3_7 ) );
                  _data_mat[38] = ( (real_t) ( elMat_3_8 ) );
                  _data_mat[39] = ( (real_t) ( elMat_3_9 ) );
                  _data_mat[40] = ( (real_t) ( elMat_4_0 ) );
                  _data_mat[41] = ( (real_t) ( elMat_4_1 ) );
                  _data_mat[42] = ( (real_t) ( elMat_4_2 ) );
                  _data_mat[43] = ( (real_t) ( elMat_4_3 ) );
                  _data_mat[44] = ( (real_t) ( elMat_4_4 ) );
                  _data_mat[45] = ( (real_t) ( elMat_4_5 ) );
                  _data_mat[46] = ( (real_t) ( elMat_4_6 ) );
                  _data_mat[47] = ( (real_t) ( elMat_4_7 ) );
                  _data_mat[48] = ( (real_t) ( elMat_4_8 ) );
                  _data_mat[49] = ( (real_t) ( elMat_4_9 ) );
                  _data_mat[50] = ( (real_t) ( elMat_5_0 ) );
                  _data_mat[51] = ( (real_t) ( elMat_5_1 ) );
                  _data_mat[52] = ( (real_t) ( elMat_5_2 ) );
                  _data_mat[53] = ( (real_t) ( elMat_5_3 ) );
                  _data_mat[54] = ( (real_t) ( elMat_5_4 ) );
                  _data_mat[55] = ( (real_t) ( elMat_5_5 ) );
                  _data_mat[56] = ( (real_t) ( elMat_5_6 ) );
                  _data_mat[57] = ( (real_t) ( elMat_5_7 ) );
                  _data_mat[58] = ( (real_t) ( elMat_5_8 ) );
                  _data_mat[59] = ( (real_t) ( elMat_5_9 ) );
                  _data_mat[60] = ( (real_t) ( elMat_6_0 ) );
                  _data_mat[61] = ( (real_t) ( elMat_6_1 ) );
                  _data_mat[62] = ( (real_t) ( elMat_6_2 ) );
                  _data_mat[63] = ( (real_t) ( elMat_6_3 ) );
                  _data_mat[64] = ( (real_t) ( elMat_6_4 ) );
                  _data_mat[65] = ( (real_t) ( elMat_6_5 ) );
                  _data_mat[66] = ( (real_t) ( elMat_6_6 ) );
                  _data_mat[67] = ( (real_t) ( elMat_6_7 ) );
                  _data_mat[68] = ( (real_t) ( elMat_6_8 ) );
                  _data_mat[69] = ( (real_t) ( elMat_6_9 ) );
                  _data_mat[70] = ( (real_t) ( elMat_7_0 ) );
                  _data_mat[71] = ( (real_t) ( elMat_7_1 ) );
                  _data_mat[72] = ( (real_t) ( elMat_7_2 ) );
                  _data_mat[73] = ( (real_t) ( elMat_7_3 ) );
                  _data_mat[74] = ( (real_t) ( elMat_7_4 ) );
                  _data_mat[75] = ( (real_t) ( elMat_7_5 ) );
                  _data_mat[76] = ( (real_t) ( elMat_7_6 ) );
                  _data_mat[77] = ( (real_t) ( elMat_7_7 ) );
                  _data_mat[78] = ( (real_t) ( elMat_7_8 ) );
                  _data_mat[79] = ( (real_t) ( elMat_7_9 ) );
                  _data_mat[80] = ( (real_t) ( elMat_8_0 ) );
                  _data_mat[81] = ( (real_t) ( elMat_8_1 ) );
                  _data_mat[82] = ( (real_t) ( elMat_8_2 ) );
                  _data_mat[83] = ( (real_t) ( elMat_8_3 ) );
                  _data_mat[84] = ( (real_t) ( elMat_8_4 ) );
                  _data_mat[85] = ( (real_t) ( elMat_8_5 ) );
                  _data_mat[86] = ( (real_t) ( elMat_8_6 ) );
                  _data_mat[87] = ( (real_t) ( elMat_8_7 ) );
                  _data_mat[88] = ( (real_t) ( elMat_8_8 ) );
                  _data_mat[89] = ( (real_t) ( elMat_8_9 ) );
                  _data_mat[90] = ( (real_t) ( elMat_9_0 ) );
                  _data_mat[91] = ( (real_t) ( elMat_9_1 ) );
                  _data_mat[92] = ( (real_t) ( elMat_9_2 ) );
                  _data_mat[93] = ( (real_t) ( elMat_9_3 ) );
                  _data_mat[94] = ( (real_t) ( elMat_9_4 ) );
                  _data_mat[95] = ( (real_t) ( elMat_9_5 ) );
                  _data_mat[96] = ( (real_t) ( elMat_9_6 ) );
                  _data_mat[97] = ( (real_t) ( elMat_9_7 ) );
                  _data_mat[98] = ( (real_t) ( elMat_9_8 ) );
                  _data_mat[99] = ( (real_t) ( elMat_9_9 ) );

                  mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
               }
      }
   }
}
void P2ElementwiseBoundaryMass::toMatrix_P2ElementwiseBoundaryMass_facet_id_0_macro_2D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 jac_affine_0_0_GRAY = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
            for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 + micro_edges_per_macro_edge; ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 =
                   tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_8 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_10 = 0.25;
               const walberla::float64 tmp_kernel_op_11 = tmp_kernel_op_10 * 2.0;
               const walberla::float64 tmp_kernel_op_12 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_13 =
                   tmp_kernel_op_11 + tmp_kernel_op_12 - 1.5 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_8 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_15 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_15 * 2.0;
               const walberla::float64 tmp_kernel_op_17 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_18 =
                   tmp_kernel_op_16 + tmp_kernel_op_17 - 2.6618950038622251 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_19 = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_20 = tmp_kernel_op_1 - 0.1127016653792583;
               const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_7 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_11 - 0.5;
               const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_13 * tmp_kernel_op_14;
               const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_16 - 0.8872983346207417;
               const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_18 * tmp_kernel_op_19;
               const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_20 * tmp_kernel_op_21 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_23 +
                                                          tmp_kernel_op_24 * tmp_kernel_op_25;
               const int64_t           tmp_kernel_op_27 = tmp_kernel_op_5;
               const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_23 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_25 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_29 =
                   tmp_kernel_op_12 * tmp_kernel_op_23 + tmp_kernel_op_17 * tmp_kernel_op_25 + tmp_kernel_op_21 * tmp_kernel_op_3;
               const int64_t           tmp_kernel_op_30 = tmp_kernel_op_4 * 4;
               const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_32 = -tmp_kernel_op_12 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_33 = -tmp_kernel_op_17 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_21 * tmp_kernel_op_31 +
                                                          tmp_kernel_op_23 * tmp_kernel_op_32 +
                                                          tmp_kernel_op_25 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_0 * -4.0 - tmp_kernel_op_3 + 0.45080666151703319;
               const walberla::float64 tmp_kernel_op_36 = tmp_kernel_op_10 * -4.0 - tmp_kernel_op_12 + 2.0;
               const walberla::float64 tmp_kernel_op_37 = tmp_kernel_op_15 * -4.0 - tmp_kernel_op_17 + 3.5491933384829668;
               const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_21 * tmp_kernel_op_35 +
                                                          tmp_kernel_op_23 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_25 * tmp_kernel_op_37;
               const walberla::float64 tmp_kernel_op_39 = tmp_kernel_op_20 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_40 = tmp_kernel_op_14 * tmp_kernel_op_22;
               const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_19 * tmp_kernel_op_24;
               const walberla::float64 tmp_kernel_op_42 = tmp_kernel_op_39 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_40 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_43 =
                   tmp_kernel_op_12 * tmp_kernel_op_40 + tmp_kernel_op_17 * tmp_kernel_op_41 + tmp_kernel_op_3 * tmp_kernel_op_39;
               const walberla::float64 tmp_kernel_op_44 = tmp_kernel_op_31 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_41;
               const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_35 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_41;
               const int64_t           tmp_kernel_op_46 = ( (int64_t) ( ( tmp_kernel_op_27 * tmp_kernel_op_27 ) ) );
               const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_50 =
                   tmp_kernel_op_12 * tmp_kernel_op_48 + tmp_kernel_op_17 * tmp_kernel_op_49 + tmp_kernel_op_3 * tmp_kernel_op_47;
               const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_31 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_49;
               const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_35 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_49;
               const int64_t           tmp_kernel_op_53 = tmp_kernel_op_4 * 16;
               const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_31 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_14 * tmp_kernel_op_32;
               const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_19 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_57 =
                   tmp_kernel_op_12 * tmp_kernel_op_55 + tmp_kernel_op_17 * tmp_kernel_op_56 + tmp_kernel_op_3 * tmp_kernel_op_54;
               const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_12 * tmp_kernel_op_14 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_17 * tmp_kernel_op_19 * tmp_kernel_op_37 +
                                                          tmp_kernel_op_3 * tmp_kernel_op_35 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_35 * tmp_kernel_op_54 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_55 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_56;
               const walberla::float64 elMat_0_0 = ( tmp_kernel_op_13 * tmp_kernel_op_13 ) * tmp_kernel_op_14 +
                                                   ( tmp_kernel_op_18 * tmp_kernel_op_18 ) * tmp_kernel_op_19 +
                                                   ( tmp_kernel_op_7 * tmp_kernel_op_7 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_0_1 = tmp_kernel_op_26;
               const walberla::float64 elMat_0_2 = tmp_kernel_op_28;
               const walberla::float64 elMat_0_3 = tmp_kernel_op_29;
               const walberla::float64 elMat_0_4 = tmp_kernel_op_34;
               const walberla::float64 elMat_0_5 = tmp_kernel_op_38;
               const walberla::float64 elMat_1_0 = tmp_kernel_op_26;
               const walberla::float64 elMat_1_1 = tmp_kernel_op_14 * ( tmp_kernel_op_22 * tmp_kernel_op_22 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_24 * tmp_kernel_op_24 ) +
                                                   ( tmp_kernel_op_20 * tmp_kernel_op_20 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_1_2 = tmp_kernel_op_42;
               const walberla::float64 elMat_1_3 = tmp_kernel_op_43;
               const walberla::float64 elMat_1_4 = tmp_kernel_op_44;
               const walberla::float64 elMat_1_5 = tmp_kernel_op_45;
               const walberla::float64 elMat_2_0 = tmp_kernel_op_28;
               const walberla::float64 elMat_2_1 = tmp_kernel_op_42;
               const walberla::float64 elMat_2_2 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                                   tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                                   tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
               const walberla::float64 elMat_2_3 = tmp_kernel_op_50;
               const walberla::float64 elMat_2_4 = tmp_kernel_op_51;
               const walberla::float64 elMat_2_5 = tmp_kernel_op_52;
               const walberla::float64 elMat_3_0 = tmp_kernel_op_29;
               const walberla::float64 elMat_3_1 = tmp_kernel_op_43;
               const walberla::float64 elMat_3_2 = tmp_kernel_op_50;
               const walberla::float64 elMat_3_3 =
                   tmp_kernel_op_0 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                   tmp_kernel_op_10 * tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                   tmp_kernel_op_15 * tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
               const walberla::float64 elMat_3_4 = tmp_kernel_op_57;
               const walberla::float64 elMat_3_5 = tmp_kernel_op_58;
               const walberla::float64 elMat_4_0 = tmp_kernel_op_34;
               const walberla::float64 elMat_4_1 = tmp_kernel_op_44;
               const walberla::float64 elMat_4_2 = tmp_kernel_op_51;
               const walberla::float64 elMat_4_3 = tmp_kernel_op_57;
               const walberla::float64 elMat_4_4 = tmp_kernel_op_14 * ( tmp_kernel_op_32 * tmp_kernel_op_32 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_33 * tmp_kernel_op_33 ) +
                                                   ( tmp_kernel_op_31 * tmp_kernel_op_31 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_4_5 = tmp_kernel_op_59;
               const walberla::float64 elMat_5_0 = tmp_kernel_op_38;
               const walberla::float64 elMat_5_1 = tmp_kernel_op_45;
               const walberla::float64 elMat_5_2 = tmp_kernel_op_52;
               const walberla::float64 elMat_5_3 = tmp_kernel_op_58;
               const walberla::float64 elMat_5_4 = tmp_kernel_op_59;
               const walberla::float64 elMat_5_5 = tmp_kernel_op_14 * ( tmp_kernel_op_36 * tmp_kernel_op_36 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_37 * tmp_kernel_op_37 ) +
                                                   ( tmp_kernel_op_35 * tmp_kernel_op_35 ) * tmp_kernel_op_9;

               std::vector< uint_t > _data_rowIdx( 6 );
               std::vector< uint_t > _data_colIdx( 6 );
               std::vector< real_t > _data_mat( 36 );

               _data_rowIdx[0] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_rowIdx[1] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] ) );
               _data_rowIdx[2] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] ) );
               _data_rowIdx[3] = ( (
                   uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                             ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] ) );
               _data_rowIdx[4] =
                   ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) /
                                                      ( 2 ) )] ) );
               _data_rowIdx[5] = ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                              ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[0] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[1] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] ) );
               _data_colIdx[2] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] ) );
               _data_colIdx[3] = ( (
                   uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                             ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[4] =
                   ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) /
                                                      ( 2 ) )] ) );
               _data_colIdx[5] = ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                              ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );

               /* Apply basis transformation */

               _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
               _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
               _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
               _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
               _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
               _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
               _data_mat[6]  = ( (real_t) ( elMat_1_0 ) );
               _data_mat[7]  = ( (real_t) ( elMat_1_1 ) );
               _data_mat[8]  = ( (real_t) ( elMat_1_2 ) );
               _data_mat[9]  = ( (real_t) ( elMat_1_3 ) );
               _data_mat[10] = ( (real_t) ( elMat_1_4 ) );
               _data_mat[11] = ( (real_t) ( elMat_1_5 ) );
               _data_mat[12] = ( (real_t) ( elMat_2_0 ) );
               _data_mat[13] = ( (real_t) ( elMat_2_1 ) );
               _data_mat[14] = ( (real_t) ( elMat_2_2 ) );
               _data_mat[15] = ( (real_t) ( elMat_2_3 ) );
               _data_mat[16] = ( (real_t) ( elMat_2_4 ) );
               _data_mat[17] = ( (real_t) ( elMat_2_5 ) );
               _data_mat[18] = ( (real_t) ( elMat_3_0 ) );
               _data_mat[19] = ( (real_t) ( elMat_3_1 ) );
               _data_mat[20] = ( (real_t) ( elMat_3_2 ) );
               _data_mat[21] = ( (real_t) ( elMat_3_3 ) );
               _data_mat[22] = ( (real_t) ( elMat_3_4 ) );
               _data_mat[23] = ( (real_t) ( elMat_3_5 ) );
               _data_mat[24] = ( (real_t) ( elMat_4_0 ) );
               _data_mat[25] = ( (real_t) ( elMat_4_1 ) );
               _data_mat[26] = ( (real_t) ( elMat_4_2 ) );
               _data_mat[27] = ( (real_t) ( elMat_4_3 ) );
               _data_mat[28] = ( (real_t) ( elMat_4_4 ) );
               _data_mat[29] = ( (real_t) ( elMat_4_5 ) );
               _data_mat[30] = ( (real_t) ( elMat_5_0 ) );
               _data_mat[31] = ( (real_t) ( elMat_5_1 ) );
               _data_mat[32] = ( (real_t) ( elMat_5_2 ) );
               _data_mat[33] = ( (real_t) ( elMat_5_3 ) );
               _data_mat[34] = ( (real_t) ( elMat_5_4 ) );
               _data_mat[35] = ( (real_t) ( elMat_5_5 ) );

               mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
            }
      }
   }
}
void P2ElementwiseBoundaryMass::toMatrix_P2ElementwiseBoundaryMass_facet_id_1_macro_2D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_2_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 jac_affine_0_0_GRAY = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < micro_edges_per_macro_edge; ctr_1 += 1 )
            for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 =
                   tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_8 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_10 = 0.25;
               const walberla::float64 tmp_kernel_op_11 = tmp_kernel_op_10 * 2.0;
               const walberla::float64 tmp_kernel_op_12 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_13 =
                   tmp_kernel_op_11 + tmp_kernel_op_12 - 1.5 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_8 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_15 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_15 * 2.0;
               const walberla::float64 tmp_kernel_op_17 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_18 =
                   tmp_kernel_op_16 + tmp_kernel_op_17 - 2.6618950038622251 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_19 = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_20 = tmp_kernel_op_1 - 0.1127016653792583;
               const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_7 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_11 - 0.5;
               const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_13 * tmp_kernel_op_14;
               const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_16 - 0.8872983346207417;
               const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_18 * tmp_kernel_op_19;
               const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_20 * tmp_kernel_op_21 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_23 +
                                                          tmp_kernel_op_24 * tmp_kernel_op_25;
               const int64_t           tmp_kernel_op_27 = tmp_kernel_op_5;
               const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_23 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_25 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_29 =
                   tmp_kernel_op_12 * tmp_kernel_op_23 + tmp_kernel_op_17 * tmp_kernel_op_25 + tmp_kernel_op_21 * tmp_kernel_op_3;
               const int64_t           tmp_kernel_op_30 = tmp_kernel_op_4 * 4;
               const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_32 = -tmp_kernel_op_12 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_33 = -tmp_kernel_op_17 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_21 * tmp_kernel_op_31 +
                                                          tmp_kernel_op_23 * tmp_kernel_op_32 +
                                                          tmp_kernel_op_25 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_0 * -4.0 - tmp_kernel_op_3 + 0.45080666151703319;
               const walberla::float64 tmp_kernel_op_36 = tmp_kernel_op_10 * -4.0 - tmp_kernel_op_12 + 2.0;
               const walberla::float64 tmp_kernel_op_37 = tmp_kernel_op_15 * -4.0 - tmp_kernel_op_17 + 3.5491933384829668;
               const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_21 * tmp_kernel_op_35 +
                                                          tmp_kernel_op_23 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_25 * tmp_kernel_op_37;
               const walberla::float64 tmp_kernel_op_39 = tmp_kernel_op_20 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_40 = tmp_kernel_op_14 * tmp_kernel_op_22;
               const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_19 * tmp_kernel_op_24;
               const walberla::float64 tmp_kernel_op_42 = tmp_kernel_op_39 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_40 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_43 =
                   tmp_kernel_op_12 * tmp_kernel_op_40 + tmp_kernel_op_17 * tmp_kernel_op_41 + tmp_kernel_op_3 * tmp_kernel_op_39;
               const walberla::float64 tmp_kernel_op_44 = tmp_kernel_op_31 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_41;
               const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_35 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_41;
               const int64_t           tmp_kernel_op_46 = ( (int64_t) ( ( tmp_kernel_op_27 * tmp_kernel_op_27 ) ) );
               const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_50 =
                   tmp_kernel_op_12 * tmp_kernel_op_48 + tmp_kernel_op_17 * tmp_kernel_op_49 + tmp_kernel_op_3 * tmp_kernel_op_47;
               const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_31 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_49;
               const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_35 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_49;
               const int64_t           tmp_kernel_op_53 = tmp_kernel_op_4 * 16;
               const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_31 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_14 * tmp_kernel_op_32;
               const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_19 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_57 =
                   tmp_kernel_op_12 * tmp_kernel_op_55 + tmp_kernel_op_17 * tmp_kernel_op_56 + tmp_kernel_op_3 * tmp_kernel_op_54;
               const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_12 * tmp_kernel_op_14 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_17 * tmp_kernel_op_19 * tmp_kernel_op_37 +
                                                          tmp_kernel_op_3 * tmp_kernel_op_35 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_35 * tmp_kernel_op_54 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_55 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_56;
               const walberla::float64 elMat_0_0 = ( tmp_kernel_op_13 * tmp_kernel_op_13 ) * tmp_kernel_op_14 +
                                                   ( tmp_kernel_op_18 * tmp_kernel_op_18 ) * tmp_kernel_op_19 +
                                                   ( tmp_kernel_op_7 * tmp_kernel_op_7 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_0_1 = tmp_kernel_op_26;
               const walberla::float64 elMat_0_2 = tmp_kernel_op_28;
               const walberla::float64 elMat_0_3 = tmp_kernel_op_29;
               const walberla::float64 elMat_0_4 = tmp_kernel_op_34;
               const walberla::float64 elMat_0_5 = tmp_kernel_op_38;
               const walberla::float64 elMat_1_0 = tmp_kernel_op_26;
               const walberla::float64 elMat_1_1 = tmp_kernel_op_14 * ( tmp_kernel_op_22 * tmp_kernel_op_22 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_24 * tmp_kernel_op_24 ) +
                                                   ( tmp_kernel_op_20 * tmp_kernel_op_20 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_1_2 = tmp_kernel_op_42;
               const walberla::float64 elMat_1_3 = tmp_kernel_op_43;
               const walberla::float64 elMat_1_4 = tmp_kernel_op_44;
               const walberla::float64 elMat_1_5 = tmp_kernel_op_45;
               const walberla::float64 elMat_2_0 = tmp_kernel_op_28;
               const walberla::float64 elMat_2_1 = tmp_kernel_op_42;
               const walberla::float64 elMat_2_2 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                                   tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                                   tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
               const walberla::float64 elMat_2_3 = tmp_kernel_op_50;
               const walberla::float64 elMat_2_4 = tmp_kernel_op_51;
               const walberla::float64 elMat_2_5 = tmp_kernel_op_52;
               const walberla::float64 elMat_3_0 = tmp_kernel_op_29;
               const walberla::float64 elMat_3_1 = tmp_kernel_op_43;
               const walberla::float64 elMat_3_2 = tmp_kernel_op_50;
               const walberla::float64 elMat_3_3 =
                   tmp_kernel_op_0 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                   tmp_kernel_op_10 * tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                   tmp_kernel_op_15 * tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
               const walberla::float64 elMat_3_4 = tmp_kernel_op_57;
               const walberla::float64 elMat_3_5 = tmp_kernel_op_58;
               const walberla::float64 elMat_4_0 = tmp_kernel_op_34;
               const walberla::float64 elMat_4_1 = tmp_kernel_op_44;
               const walberla::float64 elMat_4_2 = tmp_kernel_op_51;
               const walberla::float64 elMat_4_3 = tmp_kernel_op_57;
               const walberla::float64 elMat_4_4 = tmp_kernel_op_14 * ( tmp_kernel_op_32 * tmp_kernel_op_32 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_33 * tmp_kernel_op_33 ) +
                                                   ( tmp_kernel_op_31 * tmp_kernel_op_31 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_4_5 = tmp_kernel_op_59;
               const walberla::float64 elMat_5_0 = tmp_kernel_op_38;
               const walberla::float64 elMat_5_1 = tmp_kernel_op_45;
               const walberla::float64 elMat_5_2 = tmp_kernel_op_52;
               const walberla::float64 elMat_5_3 = tmp_kernel_op_58;
               const walberla::float64 elMat_5_4 = tmp_kernel_op_59;
               const walberla::float64 elMat_5_5 = tmp_kernel_op_14 * ( tmp_kernel_op_36 * tmp_kernel_op_36 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_37 * tmp_kernel_op_37 ) +
                                                   ( tmp_kernel_op_35 * tmp_kernel_op_35 ) * tmp_kernel_op_9;

               std::vector< uint_t > _data_rowIdx( 6 );
               std::vector< uint_t > _data_colIdx( 6 );
               std::vector< real_t > _data_mat( 36 );

               _data_rowIdx[0] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_rowIdx[1] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] ) );
               _data_rowIdx[2] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] ) );
               _data_rowIdx[3] = ( (
                   uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                             ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] ) );
               _data_rowIdx[4] = ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                              ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_rowIdx[5] =
                   ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) /
                                                      ( 2 ) )] ) );
               _data_colIdx[0] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[1] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] ) );
               _data_colIdx[2] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] ) );
               _data_colIdx[3] = ( (
                   uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                             ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[4] = ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                              ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[5] =
                   ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) /
                                                      ( 2 ) )] ) );

               /* Apply basis transformation */

               _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
               _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
               _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
               _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
               _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
               _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
               _data_mat[6]  = ( (real_t) ( elMat_1_0 ) );
               _data_mat[7]  = ( (real_t) ( elMat_1_1 ) );
               _data_mat[8]  = ( (real_t) ( elMat_1_2 ) );
               _data_mat[9]  = ( (real_t) ( elMat_1_3 ) );
               _data_mat[10] = ( (real_t) ( elMat_1_4 ) );
               _data_mat[11] = ( (real_t) ( elMat_1_5 ) );
               _data_mat[12] = ( (real_t) ( elMat_2_0 ) );
               _data_mat[13] = ( (real_t) ( elMat_2_1 ) );
               _data_mat[14] = ( (real_t) ( elMat_2_2 ) );
               _data_mat[15] = ( (real_t) ( elMat_2_3 ) );
               _data_mat[16] = ( (real_t) ( elMat_2_4 ) );
               _data_mat[17] = ( (real_t) ( elMat_2_5 ) );
               _data_mat[18] = ( (real_t) ( elMat_3_0 ) );
               _data_mat[19] = ( (real_t) ( elMat_3_1 ) );
               _data_mat[20] = ( (real_t) ( elMat_3_2 ) );
               _data_mat[21] = ( (real_t) ( elMat_3_3 ) );
               _data_mat[22] = ( (real_t) ( elMat_3_4 ) );
               _data_mat[23] = ( (real_t) ( elMat_3_5 ) );
               _data_mat[24] = ( (real_t) ( elMat_4_0 ) );
               _data_mat[25] = ( (real_t) ( elMat_4_1 ) );
               _data_mat[26] = ( (real_t) ( elMat_4_2 ) );
               _data_mat[27] = ( (real_t) ( elMat_4_3 ) );
               _data_mat[28] = ( (real_t) ( elMat_4_4 ) );
               _data_mat[29] = ( (real_t) ( elMat_4_5 ) );
               _data_mat[30] = ( (real_t) ( elMat_5_0 ) );
               _data_mat[31] = ( (real_t) ( elMat_5_1 ) );
               _data_mat[32] = ( (real_t) ( elMat_5_2 ) );
               _data_mat[33] = ( (real_t) ( elMat_5_3 ) );
               _data_mat[34] = ( (real_t) ( elMat_5_4 ) );
               _data_mat[35] = ( (real_t) ( elMat_5_5 ) );

               mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
            }
      }
   }
}
void P2ElementwiseBoundaryMass::toMatrix_P2ElementwiseBoundaryMass_facet_id_2_macro_2D(
    idx_t* RESTRICT                      _data_dstEdge,
    idx_t* RESTRICT                      _data_dstVertex,
    idx_t* RESTRICT                      _data_srcEdge,
    idx_t* RESTRICT                      _data_srcVertex,
    walberla::float64                    macro_vertex_coord_id_0comp0,
    walberla::float64                    macro_vertex_coord_id_0comp1,
    walberla::float64                    macro_vertex_coord_id_1comp0,
    walberla::float64                    macro_vertex_coord_id_1comp1,
    walberla::float64                    macro_vertex_coord_id_2comp0,
    walberla::float64                    macro_vertex_coord_id_2comp1,
    std::shared_ptr< SparseMatrixProxy > mat,
    int64_t                              micro_edges_per_macro_edge,
    walberla::float64                    micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_2_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 jac_affine_0_0_GRAY     = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY     = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < micro_edges_per_macro_edge; ctr_1 += 1 )
            for ( int64_t ctr_0 = -ctr_1 + micro_edges_per_macro_edge - 1; ctr_0 < -ctr_1 + micro_edges_per_macro_edge;
                  ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 =
                   tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_8 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_10 = 0.25;
               const walberla::float64 tmp_kernel_op_11 = tmp_kernel_op_10 * 2.0;
               const walberla::float64 tmp_kernel_op_12 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_13 =
                   tmp_kernel_op_11 + tmp_kernel_op_12 - 1.5 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_8 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_15 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_15 * 2.0;
               const walberla::float64 tmp_kernel_op_17 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_18 =
                   tmp_kernel_op_16 + tmp_kernel_op_17 - 2.6618950038622251 + ( ( walberla::float64 )( tmp_kernel_op_6 ) );
               const walberla::float64 tmp_kernel_op_19 = tmp_kernel_op_8 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_20 = tmp_kernel_op_1 - 0.1127016653792583;
               const walberla::float64 tmp_kernel_op_21 = tmp_kernel_op_7 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_22 = tmp_kernel_op_11 - 0.5;
               const walberla::float64 tmp_kernel_op_23 = tmp_kernel_op_13 * tmp_kernel_op_14;
               const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_16 - 0.8872983346207417;
               const walberla::float64 tmp_kernel_op_25 = tmp_kernel_op_18 * tmp_kernel_op_19;
               const walberla::float64 tmp_kernel_op_26 = tmp_kernel_op_20 * tmp_kernel_op_21 +
                                                          tmp_kernel_op_22 * tmp_kernel_op_23 +
                                                          tmp_kernel_op_24 * tmp_kernel_op_25;
               const int64_t           tmp_kernel_op_27 = tmp_kernel_op_5;
               const walberla::float64 tmp_kernel_op_28 = tmp_kernel_op_21 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_23 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_25 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_29 =
                   tmp_kernel_op_12 * tmp_kernel_op_23 + tmp_kernel_op_17 * tmp_kernel_op_25 + tmp_kernel_op_21 * tmp_kernel_op_3;
               const int64_t           tmp_kernel_op_30 = tmp_kernel_op_4 * 4;
               const walberla::float64 tmp_kernel_op_31 = -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_32 = -tmp_kernel_op_12 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_33 = -tmp_kernel_op_17 + ( ( walberla::float64 )( -tmp_kernel_op_30 ) );
               const walberla::float64 tmp_kernel_op_34 = tmp_kernel_op_21 * tmp_kernel_op_31 +
                                                          tmp_kernel_op_23 * tmp_kernel_op_32 +
                                                          tmp_kernel_op_25 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_35 = tmp_kernel_op_0 * -4.0 - tmp_kernel_op_3 + 0.45080666151703319;
               const walberla::float64 tmp_kernel_op_36 = tmp_kernel_op_10 * -4.0 - tmp_kernel_op_12 + 2.0;
               const walberla::float64 tmp_kernel_op_37 = tmp_kernel_op_15 * -4.0 - tmp_kernel_op_17 + 3.5491933384829668;
               const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_21 * tmp_kernel_op_35 +
                                                          tmp_kernel_op_23 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_25 * tmp_kernel_op_37;
               const walberla::float64 tmp_kernel_op_39 = tmp_kernel_op_20 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_40 = tmp_kernel_op_14 * tmp_kernel_op_22;
               const walberla::float64 tmp_kernel_op_41 = tmp_kernel_op_19 * tmp_kernel_op_24;
               const walberla::float64 tmp_kernel_op_42 = tmp_kernel_op_39 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_40 * ( ( walberla::float64 )( tmp_kernel_op_27 ) ) +
                                                          tmp_kernel_op_41 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_43 =
                   tmp_kernel_op_12 * tmp_kernel_op_40 + tmp_kernel_op_17 * tmp_kernel_op_41 + tmp_kernel_op_3 * tmp_kernel_op_39;
               const walberla::float64 tmp_kernel_op_44 = tmp_kernel_op_31 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_41;
               const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_35 * tmp_kernel_op_39 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_40 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_41;
               const int64_t           tmp_kernel_op_46 = ( (int64_t) ( ( tmp_kernel_op_27 * tmp_kernel_op_27 ) ) );
               const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_27 ) );
               const walberla::float64 tmp_kernel_op_50 =
                   tmp_kernel_op_12 * tmp_kernel_op_48 + tmp_kernel_op_17 * tmp_kernel_op_49 + tmp_kernel_op_3 * tmp_kernel_op_47;
               const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_31 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_32 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_33 * tmp_kernel_op_49;
               const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_35 * tmp_kernel_op_47 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_48 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_49;
               const int64_t           tmp_kernel_op_53 = tmp_kernel_op_4 * 16;
               const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_31 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_14 * tmp_kernel_op_32;
               const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_19 * tmp_kernel_op_33;
               const walberla::float64 tmp_kernel_op_57 =
                   tmp_kernel_op_12 * tmp_kernel_op_55 + tmp_kernel_op_17 * tmp_kernel_op_56 + tmp_kernel_op_3 * tmp_kernel_op_54;
               const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_12 * tmp_kernel_op_14 * tmp_kernel_op_36 +
                                                          tmp_kernel_op_17 * tmp_kernel_op_19 * tmp_kernel_op_37 +
                                                          tmp_kernel_op_3 * tmp_kernel_op_35 * tmp_kernel_op_9;
               const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_35 * tmp_kernel_op_54 +
                                                          tmp_kernel_op_36 * tmp_kernel_op_55 +
                                                          tmp_kernel_op_37 * tmp_kernel_op_56;
               const walberla::float64 elMat_0_0 = ( tmp_kernel_op_13 * tmp_kernel_op_13 ) * tmp_kernel_op_14 +
                                                   ( tmp_kernel_op_18 * tmp_kernel_op_18 ) * tmp_kernel_op_19 +
                                                   ( tmp_kernel_op_7 * tmp_kernel_op_7 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_0_1 = tmp_kernel_op_26;
               const walberla::float64 elMat_0_2 = tmp_kernel_op_28;
               const walberla::float64 elMat_0_3 = tmp_kernel_op_29;
               const walberla::float64 elMat_0_4 = tmp_kernel_op_34;
               const walberla::float64 elMat_0_5 = tmp_kernel_op_38;
               const walberla::float64 elMat_1_0 = tmp_kernel_op_26;
               const walberla::float64 elMat_1_1 = tmp_kernel_op_14 * ( tmp_kernel_op_22 * tmp_kernel_op_22 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_24 * tmp_kernel_op_24 ) +
                                                   ( tmp_kernel_op_20 * tmp_kernel_op_20 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_1_2 = tmp_kernel_op_42;
               const walberla::float64 elMat_1_3 = tmp_kernel_op_43;
               const walberla::float64 elMat_1_4 = tmp_kernel_op_44;
               const walberla::float64 elMat_1_5 = tmp_kernel_op_45;
               const walberla::float64 elMat_2_0 = tmp_kernel_op_28;
               const walberla::float64 elMat_2_1 = tmp_kernel_op_42;
               const walberla::float64 elMat_2_2 = tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                                   tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_46 ) ) +
                                                   tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_46 ) );
               const walberla::float64 elMat_2_3 = tmp_kernel_op_50;
               const walberla::float64 elMat_2_4 = tmp_kernel_op_51;
               const walberla::float64 elMat_2_5 = tmp_kernel_op_52;
               const walberla::float64 elMat_3_0 = tmp_kernel_op_29;
               const walberla::float64 elMat_3_1 = tmp_kernel_op_43;
               const walberla::float64 elMat_3_2 = tmp_kernel_op_50;
               const walberla::float64 elMat_3_3 =
                   tmp_kernel_op_0 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                   tmp_kernel_op_10 * tmp_kernel_op_14 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                   tmp_kernel_op_15 * tmp_kernel_op_19 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
               const walberla::float64 elMat_3_4 = tmp_kernel_op_57;
               const walberla::float64 elMat_3_5 = tmp_kernel_op_58;
               const walberla::float64 elMat_4_0 = tmp_kernel_op_34;
               const walberla::float64 elMat_4_1 = tmp_kernel_op_44;
               const walberla::float64 elMat_4_2 = tmp_kernel_op_51;
               const walberla::float64 elMat_4_3 = tmp_kernel_op_57;
               const walberla::float64 elMat_4_4 = tmp_kernel_op_14 * ( tmp_kernel_op_32 * tmp_kernel_op_32 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_33 * tmp_kernel_op_33 ) +
                                                   ( tmp_kernel_op_31 * tmp_kernel_op_31 ) * tmp_kernel_op_9;
               const walberla::float64 elMat_4_5 = tmp_kernel_op_59;
               const walberla::float64 elMat_5_0 = tmp_kernel_op_38;
               const walberla::float64 elMat_5_1 = tmp_kernel_op_45;
               const walberla::float64 elMat_5_2 = tmp_kernel_op_52;
               const walberla::float64 elMat_5_3 = tmp_kernel_op_58;
               const walberla::float64 elMat_5_4 = tmp_kernel_op_59;
               const walberla::float64 elMat_5_5 = tmp_kernel_op_14 * ( tmp_kernel_op_36 * tmp_kernel_op_36 ) +
                                                   tmp_kernel_op_19 * ( tmp_kernel_op_37 * tmp_kernel_op_37 ) +
                                                   ( tmp_kernel_op_35 * tmp_kernel_op_35 ) * tmp_kernel_op_9;

               std::vector< uint_t > _data_rowIdx( 6 );
               std::vector< uint_t > _data_colIdx( 6 );
               std::vector< real_t > _data_mat( 36 );

               _data_rowIdx[0] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] ) );
               _data_rowIdx[1] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] ) );
               _data_rowIdx[2] = ( (uint64_t) ( _data_dstVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_rowIdx[3] =
                   ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) /
                                                      ( 2 ) )] ) );
               _data_rowIdx[4] = ( (uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                              ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_rowIdx[5] = ( (
                   uint64_t) ( _data_dstEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                             ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[0] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1] ) );
               _data_colIdx[1] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] ) );
               _data_colIdx[2] = ( (uint64_t) ( _data_srcVertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[3] =
                   ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) /
                                                      ( 2 ) )] ) );
               _data_colIdx[4] = ( (uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                                              ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] ) );
               _data_colIdx[5] = ( (
                   uint64_t) ( _data_srcEdge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) -
                                             ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                             ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] ) );

               /* Apply basis transformation */

               _data_mat[0]  = ( (real_t) ( elMat_0_0 ) );
               _data_mat[1]  = ( (real_t) ( elMat_0_1 ) );
               _data_mat[2]  = ( (real_t) ( elMat_0_2 ) );
               _data_mat[3]  = ( (real_t) ( elMat_0_3 ) );
               _data_mat[4]  = ( (real_t) ( elMat_0_4 ) );
               _data_mat[5]  = ( (real_t) ( elMat_0_5 ) );
               _data_mat[6]  = ( (real_t) ( elMat_1_0 ) );
               _data_mat[7]  = ( (real_t) ( elMat_1_1 ) );
               _data_mat[8]  = ( (real_t) ( elMat_1_2 ) );
               _data_mat[9]  = ( (real_t) ( elMat_1_3 ) );
               _data_mat[10] = ( (real_t) ( elMat_1_4 ) );
               _data_mat[11] = ( (real_t) ( elMat_1_5 ) );
               _data_mat[12] = ( (real_t) ( elMat_2_0 ) );
               _data_mat[13] = ( (real_t) ( elMat_2_1 ) );
               _data_mat[14] = ( (real_t) ( elMat_2_2 ) );
               _data_mat[15] = ( (real_t) ( elMat_2_3 ) );
               _data_mat[16] = ( (real_t) ( elMat_2_4 ) );
               _data_mat[17] = ( (real_t) ( elMat_2_5 ) );
               _data_mat[18] = ( (real_t) ( elMat_3_0 ) );
               _data_mat[19] = ( (real_t) ( elMat_3_1 ) );
               _data_mat[20] = ( (real_t) ( elMat_3_2 ) );
               _data_mat[21] = ( (real_t) ( elMat_3_3 ) );
               _data_mat[22] = ( (real_t) ( elMat_3_4 ) );
               _data_mat[23] = ( (real_t) ( elMat_3_5 ) );
               _data_mat[24] = ( (real_t) ( elMat_4_0 ) );
               _data_mat[25] = ( (real_t) ( elMat_4_1 ) );
               _data_mat[26] = ( (real_t) ( elMat_4_2 ) );
               _data_mat[27] = ( (real_t) ( elMat_4_3 ) );
               _data_mat[28] = ( (real_t) ( elMat_4_4 ) );
               _data_mat[29] = ( (real_t) ( elMat_4_5 ) );
               _data_mat[30] = ( (real_t) ( elMat_5_0 ) );
               _data_mat[31] = ( (real_t) ( elMat_5_1 ) );
               _data_mat[32] = ( (real_t) ( elMat_5_2 ) );
               _data_mat[33] = ( (real_t) ( elMat_5_3 ) );
               _data_mat[34] = ( (real_t) ( elMat_5_4 ) );
               _data_mat[35] = ( (real_t) ( elMat_5_5 ) );

               mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
            }
      }
   }
}
void P2ElementwiseBoundaryMass::computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_0_macro_3D(
    walberla::float64* RESTRICT _data_invDiag_Edge,
    walberla::float64* RESTRICT _data_invDiag_Vertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_8 * 4.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_50 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_46 * 0.054975871827660949;
                  const int64_t           tmp_kernel_op_53 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_60 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_47 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_48 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_49 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_50 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_51 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_52 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
                  const walberla::float64 elMatDiag_4 = tmp_kernel_op_13 * tmp_kernel_op_55 + tmp_kernel_op_2 * tmp_kernel_op_54 +
                                                        tmp_kernel_op_20 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_27 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_34 * tmp_kernel_op_58 + tmp_kernel_op_41 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_5 = tmp_kernel_op_1 * tmp_kernel_op_54 + tmp_kernel_op_12 * tmp_kernel_op_55 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_58 + tmp_kernel_op_40 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_10 * tmp_kernel_op_2 +
                                                        tmp_kernel_op_12 * tmp_kernel_op_13 * tmp_kernel_op_17 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_27 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_38 +
                                                        tmp_kernel_op_40 * tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_1 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_UP */
         const walberla::float64 tmp_coords_jac_0_BLUE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_6_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
         const walberla::float64 p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
         const walberla::float64 p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
         const walberla::float64 p_affine_const_3_0_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) +
             tmp_coords_jac_1_BLUE_UP;
         const walberla::float64 p_affine_const_3_1_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) +
             tmp_coords_jac_2_BLUE_UP;
         const walberla::float64 p_affine_const_3_2_BLUE_UP =
             tmp_coords_jac_0_BLUE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) +
             tmp_coords_jac_3_BLUE_UP;
         const walberla::float64 jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
         const walberla::float64 jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
         const walberla::float64 jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
         const walberla::float64 jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
         const walberla::float64 jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
         const walberla::float64 jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 = pow(
                      abs( ( ( jac_affine_0_0_BLUE_UP * jac_affine_0_0_BLUE_UP ) +
                             ( jac_affine_1_0_BLUE_UP * jac_affine_1_0_BLUE_UP ) +
                             ( jac_affine_2_0_BLUE_UP * jac_affine_2_0_BLUE_UP ) ) *
                               ( ( jac_affine_0_1_BLUE_UP * jac_affine_0_1_BLUE_UP ) +
                                 ( jac_affine_1_1_BLUE_UP * jac_affine_1_1_BLUE_UP ) +
                                 ( jac_affine_2_1_BLUE_UP * jac_affine_2_1_BLUE_UP ) ) -
                           ( ( jac_affine_0_0_BLUE_UP * jac_affine_0_1_BLUE_UP + jac_affine_1_0_BLUE_UP * jac_affine_1_1_BLUE_UP +
                               jac_affine_2_0_BLUE_UP * jac_affine_2_1_BLUE_UP ) *
                             ( jac_affine_0_0_BLUE_UP * jac_affine_0_1_BLUE_UP + jac_affine_1_0_BLUE_UP * jac_affine_1_1_BLUE_UP +
                               jac_affine_2_0_BLUE_UP * jac_affine_2_1_BLUE_UP ) ) ),
                      0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_8 * 4.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_50 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_46 * 0.054975871827660949;
                  const int64_t           tmp_kernel_op_53 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_60 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_47 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_48 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_49 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_50 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_51 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_52 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
                  const walberla::float64 elMatDiag_4 = tmp_kernel_op_13 * tmp_kernel_op_55 + tmp_kernel_op_2 * tmp_kernel_op_54 +
                                                        tmp_kernel_op_20 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_27 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_34 * tmp_kernel_op_58 + tmp_kernel_op_41 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_5 = tmp_kernel_op_1 * tmp_kernel_op_54 + tmp_kernel_op_12 * tmp_kernel_op_55 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_58 + tmp_kernel_op_40 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_10 * tmp_kernel_op_2 +
                                                        tmp_kernel_op_12 * tmp_kernel_op_13 * tmp_kernel_op_17 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_27 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_38 +
                                                        tmp_kernel_op_40 * tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMass::computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_1_macro_3D(
    walberla::float64* RESTRICT _data_invDiag_Edge,
    walberla::float64* RESTRICT _data_invDiag_Vertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_8 * 4.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_50 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_46 * 0.054975871827660949;
                  const int64_t           tmp_kernel_op_53 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_60 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_47 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_48 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_49 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_50 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_51 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_52 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
                  const walberla::float64 elMatDiag_4 = tmp_kernel_op_13 * tmp_kernel_op_55 + tmp_kernel_op_2 * tmp_kernel_op_54 +
                                                        tmp_kernel_op_20 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_27 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_34 * tmp_kernel_op_58 + tmp_kernel_op_41 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_5 = tmp_kernel_op_1 * tmp_kernel_op_54 + tmp_kernel_op_12 * tmp_kernel_op_55 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_58 + tmp_kernel_op_40 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_10 * tmp_kernel_op_2 +
                                                        tmp_kernel_op_12 * tmp_kernel_op_13 * tmp_kernel_op_17 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_27 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_38 +
                                                        tmp_kernel_op_40 * tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_1 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_UP */
         const walberla::float64 tmp_coords_jac_0_GREEN_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_3_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_4_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_6_GREEN_UP =
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
         const walberla::float64 p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
         const walberla::float64 p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
         const walberla::float64 p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_2_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
         const walberla::float64 p_affine_const_2_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
         const walberla::float64 p_affine_const_2_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
         const walberla::float64 p_affine_const_3_0_GREEN_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_3_1_GREEN_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_3_2_GREEN_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
         const walberla::float64 jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
         const walberla::float64 jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
         const walberla::float64 jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
         const walberla::float64 jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
         const walberla::float64 jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_GREEN_UP * jac_affine_0_0_GREEN_UP ) +
                                  ( jac_affine_1_0_GREEN_UP * jac_affine_1_0_GREEN_UP ) +
                                  ( jac_affine_2_0_GREEN_UP * jac_affine_2_0_GREEN_UP ) ) *
                                    ( ( jac_affine_0_1_GREEN_UP * jac_affine_0_1_GREEN_UP ) +
                                      ( jac_affine_1_1_GREEN_UP * jac_affine_1_1_GREEN_UP ) +
                                      ( jac_affine_2_1_GREEN_UP * jac_affine_2_1_GREEN_UP ) ) -
                                ( ( jac_affine_0_0_GREEN_UP * jac_affine_0_1_GREEN_UP +
                                    jac_affine_1_0_GREEN_UP * jac_affine_1_1_GREEN_UP +
                                    jac_affine_2_0_GREEN_UP * jac_affine_2_1_GREEN_UP ) *
                                  ( jac_affine_0_0_GREEN_UP * jac_affine_0_1_GREEN_UP +
                                    jac_affine_1_0_GREEN_UP * jac_affine_1_1_GREEN_UP +
                                    jac_affine_2_0_GREEN_UP * jac_affine_2_1_GREEN_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_8 * 4.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_50 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_46 * 0.054975871827660949;
                  const int64_t           tmp_kernel_op_53 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_60 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_47 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_48 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_49 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_50 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_51 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_52 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
                  const walberla::float64 elMatDiag_4 = tmp_kernel_op_13 * tmp_kernel_op_55 + tmp_kernel_op_2 * tmp_kernel_op_54 +
                                                        tmp_kernel_op_20 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_27 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_34 * tmp_kernel_op_58 + tmp_kernel_op_41 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_5 = tmp_kernel_op_1 * tmp_kernel_op_54 + tmp_kernel_op_12 * tmp_kernel_op_55 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_58 + tmp_kernel_op_40 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_10 * tmp_kernel_op_2 +
                                                        tmp_kernel_op_12 * tmp_kernel_op_13 * tmp_kernel_op_17 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_27 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_38 +
                                                        tmp_kernel_op_40 * tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMass::computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_2_macro_3D(
    walberla::float64* RESTRICT _data_invDiag_Edge,
    walberla::float64* RESTRICT _data_invDiag_Vertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_3_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_3_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_8 * 4.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_50 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_46 * 0.054975871827660949;
                  const int64_t           tmp_kernel_op_53 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_60 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_47 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_48 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_49 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_50 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_51 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_52 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
                  const walberla::float64 elMatDiag_4 = tmp_kernel_op_13 * tmp_kernel_op_55 + tmp_kernel_op_2 * tmp_kernel_op_54 +
                                                        tmp_kernel_op_20 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_27 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_34 * tmp_kernel_op_58 + tmp_kernel_op_41 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_5 = tmp_kernel_op_1 * tmp_kernel_op_54 + tmp_kernel_op_12 * tmp_kernel_op_55 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_58 + tmp_kernel_op_40 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_10 * tmp_kernel_op_2 +
                                                        tmp_kernel_op_12 * tmp_kernel_op_13 * tmp_kernel_op_17 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_27 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_38 +
                                                        tmp_kernel_op_40 * tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_3 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.BLUE_DOWN */
         const walberla::float64 tmp_coords_jac_0_BLUE_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_BLUE_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_2_BLUE_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_3_BLUE_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_4_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_6_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 tmp_coords_jac_8_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 tmp_coords_jac_9_BLUE_DOWN   = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
         const walberla::float64 p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
         const walberla::float64 p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_0_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) +
             tmp_coords_jac_5_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_1_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) +
             tmp_coords_jac_7_BLUE_DOWN;
         const walberla::float64 p_affine_const_3_2_BLUE_DOWN =
             tmp_coords_jac_0_BLUE_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) +
             tmp_coords_jac_9_BLUE_DOWN;
         const walberla::float64 jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
         const walberla::float64 jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
         const walberla::float64 jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
         const walberla::float64 jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
         const walberla::float64 jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
         const walberla::float64 jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_0_BLUE_DOWN ) +
                                  ( jac_affine_1_0_BLUE_DOWN * jac_affine_1_0_BLUE_DOWN ) +
                                  ( jac_affine_2_0_BLUE_DOWN * jac_affine_2_0_BLUE_DOWN ) ) *
                                    ( ( jac_affine_0_1_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN ) +
                                      ( jac_affine_1_1_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN ) +
                                      ( jac_affine_2_1_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) ) -
                                ( ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN +
                                    jac_affine_1_0_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN +
                                    jac_affine_2_0_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) *
                                  ( jac_affine_0_0_BLUE_DOWN * jac_affine_0_1_BLUE_DOWN +
                                    jac_affine_1_0_BLUE_DOWN * jac_affine_1_1_BLUE_DOWN +
                                    jac_affine_2_0_BLUE_DOWN * jac_affine_2_1_BLUE_DOWN ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_8 * 4.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_50 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_46 * 0.054975871827660949;
                  const int64_t           tmp_kernel_op_53 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_60 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_47 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_48 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_49 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_50 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_51 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_52 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
                  const walberla::float64 elMatDiag_4 = tmp_kernel_op_13 * tmp_kernel_op_55 + tmp_kernel_op_2 * tmp_kernel_op_54 +
                                                        tmp_kernel_op_20 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_27 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_34 * tmp_kernel_op_58 + tmp_kernel_op_41 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_5 = tmp_kernel_op_1 * tmp_kernel_op_54 + tmp_kernel_op_12 * tmp_kernel_op_55 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_58 + tmp_kernel_op_40 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_10 * tmp_kernel_op_2 +
                                                        tmp_kernel_op_12 * tmp_kernel_op_13 * tmp_kernel_op_17 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_27 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_38 +
                                                        tmp_kernel_op_40 * tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
   }
}
void P2ElementwiseBoundaryMass::computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_3_macro_3D(
    walberla::float64* RESTRICT _data_invDiag_Edge,
    walberla::float64* RESTRICT _data_invDiag_Vertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_0comp2,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_1comp2,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    walberla::float64           macro_vertex_coord_id_2comp2,
    walberla::float64           macro_vertex_coord_id_3comp0,
    walberla::float64           macro_vertex_coord_id_3comp1,
    walberla::float64           macro_vertex_coord_id_3comp2,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* CellType.WHITE_UP */
         const walberla::float64 tmp_coords_jac_0_WHITE_UP = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_0_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 p_affine_const_1_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_1_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 p_affine_const_2_0_WHITE_UP =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 p_affine_const_2_1_WHITE_UP =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 p_affine_const_2_2_WHITE_UP =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_WHITE_UP * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2;
         const walberla::float64 jac_affine_0_0_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
         const walberla::float64 jac_affine_0_1_WHITE_UP     = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
         const walberla::float64 jac_affine_1_0_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
         const walberla::float64 jac_affine_1_1_WHITE_UP     = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
         const walberla::float64 jac_affine_2_0_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
         const walberla::float64 jac_affine_2_1_WHITE_UP     = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_0_WHITE_UP ) +
                                  ( jac_affine_1_0_WHITE_UP * jac_affine_1_0_WHITE_UP ) +
                                  ( jac_affine_2_0_WHITE_UP * jac_affine_2_0_WHITE_UP ) ) *
                                    ( ( jac_affine_0_1_WHITE_UP * jac_affine_0_1_WHITE_UP ) +
                                      ( jac_affine_1_1_WHITE_UP * jac_affine_1_1_WHITE_UP ) +
                                      ( jac_affine_2_1_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) -
                                ( ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) *
                                  ( jac_affine_0_0_WHITE_UP * jac_affine_0_1_WHITE_UP +
                                    jac_affine_1_0_WHITE_UP * jac_affine_1_1_WHITE_UP +
                                    jac_affine_2_0_WHITE_UP * jac_affine_2_1_WHITE_UP ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_8 * 4.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_50 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_46 * 0.054975871827660949;
                  const int64_t           tmp_kernel_op_53 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_60 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_47 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_48 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_49 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_50 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_51 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_52 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
                  const walberla::float64 elMatDiag_4 = tmp_kernel_op_13 * tmp_kernel_op_55 + tmp_kernel_op_2 * tmp_kernel_op_54 +
                                                        tmp_kernel_op_20 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_27 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_34 * tmp_kernel_op_58 + tmp_kernel_op_41 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_5 = tmp_kernel_op_1 * tmp_kernel_op_54 + tmp_kernel_op_12 * tmp_kernel_op_55 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_58 + tmp_kernel_op_40 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_10 * tmp_kernel_op_2 +
                                                        tmp_kernel_op_12 * tmp_kernel_op_13 * tmp_kernel_op_17 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_27 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_38 +
                                                        tmp_kernel_op_40 * tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );
                  _data_invDiag_Vertex
                      [ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                           ( micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) -
                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                         ( 6 ) ) +
                       1] = elMatDiag_0 +
                            _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                                 ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                 ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                                     ( micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) -
                                                 ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                                     ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                                   ( 6 ) ) +
                                                 1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
               }
      }
      {
         /* CellType.GREEN_DOWN */
         const walberla::float64 tmp_coords_jac_0_GREEN_DOWN = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 tmp_coords_jac_1_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 tmp_coords_jac_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 tmp_coords_jac_3_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 tmp_coords_jac_4_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 tmp_coords_jac_5_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 );
         const walberla::float64 tmp_coords_jac_6_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 +
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 );
         const walberla::float64 tmp_coords_jac_7_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 );
         const walberla::float64 tmp_coords_jac_8_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 );
         const walberla::float64 tmp_coords_jac_9_GREEN_DOWN =
             tmp_coords_jac_0_GREEN_DOWN * ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 );
         const walberla::float64 p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_0_GREEN_DOWN =
             macro_vertex_coord_id_0comp0 + tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_1_GREEN_DOWN =
             macro_vertex_coord_id_0comp1 + tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_1_2_GREEN_DOWN =
             macro_vertex_coord_id_0comp2 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
         const walberla::float64 p_affine_const_2_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_4_GREEN_DOWN;
         const walberla::float64 p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_6_GREEN_DOWN;
         const walberla::float64 jac_affine_0_0_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
         const walberla::float64 jac_affine_0_1_GREEN_DOWN     = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
         const walberla::float64 jac_affine_1_0_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
         const walberla::float64 jac_affine_1_1_GREEN_DOWN     = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
         const walberla::float64 jac_affine_2_0_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
         const walberla::float64 jac_affine_2_1_GREEN_DOWN     = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
         for ( int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge - 1; ctr_2 += 1 )
            for ( int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge - 1; ctr_1 += 1 )
               for ( int64_t ctr_0 = -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2;
                     ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1;
                     ctr_0 += 1 )
               {
                  const walberla::float64 p_affine_0_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_0_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_1_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_1_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_2_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 + 1 ) );
                  const walberla::float64 p_affine_3_0 = macro_vertex_coord_id_0comp0 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_1 = macro_vertex_coord_id_0comp1 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 p_affine_3_2 = macro_vertex_coord_id_0comp2 +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) ) +
                                                         1.0 / ( micro_edges_per_macro_edge_float ) *
                                                             ( -macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2 ) *
                                                             1.0 * ( ( walberla::float64 )( ctr_2 ) );
                  const walberla::float64 tmp_kernel_op_0 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_1 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_2 = 0.01168626253704612;
                  const int64_t           tmp_kernel_op_3 = 0;
                  const int64_t           tmp_kernel_op_4 = 0;
                  const int64_t           tmp_kernel_op_5 = tmp_kernel_op_3 + tmp_kernel_op_4;
                  const int64_t           tmp_kernel_op_6 = 0;
                  const walberla::float64 tmp_kernel_op_7 = 0.25 + 0.5 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_8 =
                      pow( abs( ( ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_0_GREEN_DOWN ) +
                                  ( jac_affine_1_0_GREEN_DOWN * jac_affine_1_0_GREEN_DOWN ) +
                                  ( jac_affine_2_0_GREEN_DOWN * jac_affine_2_0_GREEN_DOWN ) ) *
                                    ( ( jac_affine_0_1_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN ) +
                                      ( jac_affine_1_1_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN ) +
                                      ( jac_affine_2_1_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) ) -
                                ( ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN +
                                    jac_affine_1_0_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN +
                                    jac_affine_2_0_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) *
                                  ( jac_affine_0_0_GREEN_DOWN * jac_affine_0_1_GREEN_DOWN +
                                    jac_affine_1_0_GREEN_DOWN * jac_affine_1_1_GREEN_DOWN +
                                    jac_affine_2_0_GREEN_DOWN * jac_affine_2_1_GREEN_DOWN ) ) ),
                           0.5 );
                  const walberla::float64 tmp_kernel_op_9  = tmp_kernel_op_8 * 16.0;
                  const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_11 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_12 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_13 = 0.6672399574840655;
                  const int64_t           tmp_kernel_op_14 = 0;
                  const int64_t           tmp_kernel_op_15 = 0;
                  const int64_t           tmp_kernel_op_16 = tmp_kernel_op_14 + tmp_kernel_op_15;
                  const walberla::float64 tmp_kernel_op_17 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_18 = 0.04820837781551205;
                  const walberla::float64 tmp_kernel_op_19 = 0.01168626253704612;
                  const walberla::float64 tmp_kernel_op_20 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_21 = 0;
                  const int64_t           tmp_kernel_op_22 = 0;
                  const int64_t           tmp_kernel_op_23 = tmp_kernel_op_21 + tmp_kernel_op_22;
                  const walberla::float64 tmp_kernel_op_24 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_25 = 0.074803807748196491;
                  const walberla::float64 tmp_kernel_op_26 = 0.6672399574840655;
                  const walberla::float64 tmp_kernel_op_27 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_28 = 0;
                  const int64_t           tmp_kernel_op_29 = 0;
                  const int64_t           tmp_kernel_op_30 = tmp_kernel_op_28 + tmp_kernel_op_29;
                  const walberla::float64 tmp_kernel_op_31 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_32 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_33 = 0.19887005655022641;
                  const walberla::float64 tmp_kernel_op_34 = 0.19887005655022641;
                  const int64_t           tmp_kernel_op_35 = 0;
                  const int64_t           tmp_kernel_op_36 = 0;
                  const int64_t           tmp_kernel_op_37 = tmp_kernel_op_35 + tmp_kernel_op_36;
                  const walberla::float64 tmp_kernel_op_38 = tmp_kernel_op_9 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_39 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_40 = 0.0083862028807871122;
                  const walberla::float64 tmp_kernel_op_41 = 0.0083862028807871122;
                  const int64_t           tmp_kernel_op_42 = 0;
                  const int64_t           tmp_kernel_op_43 = 0;
                  const int64_t           tmp_kernel_op_44 = tmp_kernel_op_42 + tmp_kernel_op_43;
                  const walberla::float64 tmp_kernel_op_45 = tmp_kernel_op_9 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_46 = tmp_kernel_op_8 * 4.0;
                  const walberla::float64 tmp_kernel_op_47 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_48 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_49 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_50 = tmp_kernel_op_46 * 0.054975871827660949;
                  const walberla::float64 tmp_kernel_op_51 = tmp_kernel_op_46 * 0.11169079483900581;
                  const walberla::float64 tmp_kernel_op_52 = tmp_kernel_op_46 * 0.054975871827660949;
                  const int64_t           tmp_kernel_op_53 = ( (int64_t) ( ( tmp_kernel_op_6 * tmp_kernel_op_6 ) ) );
                  const walberla::float64 tmp_kernel_op_54 = tmp_kernel_op_10 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_55 = tmp_kernel_op_17 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_56 = tmp_kernel_op_24 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_57 = tmp_kernel_op_31 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_58 = tmp_kernel_op_38 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const walberla::float64 tmp_kernel_op_59 = tmp_kernel_op_45 * ( ( walberla::float64 )( tmp_kernel_op_6 ) );
                  const int64_t           tmp_kernel_op_60 = tmp_kernel_op_6;
                  const walberla::float64 elMatDiag_0 =
                      tmp_kernel_op_10 * ( ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) *
                                           ( tmp_kernel_op_0 + tmp_kernel_op_1 * 0.5 + tmp_kernel_op_2 * 0.5 + tmp_kernel_op_7 -
                                             0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_5 ) ) ) ) +
                      tmp_kernel_op_17 *
                          ( ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) *
                            ( tmp_kernel_op_11 + tmp_kernel_op_12 * 0.5 + tmp_kernel_op_13 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_16 ) ) ) ) +
                      tmp_kernel_op_24 *
                          ( ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) *
                            ( tmp_kernel_op_18 + tmp_kernel_op_19 * 0.5 + tmp_kernel_op_20 * 0.5 + tmp_kernel_op_7 -
                              0.41553863181302636 + ( ( walberla::float64 )( tmp_kernel_op_23 ) ) ) ) +
                      tmp_kernel_op_31 *
                          ( ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) *
                            ( tmp_kernel_op_25 + tmp_kernel_op_26 * 0.5 + tmp_kernel_op_27 * 0.5 + tmp_kernel_op_7 -
                              0.6813178398676718 + ( ( walberla::float64 )( tmp_kernel_op_30 ) ) ) ) +
                      tmp_kernel_op_38 *
                          ( ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) *
                            ( tmp_kernel_op_32 + tmp_kernel_op_33 * 0.5 + tmp_kernel_op_34 * 0.5 + tmp_kernel_op_7 -
                              0.66892273637394739 + ( ( walberla::float64 )( tmp_kernel_op_37 ) ) ) ) +
                      tmp_kernel_op_45 *
                          ( ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) *
                            ( tmp_kernel_op_39 + tmp_kernel_op_40 * 0.5 + tmp_kernel_op_41 * 0.5 + tmp_kernel_op_7 -
                              0.13736432026465606 + ( ( walberla::float64 )( tmp_kernel_op_44 ) ) ) );
                  const walberla::float64 elMatDiag_1 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_1 - 0.22297424545798245 ) * ( tmp_kernel_op_1 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_12 - 0.045788106754885358 ) * ( tmp_kernel_op_12 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_19 - 0.05405150908403511 ) * ( tmp_kernel_op_19 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_26 - 0.40842378649022926 ) * ( tmp_kernel_op_26 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_33 - 0.22297424545798245 ) * ( tmp_kernel_op_33 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_40 - 0.045788106754885358 ) * ( tmp_kernel_op_40 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_2 =
                      tmp_kernel_op_47 *
                          ( ( tmp_kernel_op_2 - 0.05405150908403511 ) * ( tmp_kernel_op_2 - 0.05405150908403511 ) ) +
                      tmp_kernel_op_48 *
                          ( ( tmp_kernel_op_13 - 0.40842378649022926 ) * ( tmp_kernel_op_13 - 0.40842378649022926 ) ) +
                      tmp_kernel_op_49 *
                          ( ( tmp_kernel_op_20 - 0.22297424545798245 ) * ( tmp_kernel_op_20 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_50 *
                          ( ( tmp_kernel_op_27 - 0.045788106754885358 ) * ( tmp_kernel_op_27 - 0.045788106754885358 ) ) +
                      tmp_kernel_op_51 *
                          ( ( tmp_kernel_op_34 - 0.22297424545798245 ) * ( tmp_kernel_op_34 - 0.22297424545798245 ) ) +
                      tmp_kernel_op_52 *
                          ( ( tmp_kernel_op_41 - 0.045788106754885358 ) * ( tmp_kernel_op_41 - 0.045788106754885358 ) );
                  const walberla::float64 elMatDiag_3 = tmp_kernel_op_47 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_48 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_49 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_50 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_51 * ( ( walberla::float64 )( tmp_kernel_op_53 ) ) +
                                                        tmp_kernel_op_52 * ( ( walberla::float64 )( tmp_kernel_op_53 ) );
                  const walberla::float64 elMatDiag_4 = tmp_kernel_op_13 * tmp_kernel_op_55 + tmp_kernel_op_2 * tmp_kernel_op_54 +
                                                        tmp_kernel_op_20 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_27 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_34 * tmp_kernel_op_58 + tmp_kernel_op_41 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_5 = tmp_kernel_op_1 * tmp_kernel_op_54 + tmp_kernel_op_12 * tmp_kernel_op_55 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_56 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_57 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_58 + tmp_kernel_op_40 * tmp_kernel_op_59;
                  const walberla::float64 elMatDiag_6 = tmp_kernel_op_1 * tmp_kernel_op_10 * tmp_kernel_op_2 +
                                                        tmp_kernel_op_12 * tmp_kernel_op_13 * tmp_kernel_op_17 +
                                                        tmp_kernel_op_19 * tmp_kernel_op_20 * tmp_kernel_op_24 +
                                                        tmp_kernel_op_26 * tmp_kernel_op_27 * tmp_kernel_op_31 +
                                                        tmp_kernel_op_33 * tmp_kernel_op_34 * tmp_kernel_op_38 +
                                                        tmp_kernel_op_40 * tmp_kernel_op_41 * tmp_kernel_op_45;
                  const walberla::float64 elMatDiag_7 =
                      tmp_kernel_op_10 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_5 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_17 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_16 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_24 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_23 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_31 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_30 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_38 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_37 - tmp_kernel_op_60 ) ) ) ) +
                      tmp_kernel_op_45 * ( ( walberla::float64 )( ( ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) *
                                                                    ( -tmp_kernel_op_44 - tmp_kernel_op_60 ) ) ) );
                  const walberla::float64 elMatDiag_8 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_2 + ( ( walberla::float64 )( -tmp_kernel_op_4 ) ) +
                                             0.10810301816807022 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_13 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_15 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_20 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_22 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_27 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_29 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_34 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_36 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_41 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_43 ) ) + 0.091576213509770715 ) );
                  const walberla::float64 elMatDiag_9 =
                      tmp_kernel_op_10 * ( ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) *
                                           ( -tmp_kernel_op_0 - tmp_kernel_op_1 + ( ( walberla::float64 )( -tmp_kernel_op_3 ) ) +
                                             0.44594849091596489 ) ) +
                      tmp_kernel_op_17 * ( ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_11 - tmp_kernel_op_12 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_14 ) ) + 0.091576213509770715 ) ) +
                      tmp_kernel_op_24 * ( ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) *
                                           ( -tmp_kernel_op_18 - tmp_kernel_op_19 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_21 ) ) + 0.10810301816807022 ) ) +
                      tmp_kernel_op_31 * ( ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) *
                                           ( -tmp_kernel_op_25 - tmp_kernel_op_26 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_28 ) ) + 0.81684757298045851 ) ) +
                      tmp_kernel_op_38 * ( ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) *
                                           ( -tmp_kernel_op_32 - tmp_kernel_op_33 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_35 ) ) + 0.44594849091596489 ) ) +
                      tmp_kernel_op_45 * ( ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) *
                                           ( -tmp_kernel_op_39 - tmp_kernel_op_40 +
                                             ( ( walberla::float64 )( -tmp_kernel_op_42 ) ) + 0.091576213509770715 ) );
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_0 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) +
                                       1] =
                      elMatDiag_1 +
                      _data_invDiag_Vertex[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) +
                                           1];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                         ( 6 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_2 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                             ( 6 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                       ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                           ( micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) ) -
                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                           ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                         ( 6 ) )] =
                      elMatDiag_3 +
                      _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 2 ) -
                                           ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                           ( ( ( micro_edges_per_macro_edge + 1 ) * ( micro_edges_per_macro_edge + 2 ) *
                                               ( micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) ) -
                                           ( ( ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 2 ) *
                                               ( -ctr_2 + micro_edges_per_macro_edge + 3 ) ) /
                                             ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       3 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                         ( micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge - 1 ) *
                                                           ( micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       4 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge - 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                         ( micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                           ( micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                     5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) )] =
                      elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ( ctr_1 + 1 ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) ) +
                                                       5 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) )];
                  _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                     ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                     6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                             ( micro_edges_per_macro_edge + 2 ) ) /
                                           ( 6 ) ) -
                                     ( ( ( -ctr_2 + micro_edges_per_macro_edge ) * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                         ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                       ( 6 ) ) +
                                     1] =
                      elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1 * ( -ctr_2 + micro_edges_per_macro_edge + 1 ) -
                                                       ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                                       6 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) *
                                                               ( micro_edges_per_macro_edge + 2 ) ) /
                                                             ( 6 ) ) -
                                                       ( ( ( -ctr_2 + micro_edges_per_macro_edge ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 1 ) *
                                                           ( -ctr_2 + micro_edges_per_macro_edge + 2 ) ) /
                                                         ( 6 ) ) +
                                                       1];
               }
      }
   }
}
void P2ElementwiseBoundaryMass::computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_0_macro_2D(
    walberla::float64* RESTRICT _data_invDiag_Edge,
    walberla::float64* RESTRICT _data_invDiag_Vertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_2_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 jac_affine_0_0_GRAY = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < 1; ctr_1 += 1 )
            for ( int64_t ctr_0 = 0; ctr_0 < -ctr_1 + micro_edges_per_macro_edge; ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_8  = tmp_kernel_op_7 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_9  = 0.25;
               const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 2.0;
               const walberla::float64 tmp_kernel_op_11 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_12 = tmp_kernel_op_7 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_13 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_13 * 2.0;
               const walberla::float64 tmp_kernel_op_15 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_7 * 0.27777777777777785;
               const int64_t           tmp_kernel_op_17 = ( (int64_t) ( ( tmp_kernel_op_5 * tmp_kernel_op_5 ) ) );
               const int64_t           tmp_kernel_op_18 = tmp_kernel_op_4 * 16;
               const int64_t           tmp_kernel_op_19 = tmp_kernel_op_4 * 4;
               const walberla::float64 elMatDiag_0 =
                   tmp_kernel_op_12 *
                       ( ( tmp_kernel_op_10 * 0.66666666666666663 + tmp_kernel_op_11 * 0.66666666666666663 - 1.0 +
                           0.66666666666666663 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                         ( tmp_kernel_op_10 * 0.66666666666666663 + tmp_kernel_op_11 * 0.66666666666666663 - 1.0 +
                           0.66666666666666663 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) ) *
                       2.25 +
                   tmp_kernel_op_16 *
                       ( ( tmp_kernel_op_14 * 0.37567221793086103 + tmp_kernel_op_15 * 0.37567221793086103 - 1.0 +
                           0.37567221793086103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                         ( tmp_kernel_op_14 * 0.37567221793086103 + tmp_kernel_op_15 * 0.37567221793086103 - 1.0 +
                           0.37567221793086103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) ) *
                       7.0856850115866754 +
                   tmp_kernel_op_8 * ( ( tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 +
                                         ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                                       ( tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 +
                                         ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) );
               const walberla::float64 elMatDiag_1 =
                   tmp_kernel_op_12 * ( ( tmp_kernel_op_10 - 0.5 ) * ( tmp_kernel_op_10 - 0.5 ) ) +
                   tmp_kernel_op_16 * ( ( tmp_kernel_op_14 - 0.8872983346207417 ) * ( tmp_kernel_op_14 - 0.8872983346207417 ) ) +
                   tmp_kernel_op_8 * ( ( tmp_kernel_op_1 - 0.1127016653792583 ) * ( tmp_kernel_op_1 - 0.1127016653792583 ) );
               const walberla::float64 elMatDiag_2 = tmp_kernel_op_12 * ( ( walberla::float64 )( tmp_kernel_op_17 ) ) +
                                                     tmp_kernel_op_16 * ( ( walberla::float64 )( tmp_kernel_op_17 ) ) +
                                                     tmp_kernel_op_8 * ( ( walberla::float64 )( tmp_kernel_op_17 ) );
               const walberla::float64 elMatDiag_3 =
                   tmp_kernel_op_0 * tmp_kernel_op_8 * ( ( walberla::float64 )( tmp_kernel_op_18 ) ) +
                   tmp_kernel_op_12 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_18 ) ) +
                   tmp_kernel_op_13 * tmp_kernel_op_16 * ( ( walberla::float64 )( tmp_kernel_op_18 ) );
               const walberla::float64 elMatDiag_4 =
                   tmp_kernel_op_12 * ( ( -tmp_kernel_op_11 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                        ( -tmp_kernel_op_11 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) ) +
                   tmp_kernel_op_16 * ( ( -tmp_kernel_op_15 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                        ( -tmp_kernel_op_15 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) ) +
                   tmp_kernel_op_8 * ( ( -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                       ( -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) );
               const walberla::float64 elMatDiag_5 =
                   tmp_kernel_op_12 *
                       ( ( tmp_kernel_op_11 * -0.25000000000000000 - tmp_kernel_op_9 + 0.5 ) *
                         ( tmp_kernel_op_11 * -0.25000000000000000 - tmp_kernel_op_9 + 0.5 ) ) *
                       16.0 +
                   tmp_kernel_op_16 *
                       ( ( -tmp_kernel_op_13 + tmp_kernel_op_15 * -0.25000000000000000 + 0.8872983346207417 ) *
                         ( -tmp_kernel_op_13 + tmp_kernel_op_15 * -0.25000000000000000 + 0.8872983346207417 ) ) *
                       16.0 +
                   tmp_kernel_op_8 *
                       ( ( -tmp_kernel_op_0 + tmp_kernel_op_3 * -0.25000000000000000 + 0.1127016653792583 ) *
                         ( -tmp_kernel_op_0 + tmp_kernel_op_3 * -0.25000000000000000 + 0.1127016653792583 ) ) *
                       16.0;
               _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    1] = elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                            ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] =
                   elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatDiag_3 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                      ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatDiag_4 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                      2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatDiag_5 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
            }
      }
   }
}
void P2ElementwiseBoundaryMass::computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_1_macro_2D(
    walberla::float64* RESTRICT _data_invDiag_Edge,
    walberla::float64* RESTRICT _data_invDiag_Vertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY   = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_0_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_2_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 jac_affine_0_0_GRAY = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < micro_edges_per_macro_edge; ctr_1 += 1 )
            for ( int64_t ctr_0 = 0; ctr_0 < 1; ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_8  = tmp_kernel_op_7 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_9  = 0.25;
               const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 2.0;
               const walberla::float64 tmp_kernel_op_11 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_12 = tmp_kernel_op_7 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_13 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_13 * 2.0;
               const walberla::float64 tmp_kernel_op_15 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_7 * 0.27777777777777785;
               const int64_t           tmp_kernel_op_17 = ( (int64_t) ( ( tmp_kernel_op_5 * tmp_kernel_op_5 ) ) );
               const int64_t           tmp_kernel_op_18 = tmp_kernel_op_4 * 16;
               const int64_t           tmp_kernel_op_19 = tmp_kernel_op_4 * 4;
               const walberla::float64 elMatDiag_0 =
                   tmp_kernel_op_12 *
                       ( ( tmp_kernel_op_10 * 0.66666666666666663 + tmp_kernel_op_11 * 0.66666666666666663 - 1.0 +
                           0.66666666666666663 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                         ( tmp_kernel_op_10 * 0.66666666666666663 + tmp_kernel_op_11 * 0.66666666666666663 - 1.0 +
                           0.66666666666666663 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) ) *
                       2.25 +
                   tmp_kernel_op_16 *
                       ( ( tmp_kernel_op_14 * 0.37567221793086103 + tmp_kernel_op_15 * 0.37567221793086103 - 1.0 +
                           0.37567221793086103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                         ( tmp_kernel_op_14 * 0.37567221793086103 + tmp_kernel_op_15 * 0.37567221793086103 - 1.0 +
                           0.37567221793086103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) ) *
                       7.0856850115866754 +
                   tmp_kernel_op_8 * ( ( tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 +
                                         ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                                       ( tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 +
                                         ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) );
               const walberla::float64 elMatDiag_1 =
                   tmp_kernel_op_12 * ( ( tmp_kernel_op_10 - 0.5 ) * ( tmp_kernel_op_10 - 0.5 ) ) +
                   tmp_kernel_op_16 * ( ( tmp_kernel_op_14 - 0.8872983346207417 ) * ( tmp_kernel_op_14 - 0.8872983346207417 ) ) +
                   tmp_kernel_op_8 * ( ( tmp_kernel_op_1 - 0.1127016653792583 ) * ( tmp_kernel_op_1 - 0.1127016653792583 ) );
               const walberla::float64 elMatDiag_2 = tmp_kernel_op_12 * ( ( walberla::float64 )( tmp_kernel_op_17 ) ) +
                                                     tmp_kernel_op_16 * ( ( walberla::float64 )( tmp_kernel_op_17 ) ) +
                                                     tmp_kernel_op_8 * ( ( walberla::float64 )( tmp_kernel_op_17 ) );
               const walberla::float64 elMatDiag_3 =
                   tmp_kernel_op_0 * tmp_kernel_op_8 * ( ( walberla::float64 )( tmp_kernel_op_18 ) ) +
                   tmp_kernel_op_12 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_18 ) ) +
                   tmp_kernel_op_13 * tmp_kernel_op_16 * ( ( walberla::float64 )( tmp_kernel_op_18 ) );
               const walberla::float64 elMatDiag_4 =
                   tmp_kernel_op_12 * ( ( -tmp_kernel_op_11 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                        ( -tmp_kernel_op_11 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) ) +
                   tmp_kernel_op_16 * ( ( -tmp_kernel_op_15 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                        ( -tmp_kernel_op_15 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) ) +
                   tmp_kernel_op_8 * ( ( -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                       ( -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) );
               const walberla::float64 elMatDiag_5 =
                   tmp_kernel_op_12 *
                       ( ( tmp_kernel_op_11 * -0.25000000000000000 - tmp_kernel_op_9 + 0.5 ) *
                         ( tmp_kernel_op_11 * -0.25000000000000000 - tmp_kernel_op_9 + 0.5 ) ) *
                       16.0 +
                   tmp_kernel_op_16 *
                       ( ( -tmp_kernel_op_13 + tmp_kernel_op_15 * -0.25000000000000000 + 0.8872983346207417 ) *
                         ( -tmp_kernel_op_13 + tmp_kernel_op_15 * -0.25000000000000000 + 0.8872983346207417 ) ) *
                       16.0 +
                   tmp_kernel_op_8 *
                       ( ( -tmp_kernel_op_0 + tmp_kernel_op_3 * -0.25000000000000000 + 0.1127016653792583 ) *
                         ( -tmp_kernel_op_0 + tmp_kernel_op_3 * -0.25000000000000000 + 0.1127016653792583 ) ) *
                       16.0;
               _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] =
                   elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    1] = elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                            ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatDiag_3 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                      ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatDiag_4 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatDiag_5 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                      2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
            }
      }
   }
}
void P2ElementwiseBoundaryMass::computeInverseDiagonalOperatorValues_P2ElementwiseBoundaryMass_facet_id_2_macro_2D(
    walberla::float64* RESTRICT _data_invDiag_Edge,
    walberla::float64* RESTRICT _data_invDiag_Vertex,
    walberla::float64           macro_vertex_coord_id_0comp0,
    walberla::float64           macro_vertex_coord_id_0comp1,
    walberla::float64           macro_vertex_coord_id_1comp0,
    walberla::float64           macro_vertex_coord_id_1comp1,
    walberla::float64           macro_vertex_coord_id_2comp0,
    walberla::float64           macro_vertex_coord_id_2comp1,
    int64_t                     micro_edges_per_macro_edge,
    walberla::float64           micro_edges_per_macro_edge_float ) const
{
   {
      {
         /* FaceType.GRAY */
         const walberla::float64 tmp_coords_jac_0_GRAY = 1.0 / ( micro_edges_per_macro_edge_float ) * 1.0;
         const walberla::float64 p_affine_const_0_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 );
         const walberla::float64 p_affine_const_0_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 );
         const walberla::float64 p_affine_const_1_0_GRAY =
             macro_vertex_coord_id_0comp0 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 );
         const walberla::float64 p_affine_const_1_1_GRAY =
             macro_vertex_coord_id_0comp1 +
             tmp_coords_jac_0_GRAY * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 );
         const walberla::float64 p_affine_const_2_0_GRAY = macro_vertex_coord_id_0comp0;
         const walberla::float64 p_affine_const_2_1_GRAY = macro_vertex_coord_id_0comp1;
         const walberla::float64 jac_affine_0_0_GRAY     = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
         const walberla::float64 jac_affine_1_0_GRAY     = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
         for ( int64_t ctr_1 = 0; ctr_1 < micro_edges_per_macro_edge; ctr_1 += 1 )
            for ( int64_t ctr_0 = -ctr_1 + micro_edges_per_macro_edge - 1; ctr_0 < -ctr_1 + micro_edges_per_macro_edge;
                  ctr_0 += 1 )
            {
               const walberla::float64 p_affine_0_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_0_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 + 1 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_1_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_1_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 + 1 ) );
               const walberla::float64 p_affine_2_0 =
                   macro_vertex_coord_id_0comp0 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 p_affine_2_1 =
                   macro_vertex_coord_id_0comp1 +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_0 ) ) +
                   1.0 / ( micro_edges_per_macro_edge_float ) * ( -macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1 ) *
                       1.0 * ( ( walberla::float64 )( ctr_1 ) );
               const walberla::float64 tmp_kernel_op_0 = 0.012701665379258308;
               const walberla::float64 tmp_kernel_op_1 = tmp_kernel_op_0 * 2.0;
               const int64_t           tmp_kernel_op_2 = 0;
               const walberla::float64 tmp_kernel_op_3 = 0.1127016653792583 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const int64_t           tmp_kernel_op_4 = 0;
               const int64_t           tmp_kernel_op_5 = tmp_kernel_op_4 * 2;
               const int64_t           tmp_kernel_op_6 = tmp_kernel_op_5 + 1;
               const walberla::float64 tmp_kernel_op_7 = pow(
                   abs( ( jac_affine_0_0_GRAY * jac_affine_0_0_GRAY ) + ( jac_affine_1_0_GRAY * jac_affine_1_0_GRAY ) ), 0.5 );
               const walberla::float64 tmp_kernel_op_8  = tmp_kernel_op_7 * 0.27777777777777785;
               const walberla::float64 tmp_kernel_op_9  = 0.25;
               const walberla::float64 tmp_kernel_op_10 = tmp_kernel_op_9 * 2.0;
               const walberla::float64 tmp_kernel_op_11 = 0.5 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_12 = tmp_kernel_op_7 * 0.44444444444444442;
               const walberla::float64 tmp_kernel_op_13 = 0.78729833462074172;
               const walberla::float64 tmp_kernel_op_14 = tmp_kernel_op_13 * 2.0;
               const walberla::float64 tmp_kernel_op_15 = 0.8872983346207417 * ( ( walberla::float64 )( tmp_kernel_op_2 ) );
               const walberla::float64 tmp_kernel_op_16 = tmp_kernel_op_7 * 0.27777777777777785;
               const int64_t           tmp_kernel_op_17 = ( (int64_t) ( ( tmp_kernel_op_5 * tmp_kernel_op_5 ) ) );
               const int64_t           tmp_kernel_op_18 = tmp_kernel_op_4 * 16;
               const int64_t           tmp_kernel_op_19 = tmp_kernel_op_4 * 4;
               const walberla::float64 elMatDiag_0 =
                   tmp_kernel_op_12 *
                       ( ( tmp_kernel_op_10 * 0.66666666666666663 + tmp_kernel_op_11 * 0.66666666666666663 - 1.0 +
                           0.66666666666666663 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                         ( tmp_kernel_op_10 * 0.66666666666666663 + tmp_kernel_op_11 * 0.66666666666666663 - 1.0 +
                           0.66666666666666663 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) ) *
                       2.25 +
                   tmp_kernel_op_16 *
                       ( ( tmp_kernel_op_14 * 0.37567221793086103 + tmp_kernel_op_15 * 0.37567221793086103 - 1.0 +
                           0.37567221793086103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                         ( tmp_kernel_op_14 * 0.37567221793086103 + tmp_kernel_op_15 * 0.37567221793086103 - 1.0 +
                           0.37567221793086103 * ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) ) *
                       7.0856850115866754 +
                   tmp_kernel_op_8 * ( ( tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 +
                                         ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) *
                                       ( tmp_kernel_op_1 + tmp_kernel_op_3 - 0.33810499613777489 +
                                         ( ( walberla::float64 )( tmp_kernel_op_6 ) ) ) );
               const walberla::float64 elMatDiag_1 =
                   tmp_kernel_op_12 * ( ( tmp_kernel_op_10 - 0.5 ) * ( tmp_kernel_op_10 - 0.5 ) ) +
                   tmp_kernel_op_16 * ( ( tmp_kernel_op_14 - 0.8872983346207417 ) * ( tmp_kernel_op_14 - 0.8872983346207417 ) ) +
                   tmp_kernel_op_8 * ( ( tmp_kernel_op_1 - 0.1127016653792583 ) * ( tmp_kernel_op_1 - 0.1127016653792583 ) );
               const walberla::float64 elMatDiag_2 = tmp_kernel_op_12 * ( ( walberla::float64 )( tmp_kernel_op_17 ) ) +
                                                     tmp_kernel_op_16 * ( ( walberla::float64 )( tmp_kernel_op_17 ) ) +
                                                     tmp_kernel_op_8 * ( ( walberla::float64 )( tmp_kernel_op_17 ) );
               const walberla::float64 elMatDiag_3 =
                   tmp_kernel_op_0 * tmp_kernel_op_8 * ( ( walberla::float64 )( tmp_kernel_op_18 ) ) +
                   tmp_kernel_op_12 * tmp_kernel_op_9 * ( ( walberla::float64 )( tmp_kernel_op_18 ) ) +
                   tmp_kernel_op_13 * tmp_kernel_op_16 * ( ( walberla::float64 )( tmp_kernel_op_18 ) );
               const walberla::float64 elMatDiag_4 =
                   tmp_kernel_op_12 * ( ( -tmp_kernel_op_11 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                        ( -tmp_kernel_op_11 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) ) +
                   tmp_kernel_op_16 * ( ( -tmp_kernel_op_15 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                        ( -tmp_kernel_op_15 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) ) +
                   tmp_kernel_op_8 * ( ( -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) *
                                       ( -tmp_kernel_op_3 + ( ( walberla::float64 )( -tmp_kernel_op_19 ) ) ) );
               const walberla::float64 elMatDiag_5 =
                   tmp_kernel_op_12 *
                       ( ( tmp_kernel_op_11 * -0.25000000000000000 - tmp_kernel_op_9 + 0.5 ) *
                         ( tmp_kernel_op_11 * -0.25000000000000000 - tmp_kernel_op_9 + 0.5 ) ) *
                       16.0 +
                   tmp_kernel_op_16 *
                       ( ( -tmp_kernel_op_13 + tmp_kernel_op_15 * -0.25000000000000000 + 0.8872983346207417 ) *
                         ( -tmp_kernel_op_13 + tmp_kernel_op_15 * -0.25000000000000000 + 0.8872983346207417 ) ) *
                       16.0 +
                   tmp_kernel_op_8 *
                       ( ( -tmp_kernel_op_0 + tmp_kernel_op_3 * -0.25000000000000000 + 0.1127016653792583 ) *
                         ( -tmp_kernel_op_0 + tmp_kernel_op_3 * -0.25000000000000000 + 0.1127016653792583 ) ) *
                       16.0;
               _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                    1] = elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                                            ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) + 1];
               _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                    ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )] =
                   elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + ( ctr_1 + 1 ) * ( micro_edges_per_macro_edge + 2 ) -
                                                      ( ( ( ctr_1 + 1 ) * ( ctr_1 + 2 ) ) / ( 2 ) )];
               _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 2 ) -
                                                      ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatDiag_3 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                      2 * ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )] =
                   elMatDiag_4 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) )];
               _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                  ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )] =
                   elMatDiag_5 +
                   _data_invDiag_Edge[ctr_0 + ctr_1 * ( micro_edges_per_macro_edge + 1 ) - ( ( ctr_1 * ( ctr_1 + 1 ) ) / ( 2 ) ) +
                                      ( ( micro_edges_per_macro_edge * ( micro_edges_per_macro_edge + 1 ) ) / ( 2 ) )];
            }
      }
   }
}

} // namespace operatorgeneration

} // namespace hyteg
