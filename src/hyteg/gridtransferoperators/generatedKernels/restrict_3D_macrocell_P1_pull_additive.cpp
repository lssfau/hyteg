/*
 * Copyright (c) 2019 Nils Kohl, Dominik Thoennes.
 *
 * This file is part of HyTeG
 * (see https://i10git.cs.fau.de/hyteg/hyteg).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

//////////////////////////////////////////////////////////////////////////////
// This file is generated! To fix issues, please fix them in the generator. //
//////////////////////////////////////////////////////////////////////////////

#include "restrict_3D_macrocell_P1_pull_additive.hpp"

namespace hyteg {
namespace vertexdof {
namespace macrocell {
namespace generated {

static void restrict_3D_macrocell_P1_pull_additive_level_any(real_t * RESTRICT _data_vertexCoarseDst, real_t const * RESTRICT const _data_vertexFineSrc, int coarse_level, double num_neighbor_cells_edge0, double num_neighbor_cells_edge1, double num_neighbor_cells_edge2, double num_neighbor_cells_edge3, double num_neighbor_cells_edge4, double num_neighbor_cells_edge5, double num_neighbor_cells_face0, double num_neighbor_cells_face1, double num_neighbor_cells_face2, double num_neighbor_cells_face3, double num_neighbor_cells_vertex0, double num_neighbor_cells_vertex1, double num_neighbor_cells_vertex2, double num_neighbor_cells_vertex3)
{
   const double xi_21 = 1 / (num_neighbor_cells_edge0);
   const double xi_22 = 1 / (num_neighbor_cells_edge1);
   const double xi_23 = 1 / (num_neighbor_cells_edge3);
   const double xi_24 = 1 / (num_neighbor_cells_vertex0);
   const double xi_70 = 1 / (num_neighbor_cells_face0);
   const double xi_71 = 1 / (num_neighbor_cells_face1);
   const double xi_34 = 1 / (num_neighbor_cells_edge2);
   const double xi_35 = 1 / (num_neighbor_cells_edge4);
   const double xi_36 = 1 / (num_neighbor_cells_vertex1);
   const double xi_85 = 1 / (num_neighbor_cells_face2);
   const double xi_100 = 1 / (num_neighbor_cells_face3);
   const double xi_47 = 1 / (num_neighbor_cells_edge5);
   const double xi_48 = 1 / (num_neighbor_cells_vertex2);
   const double xi_60 = 1 / (num_neighbor_cells_vertex3);
   {
      for (int ctr_3 = 0; ctr_3 < 1; ctr_3 += 1)
      {
         for (int ctr_2 = 0; ctr_2 < 1; ctr_2 += 1)
         {
            // vertex 0
            for (int ctr_1 = 0; ctr_1 < 1; ctr_1 += 1)
            {
               const double xi_26 = xi_21*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_27 = xi_22*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_28 = xi_23*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_29 = 1.0*xi_24*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_26 + xi_27 + xi_28 + xi_29;
            }
            // edge 0
            for (int ctr_1 = 1; ctr_1 < (1 << (coarse_level)); ctr_1 += 1)
            {
               const double xi_73 = xi_21*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_74 = xi_21*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_79 = 1.0*xi_21*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_75 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_76 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_77 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_78 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_73 + xi_74 + xi_75 + xi_76 + xi_77 + xi_78 + xi_79;
            }
            // vertex 1
            for (int ctr_1 = (1 << (coarse_level)); ctr_1 < (1 << (coarse_level)) + 1; ctr_1 += 1)
            {
               const double xi_38 = xi_21*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_39 = xi_34*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_40 = xi_35*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_41 = 1.0*xi_36*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_38 + xi_39 + xi_40 + xi_41;
            }
         }
         for (int ctr_2 = 1; ctr_2 < -ctr_3 + (1 << (coarse_level)); ctr_2 += 1)
         {
            // edge 1
            for (int ctr_1 = 0; ctr_1 < 1; ctr_1 += 1)
            {
               const double xi_87 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_88 = xi_22*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_89 = xi_22*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_94 = 1.0*xi_22*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_90 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_91 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_92 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_93 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_87 + xi_88 + xi_89 + xi_90 + xi_91 + xi_92 + xi_93 + xi_94;
            }
            // face 0
            for (int ctr_1 = 1; ctr_1 < -ctr_2 + (1 << (coarse_level)); ctr_1 += 1)
            {
               const double xi_157 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_158 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_159 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_160 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_161 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_162 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_163 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_164 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_165 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_166 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_167 = 1.0*xi_70*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_157 + xi_158 + xi_159 + xi_160 + xi_161 + xi_162 + xi_163 + xi_164 + xi_165 + xi_166 + xi_167;
            }
            // edge 2
            for (int ctr_1 = -ctr_2 + (1 << (coarse_level)); ctr_1 < -ctr_2 + (1 << (coarse_level)) + 1; ctr_1 += 1)
            {
               const double xi_104 = xi_34*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_105 = xi_34*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_108 = 1.0*xi_34*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_106 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_107 = xi_70*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_102 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_103 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_102 + xi_103 + xi_104 + xi_105 + xi_106 + xi_107 + xi_108;
            }
         }
         for (int ctr_2 = -ctr_3 + (1 << (coarse_level)); ctr_2 < -ctr_3 + (1 << (coarse_level)) + 1; ctr_2 += 1)
         {
            // vertex 2
            for (int ctr_1 = 0; ctr_1 < 1; ctr_1 += 1)
            {
               const double xi_50 = xi_22*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_51 = xi_34*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_52 = xi_47*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_53 = 1.0*xi_48*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_50 + xi_51 + xi_52 + xi_53;
            }
         }
      }
      for (int ctr_3 = 1; ctr_3 < (1 << (coarse_level)); ctr_3 += 1)
      {
         for (int ctr_2 = 0; ctr_2 < 1; ctr_2 += 1)
         {
            // edge 3
            for (int ctr_1 = 0; ctr_1 < 1; ctr_1 += 1)
            {
               const double xi_116 = xi_23*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_117 = xi_23*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_122 = 1.0*xi_23*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_118 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) + 1];
               const double xi_119 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_120 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_121 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_116 + xi_117 + xi_118 + xi_119 + xi_120 + xi_121 + xi_122;
            }
            // face 1
            for (int ctr_1 = 1; ctr_1 < -ctr_3 + (1 << (coarse_level)); ctr_1 += 1)
            {
               const double xi_173 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) - 1];
               const double xi_174 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_175 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_176 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_177 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_178 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_179 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_180 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_181 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) + 1];
               const double xi_182 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_183 = 1.0*xi_71*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_173 + xi_174 + xi_175 + xi_176 + xi_177 + xi_178 + xi_179 + xi_180 + xi_181 + xi_182 + xi_183;
            }
            // edge 4
            for (int ctr_1 = -ctr_3 + (1 << (coarse_level)); ctr_1 < -ctr_3 + (1 << (coarse_level)) + 1; ctr_1 += 1)
            {
               const double xi_130 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) - 1];
               const double xi_131 = xi_35*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_132 = xi_35*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) + 1];
               const double xi_137 = 1.0*xi_35*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_133 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_134 = xi_71*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_135 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_136 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_130 + xi_131 + xi_132 + xi_133 + xi_134 + xi_135 + xi_136 + xi_137;
            }
         }
         for (int ctr_2 = 1; ctr_2 < -ctr_3 + (1 << (coarse_level)); ctr_2 += 1)
         {
            // face 2
            for (int ctr_1 = 0; ctr_1 < 1; ctr_1 += 1)
            {
               const double xi_189 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_190 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_191 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) + 1];
               const double xi_192 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_193 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_194 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_195 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_196 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_197 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_198 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_199 = 1.0*xi_85*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_189 + xi_190 + xi_191 + xi_192 + xi_193 + xi_194 + xi_195 + xi_196 + xi_197 + xi_198 + xi_199;
            }
            // cell (inner)
            for (int ctr_1 = 1; ctr_1 < -ctr_2 - ctr_3 + (1 << (coarse_level)); ctr_1 += 1)
            {
               const double xi_3 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_4 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_5 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) - 1];
               const double xi_6 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_7 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_8 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_9 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_10 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_11 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_12 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_13 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_14 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_15 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) + 1];
               const double xi_16 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_17 = 1.0*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_10 + xi_11 + xi_12 + xi_13 + xi_14 + xi_15 + xi_16 + xi_17 + xi_3 + xi_4 + xi_5 + xi_6 + xi_7 + xi_8 + xi_9;
            }
            // face 3
            for (int ctr_1 = -ctr_2 - ctr_3 + (1 << (coarse_level)); ctr_1 < -ctr_2 - ctr_3 + (1 << (coarse_level)) + 1; ctr_1 += 1)
            {
               const double xi_205 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_206 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) - 1];
               const double xi_207 = 0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_208 = 0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_209 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_210 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) - 1];
               const double xi_211 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_212 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_213 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_214 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) + 1];
               const double xi_215 = 1.0*xi_100*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_205 + xi_206 + xi_207 + xi_208 + xi_209 + xi_210 + xi_211 + xi_212 + xi_213 + xi_214 + xi_215;
            }
         }
         for (int ctr_2 = -ctr_3 + (1 << (coarse_level)); ctr_2 < -ctr_3 + (1 << (coarse_level)) + 1; ctr_2 += 1)
         {
            // edge 5
            for (int ctr_1 = 0; ctr_1 < 1; ctr_1 += 1)
            {
               const double xi_145 = xi_47*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) - (((-2*ctr_3 + (1 << (coarse_level + 1)))*(-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)) / (6)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_146 = xi_47*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_151 = 1.0*xi_47*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_147 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               const double xi_148 = xi_85*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_149 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 - 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 - 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6)) + 1];
               const double xi_150 = xi_100*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) + 1];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_145 + xi_146 + xi_147 + xi_148 + xi_149 + xi_150 + xi_151;
            }
         }
      }
      for (int ctr_3 = (1 << (coarse_level)); ctr_3 < (1 << (coarse_level)) + 1; ctr_3 += 1)
      {
         for (int ctr_2 = 0; ctr_2 < 1; ctr_2 += 1)
         {
            // vertex 3
            for (int ctr_1 = 0; ctr_1 < 1; ctr_1 += 1)
            {
               const double xi_62 = xi_23*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_63 = xi_35*0.5*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6)) + 1];
               const double xi_64 = xi_47*0.5*_data_vertexFineSrc[2*ctr_1 + (2*ctr_2 + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3) - (((2*ctr_2 + 1)*(2*ctr_2 + 2)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 4)) / (6))];
               const double xi_65 = 1.0*xi_60*_data_vertexFineSrc[2*ctr_1 + 2*ctr_2*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2) - ((2*ctr_2*(2*ctr_2 + 1)) / (2)) + ((((1 << (coarse_level + 1)) + 1)*((1 << (coarse_level + 1)) + 2)*((1 << (coarse_level + 1)) + 3)) / (6)) - (((-2*ctr_3 + (1 << (coarse_level + 1)) + 1)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 2)*(-2*ctr_3 + (1 << (coarse_level + 1)) + 3)) / (6))];
               _data_vertexCoarseDst[ctr_1 + ctr_2*(-ctr_3 + (1 << (coarse_level)) + 2) - ((ctr_2*(ctr_2 + 1)) / (2)) + ((((1 << (coarse_level)) + 1)*((1 << (coarse_level)) + 2)*((1 << (coarse_level)) + 3)) / (6)) - (((-ctr_3 + (1 << (coarse_level)) + 1)*(-ctr_3 + (1 << (coarse_level)) + 2)*(-ctr_3 + (1 << (coarse_level)) + 3)) / (6))] = xi_62 + xi_63 + xi_64 + xi_65;
            }
         }
      }
   }
}


void restrict_3D_macrocell_P1_pull_additive(real_t * RESTRICT _data_vertexCoarseDst, real_t const * RESTRICT const _data_vertexFineSrc, int coarse_level, double num_neighbor_cells_edge0, double num_neighbor_cells_edge1, double num_neighbor_cells_edge2, double num_neighbor_cells_edge3, double num_neighbor_cells_edge4, double num_neighbor_cells_edge5, double num_neighbor_cells_face0, double num_neighbor_cells_face1, double num_neighbor_cells_face2, double num_neighbor_cells_face3, double num_neighbor_cells_vertex0, double num_neighbor_cells_vertex1, double num_neighbor_cells_vertex2, double num_neighbor_cells_vertex3)
{
    switch( coarse_level )
    {

    default:
        restrict_3D_macrocell_P1_pull_additive_level_any(_data_vertexCoarseDst, _data_vertexFineSrc, coarse_level, num_neighbor_cells_edge0, num_neighbor_cells_edge1, num_neighbor_cells_edge2, num_neighbor_cells_edge3, num_neighbor_cells_edge4, num_neighbor_cells_edge5, num_neighbor_cells_face0, num_neighbor_cells_face1, num_neighbor_cells_face2, num_neighbor_cells_face3, num_neighbor_cells_vertex0, num_neighbor_cells_vertex1, num_neighbor_cells_vertex2, num_neighbor_cells_vertex3);
        break;
    }
}
    

} // namespace generated
} // namespace macrocell
} // namespace vertexdof
} // namespace hyteg